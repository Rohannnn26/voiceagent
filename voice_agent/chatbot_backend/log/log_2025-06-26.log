2025-06-26 12:39:47,813 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 62] --> Trading Agent Call.
2025-06-26 12:39:47,814 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 90] --> Report Agent Call.
2025-06-26 12:39:47,818 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 131] --> Account Agent Call.
2025-06-26 12:39:47,819 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 173] --> Information Centre Agent Call.
2025-06-26 12:39:47,820 mlscoringinference [INFO | assistant_tool.py : FundAgent : 204] --> Fund Agent Call.
2025-06-26 12:39:47,821 mlscoringinference [INFO | assistant_tool.py : DPAgent : 231] --> DP Agent Call.
2025-06-26 12:39:47,843 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 12:39:48,330 mlscoringinference [INFO | langgraph_builder.py : <module> : 75] --> Rannnable Importing.
2025-06-26 12:39:48,338 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 12:39:48,339 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 12:39:48,344 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:39:48,352 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 12:39:48,353 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 12:39:48,353 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 12:39:48,357 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:39:48,361 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 12:39:48,362 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 12:39:48,362 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 12:39:48,364 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:39:48,370 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 12:39:48,370 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 12:39:48,371 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 12:39:48,372 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:39:48,376 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 12:39:48,377 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 12:39:48,377 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 12:39:48,379 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 12:39:48,391 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 44] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 12:39:48,392 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 12:39:48,392 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 12:39:48,394 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:39:48,400 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for combine created successfully.
2025-06-26 12:39:48,400 mlscoringinference [INFO | langgraph_builder.py : <module> : 86] --> Rannnable for all agents created successfully.
2025-06-26 12:39:48,576 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 12:39:48,576 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 12:39:48,579 mlscoringinference [INFO | redis_client.py : _connect : 40] --> Connecting to Redis...
2025-06-26 12:39:48,580 mlscoringinference [INFO | redis_client.py : _connect : 50] --> Redis connection established successfully.
2025-06-26 12:39:48,580 mlscoringinference [INFO | redis_client.py : __init__ : 23] --> Connected to Redis at master.mofsl-chatbot-dev-valkey.xfjxmr.aps1.cache.amazonaws.com in dev environment.
2025-06-26 12:39:48,580 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 12:39:48,582 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 12:40:29,318 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='W56rzfovreBIMnX0o6UeERZ' client_id='NAGSYA5' role='CLIENT' token='c55e248a-ddc8-4c89-be59-ba423a7a42e3' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 12:40:29,319 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 12:40:29,896 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: W56rzfovreBIMnX0o6UeERZ, found: No
2025-06-26 12:40:29,915 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: W56rzfovreBIMnX0o6UeERZ, found: No
2025-06-26 12:40:29,933 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 12:40:29,936 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 12:41:00,342 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 62] --> Trading Agent Call.
2025-06-26 12:41:00,343 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 90] --> Report Agent Call.
2025-06-26 12:41:00,345 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 131] --> Account Agent Call.
2025-06-26 12:41:00,347 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 173] --> Information Centre Agent Call.
2025-06-26 12:41:00,348 mlscoringinference [INFO | assistant_tool.py : FundAgent : 204] --> Fund Agent Call.
2025-06-26 12:41:00,349 mlscoringinference [INFO | assistant_tool.py : DPAgent : 231] --> DP Agent Call.
2025-06-26 12:41:00,368 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 12:41:00,795 mlscoringinference [INFO | langgraph_builder.py : <module> : 75] --> Rannnable Importing.
2025-06-26 12:41:00,798 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 12:41:00,799 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 12:41:00,801 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:41:00,806 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 12:41:00,807 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 12:41:00,807 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 12:41:00,809 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:41:00,814 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 12:41:00,815 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 12:41:00,815 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 12:41:00,816 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:41:00,820 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 12:41:00,821 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 12:41:00,821 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 12:41:00,822 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:41:00,826 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 12:41:00,829 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 12:41:00,829 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 12:41:00,831 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 12:41:00,841 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 44] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 12:41:00,844 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 12:41:00,845 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 12:41:00,848 mlscoringinference [INFO | react_agent.py : get_runnable_react : 40] --> API Specification loaded.
2025-06-26 12:41:00,852 mlscoringinference [INFO | react_agent.py : get_runnable_react : 46] --> React agent runnable for combine created successfully.
2025-06-26 12:41:00,852 mlscoringinference [INFO | langgraph_builder.py : <module> : 86] --> Rannnable for all agents created successfully.
2025-06-26 12:41:01,033 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 12:41:01,033 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 12:41:01,036 mlscoringinference [INFO | redis_client.py : _connect : 40] --> Connecting to Redis...
2025-06-26 12:41:01,037 mlscoringinference [INFO | redis_client.py : _connect : 50] --> Redis connection established successfully.
2025-06-26 12:41:01,037 mlscoringinference [INFO | redis_client.py : __init__ : 23] --> Connected to Redis at master.mofsl-chatbot-dev-valkey.xfjxmr.aps1.cache.amazonaws.com in dev environment.
2025-06-26 12:41:01,037 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 12:41:01,039 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 12:41:05,959 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='gY2FCcMhXFWVh8Bq6SaC8Il' client_id='NAGSYA5' role='CLIENT' token='ec055024-c7f8-48c5-ab38-a90c68083dde' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 12:41:05,960 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 12:41:06,412 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: gY2FCcMhXFWVh8Bq6SaC8Il, found: No
2025-06-26 12:41:06,431 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: gY2FCcMhXFWVh8Bq6SaC8Il, found: No
2025-06-26 12:41:06,450 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 12:41:06,455 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 12:41:07,826 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='gY2FCcMhXFWVh8Bq6SaC8Il' client_id='NAGSYA5' role='CLIENT' token='ec055024-c7f8-48c5-ab38-a90c68083dde' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 12:41:07,829 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 12:41:07,850 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: gY2FCcMhXFWVh8Bq6SaC8Il, found: Yes
2025-06-26 12:41:07,869 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: gY2FCcMhXFWVh8Bq6SaC8Il, found: Yes
2025-06-26 12:41:07,888 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 12:41:07,890 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 12:41:19,663 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='RDEWANGHAR' session_id='B51Sf6nMbk2LL5HqwfrlQ7Z' client_id='' role='' token='ed64c83f-dbed-44ac-a590-faa2bbb197c5' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 12:41:19,664 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 12:41:19,687 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: B51Sf6nMbk2LL5HqwfrlQ7Z, found: No
2025-06-26 12:41:19,708 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: B51Sf6nMbk2LL5HqwfrlQ7Z, found: No
2025-06-26 12:41:19,726 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 12:41:19,727 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 12:48:06,688 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='RDEWANGHAR' session_id='ftbx45jSgAKHITIlktPccXJ' client_id='' role='SUBBROKER' token='6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 12:48:06,689 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 12:48:06,711 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ, found: No
2025-06-26 12:48:06,729 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ, found: No
2025-06-26 12:48:06,750 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 12:48:06,752 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 12:48:11,606 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='RDEWANGHAR' session_id='ftbx45jSgAKHITIlktPccXJ' client_id='' role='SUBBROKER' token='6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='my_details', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 12:48:11,608 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 12:48:11,629 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ, found: Yes
2025-06-26 12:48:11,648 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ, found: Yes
2025-06-26 12:48:11,649 mlscoringinference [INFO | chatbot_navigator.py : navigate : 86] --> session data: {'user_id': 'RDEWANGHAR', 'role': 'SUBBROKER', 'input_params': {'action': 'initial', 'response_text': 'Welcome to your Mo Gini assistant. How can I help you today?', 'available_choices': [{'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'Client Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_partner', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'faq', 'text': 'FAQ'}, {'id': 'new_account_opening', 'text': 'New Account Opening'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'acount_modification_status', 'text': 'Account Status'}, {'id': 'acount_modification_status', 'text': 'Modification Status'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}], 'id': 'initial_partner'}, 'last_updated': '2025-06-26T07:18:06.711884', 'history_stack': []}
2025-06-26 12:48:11,687 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:11,724 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:11,761 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:11,798 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:11,835 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:11,853 mlscoringinference [INFO | chatbot_session.py : update_header : 264] --> Updated user data: {'user_id': 'RDEWANGHAR', 'session_id': 'ftbx45jSgAKHITIlktPccXJ', 'client_id': '', 'role': 'SUBBROKER', 'token': '6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d', 'interaction': {'type': 'DETERMINISTIC_FLOW', 'attachement': '', 'input': {'text': None, 'id': 'my_details', 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': None}}
2025-06-26 12:48:11,872 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:11,873 mlscoringinference [INFO | chatbot_session.py : get_api_paylods : 241] --> get_api_paylods: {'api_payloads': {'user_id': 'RDEWANGHAR', 'client_id': '', 'role': 'SUBBROKER', 'token': '6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d', 'session_id': 'ftbx45jSgAKHITIlktPccXJ', 'api_endpoint': 'my_details'}, 'last_updated': '2025-06-26T07:18:11.835124'}
2025-06-26 12:48:11,873 mlscoringinference [INFO | chatbot_session.py : order_type : 406] --> No segment mapping found for click id: my_details
2025-06-26 12:48:11,873 mlscoringinference [WARNING | chatbot_session.py : account_opening_partner : 381] --> Unknown click_id: my_details
2025-06-26 12:48:11,874 mlscoringinference [INFO | chatbot_navigator.py : get_client_id_input_state : 47] --> Client id Ask...!
2025-06-26 12:48:11,874 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 12:48:11,875 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 12:48:31,462 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='RDEWANGHAR' session_id='ftbx45jSgAKHITIlktPccXJ' client_id='' role='SUBBROKER' token='6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text='R07146', id='client_id_my_details', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 12:48:31,464 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 12:48:31,485 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ, found: Yes
2025-06-26 12:48:31,504 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ, found: Yes
2025-06-26 12:48:31,504 mlscoringinference [INFO | chatbot_navigator.py : navigate : 86] --> session data: {'user_id': 'RDEWANGHAR', 'role': 'SUBBROKER', 'input_params': {'action': 'initial', 'response_text': 'Welcome to your Mo Gini assistant. How can I help you today?', 'available_choices': [{'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'Client Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_partner', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'faq', 'text': 'FAQ'}, {'id': 'new_account_opening', 'text': 'New Account Opening'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'acount_modification_status', 'text': 'Account Status'}, {'id': 'acount_modification_status', 'text': 'Modification Status'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}], 'id': 'initial_partner'}, 'last_updated': '2025-06-26T07:18:06.711884', 'history_stack': []}
2025-06-26 12:48:31,525 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:31,562 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:31,598 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:31,635 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:31,672 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:31,690 mlscoringinference [INFO | chatbot_session.py : update_header : 264] --> Updated user data: {'user_id': 'RDEWANGHAR', 'session_id': 'ftbx45jSgAKHITIlktPccXJ', 'client_id': '', 'role': 'SUBBROKER', 'token': '6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d', 'interaction': {'type': 'DETERMINISTIC_FLOW', 'attachement': '', 'input': {'text': 'R07146', 'id': 'client_id_my_details', 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': None}}
2025-06-26 12:48:31,709 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: ftbx45jSgAKHITIlktPccXJ_api_payload, found: Yes
2025-06-26 12:48:31,710 mlscoringinference [INFO | chatbot_session.py : get_api_paylods : 241] --> get_api_paylods: {'api_payloads': {'user_id': 'RDEWANGHAR', 'client_id': '', 'role': 'SUBBROKER', 'token': '6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d', 'session_id': 'ftbx45jSgAKHITIlktPccXJ', 'api_endpoint': 'my_details'}, 'last_updated': '2025-06-26T07:18:31.672123'}
2025-06-26 12:48:31,710 mlscoringinference [INFO | chatbot_session.py : order_type : 406] --> No segment mapping found for click id: client_id_my_details
2025-06-26 12:48:31,710 mlscoringinference [WARNING | chatbot_session.py : account_opening_partner : 381] --> Unknown click_id: client_id_my_details
2025-06-26 12:48:31,711 mlscoringinference [INFO | chatbot_validator.py : verify_client_code : 39] --> CLIENT API PARAMS - {'session_id': 'ftbx45jSgAKHITIlktPccXJ', 'token': '6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d', 'user_id': 'RDEWANGHAR', 'client_id': 'R07146', 'role': 'SUBBROKER'}
2025-06-26 12:48:31,711 mlscoringinference [DEBUG | chatbot_validator.py : verify_client_code : 42] --> Client validation params: {'session_id': 'ftbx45jSgAKHITIlktPccXJ', 'token': '6ca42ab7-b8c6-4523-b223-a1d7dc14fe0d', 'user_id': 'RDEWANGHAR', 'client_id': 'R07146', 'role': 'SUBBROKER'}!
2025-06-26 12:48:31,799 mlscoringinference [ERROR | chatbot_service.py : get_chatbot_response : 112] --> Error processing chatbot response: 'message'
Traceback (most recent call last):
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\app\services\chatbot_service.py", line 88, in get_chatbot_response
    response = engine.handle_input(payload.dict())
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\engine\deterministic_engine.py", line 42, in handle_input
    return self.navigator.navigate(session_id, user_id, role, click_id, user_data)
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\engine\navigators\chatbot_navigator.py", line 99, in navigate
    click_id = self.chatbot_special_navigator_handler.dispatch_special_handlers(sess, user_data, click_id)
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\engine\navigators\special_handler_navigator.py", line 66, in dispatch_special_handlers
    return handler(session_id, user_data, click_id)
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\engine\navigators\special_handler_navigator.py", line 29, in _handle_client_id_input
    if self.validator.verify_client_code(user_data):
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\engine\special_validators\chatbot_validator.py", line 48, in verify_client_code
    if response["message"] == "Valid Client":
KeyError: 'message'
2025-06-26 14:52:24,549 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-06-26 14:52:24,618 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-06-26 14:52:24,619 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-06-26 14:52:24,622 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-06-26 14:52:24,623 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 135] --> Information Centre Agent Call.
2025-06-26 14:52:24,623 mlscoringinference [INFO | assistant_tool.py : FundAgent : 166] --> Fund Agent Call.
2025-06-26 14:52:24,624 mlscoringinference [INFO | assistant_tool.py : DPAgent : 193] --> DP Agent Call.
2025-06-26 14:52:24,643 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 14:52:24,644 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 14:52:24,649 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 14:52:24,663 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 14:52:24,664 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 14:52:24,664 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 14:52:24,670 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 14:52:24,671 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 14:52:24,675 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 14:52:24,713 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 14:52:24,719 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 14:52:24,720 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 14:52:24,720 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 14:52:24,720 mlscoringinference [INFO | langgraph_builder.py : <module> : 71] --> ChatBedrockConverse model initialized successfully
2025-06-26 14:52:24,721 mlscoringinference [INFO | langgraph_builder.py : <module> : 73] --> Rannnable Importing.
2025-06-26 14:52:24,727 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 14:52:24,727 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 14:52:24,731 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 14:52:24,740 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 14:52:24,740 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 14:52:24,741 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 14:52:24,742 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-06-26 14:52:24,743 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 14:52:24,748 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 14:52:24,749 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 14:52:24,750 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 14:52:24,751 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 14:52:24,756 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 14:52:24,756 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 14:52:24,756 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 14:52:24,757 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 14:52:24,762 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 14:52:24,764 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 14:52:24,764 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 14:52:24,766 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 14:52:24,766 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-06-26 14:52:24,777 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 14:52:24,779 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 14:52:24,779 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 14:52:24,781 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 14:52:24,785 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-06-26 14:52:24,786 mlscoringinference [INFO | langgraph_builder.py : <module> : 84] --> Rannnable for all agents created successfully.
2025-06-26 14:52:24,962 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 14:52:24,963 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 14:52:24,965 mlscoringinference [INFO | redis_client.py : _connect : 40] --> Connecting to Redis...
2025-06-26 14:52:24,966 mlscoringinference [INFO | redis_client.py : _connect : 50] --> Redis connection established successfully.
2025-06-26 14:52:24,967 mlscoringinference [INFO | redis_client.py : __init__ : 23] --> Connected to Redis at master.mofsl-chatbot-dev-valkey.xfjxmr.aps1.cache.amazonaws.com in dev environment.
2025-06-26 14:52:24,967 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 14:52:24,968 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 14:52:35,620 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='C3egELO9IC6rlJAoJ97B47c' client_id='NAGSYA5' role='CLIENT' token='1d6028e8-22c2-49d1-85d7-bba45dafb0dc' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 14:52:35,622 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 14:52:36,102 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: C3egELO9IC6rlJAoJ97B47c, found: No
2025-06-26 14:52:36,120 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: C3egELO9IC6rlJAoJ97B47c, found: No
2025-06-26 14:52:36,139 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 14:52:36,142 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 14:52:44,804 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='C3egELO9IC6rlJAoJ97B47c' client_id='NAGSYA5' role='CLIENT' token='1d6028e8-22c2-49d1-85d7-bba45dafb0dc' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='what is DIS?', id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 14:52:45,041 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 94] --> Graph State define Initiated.
2025-06-26 14:52:45,043 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 96] --> Graph State define Successfull.
2025-06-26 14:52:45,044 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 99] --> Defining nodes in the graph.
2025-06-26 14:52:45,045 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 106] --> Registering agents and tools in the graph.
2025-06-26 14:52:45,113 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 159] --> Adding edges to the graph.
2025-06-26 14:52:45,115 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 202] --> LangGraph Supervisor created successfully.
2025-06-26 14:52:45,150 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 106] --> PostgreSQL connection established for LangGraph execution.
2025-06-26 14:52:45,150 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : None
2025-06-26 14:52:45,195 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-de3d7dfc-01dc-436b-8ee4-5a751366f38a
2025-06-26 14:52:45,196 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-de3d7dfc-01dc-436b-8ee4-5a751366f38a
2025-06-26 14:52:45,199 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'what is DIS?'
2025-06-26 14:52:45,228 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 7
2025-06-26 14:52:45,244 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 22] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='1bdaecb6-da36-4c53-a271-d25d5e7cd474')]
2025-06-26 14:52:45,244 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 24] --> Assistance started..
2025-06-26 14:52:47,858 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 36] --> Assistance Break.
2025-06-26 14:52:47,859 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assitance completed.
2025-06-26 14:52:47,864 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 13] --> Primary Router function Activated.
2025-06-26 14:52:47,865 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 22] --> Primary Router state Routed to : InformationCentreAgent.
2025-06-26 14:52:47,869 mlscoringinference [INFO | information_center_agent.py : __call__ : 57] --> Information react agent initiated...
2025-06-26 14:52:47,870 mlscoringinference [INFO | state_utils.py : inject_tool_message : 22] --> Tool message injection Initiated.
2025-06-26 14:52:47,871 mlscoringinference [INFO | state_utils.py : inject_tool_message : 43] --> Tool message for InformationCentreAgent injected successfully
2025-06-26 14:52:47,871 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 118
2025-06-26 14:52:47,872 mlscoringinference [INFO | information_center_agent.py : __call__ : 67] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='1bdaecb6-da36-4c53-a271-d25d5e7cd474'), AIMessage(content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'what is DIS?'}, 'id': 'tooluse_KAhC5fv5RoyUnHckO6jURA'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '7fb0d03d-8e65-41e3-82db-6eeaddb0d437', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:22:48 GMT', 'content-type': 'application/json', 'content-length': '304', 'connection': 'keep-alive', 'x-amzn-requestid': '7fb0d03d-8e65-41e3-82db-6eeaddb0d437'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2051]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--5b1913d5-a5a1-4e91-9059-021645764bd2-0', tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'what is DIS?'}, 'id': 'tooluse_KAhC5fv5RoyUnHckO6jURA', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3129, 'output_tokens': 62, 'total_tokens': 3191, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the InformationCentreAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are InformationCentreAgent, Do not mention who you are - just act as the proxy for the assistant.', tool_call_id='tooluse_KAhC5fv5RoyUnHckO6jURA')]
2025-06-26 14:52:47,872 mlscoringinference [INFO | information_center_agent.py : __call__ : 79] --> Invoking Information React agent with inputs...
2025-06-26 14:52:51,502 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Information React agent invoked successfully.
2025-06-26 14:52:51,503 mlscoringinference [INFO | information_center_agent.py : __call__ : 94] --> Assistance Break.
2025-06-26 14:52:51,507 mlscoringinference [INFO | information_center_agent.py : __call__ : 97] --> Information react agent completed.
2025-06-26 14:52:51,511 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 96] --> Information Dynamic Router function Activated.
2025-06-26 14:52:51,883 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 136] --> FAQ retrieval tool initialized with AWS Knowledge Base
2025-06-26 14:52:51,883 mlscoringinference [DEBUG | react_tool.py : faq_knowledge_base : 138] --> Retrieving FAQ context for question: what is DIS?
2025-06-26 14:52:53,118 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 145] --> Retrieved 2 relevant FAQ documents
2025-06-26 14:52:53,127 mlscoringinference [INFO | information_center_agent.py : __call__ : 57] --> Information react agent initiated...
2025-06-26 14:52:53,129 mlscoringinference [INFO | state_utils.py : inject_tool_message : 22] --> Tool message injection Initiated.
2025-06-26 14:52:53,130 mlscoringinference [INFO | state_utils.py : inject_tool_message : 26] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-06-26 14:52:53,130 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 377
2025-06-26 14:52:53,134 mlscoringinference [INFO | information_center_agent.py : __call__ : 67] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='1bdaecb6-da36-4c53-a271-d25d5e7cd474'), AIMessage(content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'what is DIS?'}, 'id': 'tooluse_KAhC5fv5RoyUnHckO6jURA'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '7fb0d03d-8e65-41e3-82db-6eeaddb0d437', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:22:48 GMT', 'content-type': 'application/json', 'content-length': '304', 'connection': 'keep-alive', 'x-amzn-requestid': '7fb0d03d-8e65-41e3-82db-6eeaddb0d437'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2051]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--5b1913d5-a5a1-4e91-9059-021645764bd2-0', tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'what is DIS?'}, 'id': 'tooluse_KAhC5fv5RoyUnHckO6jURA', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3129, 'output_tokens': 62, 'total_tokens': 3191, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the InformationCentreAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are InformationCentreAgent, Do not mention who you are - just act as the proxy for the assistant.', id='153772bd-1412-4a8f-adec-2486128b87b4', tool_call_id='tooluse_KAhC5fv5RoyUnHckO6jURA'), AIMessage(content=[{'type': 'text', 'text': 'Thought: The query "what is DIS?" seems to be asking about some acronym or term related to financial services. To provide a relevant answer, I should first check if the faq_knowledge_base tool has any information about "DIS".'}, {'type': 'tool_use', 'name': 'faq_knowledge_base', 'input': {'question': 'what is DIS?'}, 'id': 'tooluse_OWCGpQE_QzyPaTvcGj5sWw'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'cf378487-bb20-4884-9b33-7e84d9e46564', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:22:51 GMT', 'content-type': 'application/json', 'content-length': '539', 'connection': 'keep-alive', 'x-amzn-requestid': 'cf378487-bb20-4884-9b33-7e84d9e46564'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [3583]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--5a179846-3eb2-41a1-8236-ea79944ddd44-0', tool_calls=[{'name': 'faq_knowledge_base', 'args': {'question': 'what is DIS?'}, 'id': 'tooluse_OWCGpQE_QzyPaTvcGj5sWw', 'type': 'tool_call'}], usage_metadata={'input_tokens': 2780, 'output_tokens': 115, 'total_tokens': 2895, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='{"question": "What is a DIS?", "answer": "A DIS  is  a  Delivery  Instruction  Slip.  It  can be used to transfer shares from one \\n    Demat account to another demat account just like a cheque is used to transfer funds \\n    from one bank account to another bank account."}\n\n{"question": "What is a DIS and why is it required?\\n", "answer": "DIS  is  a  Delivery  Instruction  Slip. It  is  required to transfer shares from one demat account to another demat account just like a cheque is used to transfer funds from one bank account to another bank account."}', name='faq_knowledge_base', id='2156c79d-4578-4e1e-85d3-4620e10048dc', tool_call_id='tooluse_OWCGpQE_QzyPaTvcGj5sWw')]
2025-06-26 14:52:53,135 mlscoringinference [INFO | information_center_agent.py : __call__ : 79] --> Invoking Information React agent with inputs...
2025-06-26 14:52:57,918 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Information React agent invoked successfully.
2025-06-26 14:52:57,918 mlscoringinference [INFO | information_center_agent.py : __call__ : 94] --> Assistance Break.
2025-06-26 14:52:57,923 mlscoringinference [INFO | information_center_agent.py : __call__ : 97] --> Information react agent completed.
2025-06-26 14:52:57,925 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 96] --> Information Dynamic Router function Activated.
2025-06-26 14:52:57,929 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 150] --> Starting FAQ grounding messages extraction...
2025-06-26 14:52:57,931 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 159] --> Extracted response text from last message: Found
2025-06-26 14:52:57,932 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 163] --> FAQ adjacent message is from the FAQ knowledge base.
2025-06-26 14:52:57,933 mlscoringinference [INFO | final_response_node.py : extract_message_content : 74] --> Extracted message content at position -2
2025-06-26 14:52:57,934 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 166] --> Proceeding with contextual grounding validation
2025-06-26 14:52:57,934 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 70] --> Validating grounding for chatbot response...
2025-06-26 14:53:00,533 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 78] --> Grounding validation complete
2025-06-26 14:53:00,533 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 174] --> Grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'dialogue_continuity': 'Coherent', 'issues': 'The response directly answers the query by explaining what DIS stands for and its purpose in transferring shares between demat accounts. The information is clearly grounded in the provided context chunk.'}
2025-06-26 14:53:00,536 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 91] --> Grounding validation criteria: Query relevance: High, Chunk alignment: Aligned, Dialogue continuity: Coherent
2025-06-26 14:53:00,537 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 100] --> Grounding validation result: Pass
2025-06-26 14:53:00,537 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 178] --> Grounding validation passed successfully
2025-06-26 14:53:00,585 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-06-26 14:53:00,625 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-06-26 14:53:00,626 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-de3d7dfc-01dc-436b-8ee4-5a751366f38a
2025-06-26 14:53:00,629 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: C3egELO9IC6rlJAoJ97B47c
2025-06-26 14:53:00,629 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 108] --> Handled via agentic (LangGraph) flow.
2025-06-26 14:55:10,901 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='UqOzHWDZO7nfO83dFhdg9Et' client_id='NAGSYA5' role='CLIENT' token='8c3457e5-d090-46b2-a51c-365910c1ee5e' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 14:55:10,902 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 14:55:10,929 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: UqOzHWDZO7nfO83dFhdg9Et, found: No
2025-06-26 14:55:10,949 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: UqOzHWDZO7nfO83dFhdg9Et, found: No
2025-06-26 14:55:10,967 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 14:55:10,971 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 14:55:14,750 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='UqOzHWDZO7nfO83dFhdg9Et' client_id='NAGSYA5' role='CLIENT' token='8c3457e5-d090-46b2-a51c-365910c1ee5e' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='hello', id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 14:55:15,034 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 94] --> Graph State define Initiated.
2025-06-26 14:55:15,036 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 96] --> Graph State define Successfull.
2025-06-26 14:55:15,039 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 99] --> Defining nodes in the graph.
2025-06-26 14:55:15,039 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 106] --> Registering agents and tools in the graph.
2025-06-26 14:55:15,084 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 159] --> Adding edges to the graph.
2025-06-26 14:55:15,085 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 202] --> LangGraph Supervisor created successfully.
2025-06-26 14:55:15,104 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 106] --> PostgreSQL connection established for LangGraph execution.
2025-06-26 14:55:15,107 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : None
2025-06-26 14:55:15,147 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-1f1c9d0e-5c10-47c6-b4d8-9fd552eda7db
2025-06-26 14:55:15,148 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-1f1c9d0e-5c10-47c6-b4d8-9fd552eda7db
2025-06-26 14:55:15,153 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'hello'
2025-06-26 14:55:15,182 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 6
2025-06-26 14:55:15,182 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 22] --> Trimmed messages: [HumanMessage(content='hello', additional_kwargs={}, response_metadata={}, id='bee6f7d8-38ed-4be2-a9a8-48ffb8c2411e')]
2025-06-26 14:55:15,186 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 24] --> Assistance started..
2025-06-26 14:55:16,238 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 36] --> Assistance Break.
2025-06-26 14:55:16,238 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assitance completed.
2025-06-26 14:55:16,243 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 13] --> Primary Router function Activated.
2025-06-26 14:55:16,245 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 16] --> Primary Router state has no Tool.
2025-06-26 14:55:16,252 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 201] --> Starting assistance check messages extraction...
2025-06-26 14:55:16,254 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 211] --> Found AIMessage without tool calls - proceeding with assistance guard check
2025-06-26 14:55:16,256 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 50] --> Starting intent guard check...
2025-06-26 14:55:16,257 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 52] --> Checking response intent...
2025-06-26 14:55:17,747 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 57] --> Intent guard check complete
2025-06-26 14:55:17,748 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 214] --> Assistance guard check result: {'intent_type': 'Greeting', 'reason': 'The response is a simple greeting, saying "Hello! How can I assist you today?"'}
2025-06-26 14:55:17,751 mlscoringinference [INFO | final_response_node.py : assisatnce_pass_signal : 145] --> Assistance guard result: Pass
2025-06-26 14:55:17,797 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-06-26 14:55:17,818 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-06-26 14:55:17,819 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-1f1c9d0e-5c10-47c6-b4d8-9fd552eda7db
2025-06-26 14:55:17,819 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: UqOzHWDZO7nfO83dFhdg9Et
2025-06-26 14:55:17,819 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 108] --> Handled via agentic (LangGraph) flow.
2025-06-26 14:58:46,191 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 14:58:46,194 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 14:58:46,216 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: No
2025-06-26 14:58:46,234 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: No
2025-06-26 14:58:46,252 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 14:58:46,255 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 14:58:52,113 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='what is DIS?', id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 14:58:52,325 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 94] --> Graph State define Initiated.
2025-06-26 14:58:52,327 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 96] --> Graph State define Successfull.
2025-06-26 14:58:52,330 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 99] --> Defining nodes in the graph.
2025-06-26 14:58:52,331 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 106] --> Registering agents and tools in the graph.
2025-06-26 14:58:52,397 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 159] --> Adding edges to the graph.
2025-06-26 14:58:52,398 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 202] --> LangGraph Supervisor created successfully.
2025-06-26 14:58:52,419 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 106] --> PostgreSQL connection established for LangGraph execution.
2025-06-26 14:58:52,419 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : None
2025-06-26 14:58:52,459 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-ffe77413-ea08-48db-b98f-bcee2d0ea638
2025-06-26 14:58:52,460 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-ffe77413-ea08-48db-b98f-bcee2d0ea638
2025-06-26 14:58:52,466 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'what is DIS?'
2025-06-26 14:58:52,497 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 7
2025-06-26 14:58:52,498 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 22] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='2c3641da-7974-41e8-b24a-45e7748a3229')]
2025-06-26 14:58:52,498 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 24] --> Assistance started..
2025-06-26 14:58:54,340 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 36] --> Assistance Break.
2025-06-26 14:58:54,340 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assitance completed.
2025-06-26 14:58:54,344 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 13] --> Primary Router function Activated.
2025-06-26 14:58:54,344 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 22] --> Primary Router state Routed to : InformationCentreAgent.
2025-06-26 14:58:54,347 mlscoringinference [INFO | information_center_agent.py : __call__ : 57] --> Information react agent initiated...
2025-06-26 14:58:54,348 mlscoringinference [INFO | state_utils.py : inject_tool_message : 22] --> Tool message injection Initiated.
2025-06-26 14:58:54,349 mlscoringinference [INFO | state_utils.py : inject_tool_message : 43] --> Tool message for InformationCentreAgent injected successfully
2025-06-26 14:58:54,349 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 118
2025-06-26 14:58:54,350 mlscoringinference [INFO | information_center_agent.py : __call__ : 67] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='2c3641da-7974-41e8-b24a-45e7748a3229'), AIMessage(content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:54 GMT', 'content-type': 'application/json', 'content-length': '304', 'connection': 'keep-alive', 'x-amzn-requestid': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [1796]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--1cfaa37a-39fd-4fac-91e2-45d0a2937936-0', tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3129, 'output_tokens': 62, 'total_tokens': 3191, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the InformationCentreAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are InformationCentreAgent, Do not mention who you are - just act as the proxy for the assistant.', tool_call_id='tooluse_t0mWH3jOROyzntpgywi__A')]
2025-06-26 14:58:54,353 mlscoringinference [INFO | information_center_agent.py : __call__ : 79] --> Invoking Information React agent with inputs...
2025-06-26 14:58:58,583 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Information React agent invoked successfully.
2025-06-26 14:58:58,584 mlscoringinference [INFO | information_center_agent.py : __call__ : 94] --> Assistance Break.
2025-06-26 14:58:58,587 mlscoringinference [INFO | information_center_agent.py : __call__ : 97] --> Information react agent completed.
2025-06-26 14:58:58,590 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 96] --> Information Dynamic Router function Activated.
2025-06-26 14:58:58,951 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 136] --> FAQ retrieval tool initialized with AWS Knowledge Base
2025-06-26 14:58:58,951 mlscoringinference [DEBUG | react_tool.py : faq_knowledge_base : 138] --> Retrieving FAQ context for question: what is DIS?
2025-06-26 14:59:00,111 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 145] --> Retrieved 2 relevant FAQ documents
2025-06-26 14:59:00,118 mlscoringinference [INFO | information_center_agent.py : __call__ : 57] --> Information react agent initiated...
2025-06-26 14:59:00,120 mlscoringinference [INFO | state_utils.py : inject_tool_message : 22] --> Tool message injection Initiated.
2025-06-26 14:59:00,121 mlscoringinference [INFO | state_utils.py : inject_tool_message : 26] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-06-26 14:59:00,122 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 377
2025-06-26 14:59:00,123 mlscoringinference [INFO | information_center_agent.py : __call__ : 67] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='2c3641da-7974-41e8-b24a-45e7748a3229'), AIMessage(content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:54 GMT', 'content-type': 'application/json', 'content-length': '304', 'connection': 'keep-alive', 'x-amzn-requestid': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [1796]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--1cfaa37a-39fd-4fac-91e2-45d0a2937936-0', tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3129, 'output_tokens': 62, 'total_tokens': 3191, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the InformationCentreAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are InformationCentreAgent, Do not mention who you are - just act as the proxy for the assistant.', id='da543e96-0ec5-441a-b75c-1609fb7b8d0d', tool_call_id='tooluse_t0mWH3jOROyzntpgywi__A'), AIMessage(content=[{'type': 'text', 'text': 'Thought: The query "what is DIS?" seems to be asking about some acronym or term related to financial services. To provide a relevant answer, I should first check if the faq_knowledge_base tool has any information about "DIS".'}, {'type': 'tool_use', 'name': 'faq_knowledge_base', 'input': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:58 GMT', 'content-type': 'application/json', 'content-length': '539', 'connection': 'keep-alive', 'x-amzn-requestid': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [4187]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--50f1439a-947e-4247-8a39-15395b38172c-0', tool_calls=[{'name': 'faq_knowledge_base', 'args': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw', 'type': 'tool_call'}], usage_metadata={'input_tokens': 2780, 'output_tokens': 115, 'total_tokens': 2895, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='{"question": "What is a DIS?", "answer": "A DIS  is  a  Delivery  Instruction  Slip.  It  can be used to transfer shares from one \\n    Demat account to another demat account just like a cheque is used to transfer funds \\n    from one bank account to another bank account."}\n\n{"question": "What is a DIS and why is it required?\\n", "answer": "DIS  is  a  Delivery  Instruction  Slip. It  is  required to transfer shares from one demat account to another demat account just like a cheque is used to transfer funds from one bank account to another bank account."}', name='faq_knowledge_base', id='a79549e0-0091-4171-b08c-b563d323b4bb', tool_call_id='tooluse_vYhIQl9JT6-fJb3Hr5WAfw')]
2025-06-26 14:59:00,124 mlscoringinference [INFO | information_center_agent.py : __call__ : 79] --> Invoking Information React agent with inputs...
2025-06-26 14:59:03,329 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Information React agent invoked successfully.
2025-06-26 14:59:03,329 mlscoringinference [INFO | information_center_agent.py : __call__ : 94] --> Assistance Break.
2025-06-26 14:59:03,332 mlscoringinference [INFO | information_center_agent.py : __call__ : 97] --> Information react agent completed.
2025-06-26 14:59:03,334 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 96] --> Information Dynamic Router function Activated.
2025-06-26 14:59:03,337 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 150] --> Starting FAQ grounding messages extraction...
2025-06-26 14:59:03,342 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 159] --> Extracted response text from last message: Found
2025-06-26 14:59:03,343 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 163] --> FAQ adjacent message is from the FAQ knowledge base.
2025-06-26 14:59:03,344 mlscoringinference [INFO | final_response_node.py : extract_message_content : 74] --> Extracted message content at position -2
2025-06-26 14:59:03,344 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 166] --> Proceeding with contextual grounding validation
2025-06-26 14:59:03,345 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 70] --> Validating grounding for chatbot response...
2025-06-26 14:59:06,191 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 78] --> Grounding validation complete
2025-06-26 14:59:06,191 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 174] --> Grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'dialogue_continuity': 'Coherent', 'issues': 'The response directly answers the query by defining DIS and explaining its purpose. The content is well grounded in the provided context chunk. Since there is no prior dialogue context, the response is coherent on its own.'}
2025-06-26 14:59:06,195 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 91] --> Grounding validation criteria: Query relevance: High, Chunk alignment: Aligned, Dialogue continuity: Coherent
2025-06-26 14:59:06,196 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 100] --> Grounding validation result: Pass
2025-06-26 14:59:06,197 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 178] --> Grounding validation passed successfully
2025-06-26 14:59:06,246 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-06-26 14:59:06,286 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-06-26 14:59:06,286 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-ffe77413-ea08-48db-b98f-bcee2d0ea638
2025-06-26 14:59:06,286 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: Y2XyggWZuKnAQOuw6g2QOVB
2025-06-26 14:59:06,287 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 108] --> Handled via agentic (LangGraph) flow.
2025-06-26 14:59:06,370 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-ffe77413-ea08-48db-b98f-bcee2d0ea638')
2025-06-26 14:59:06,372 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 14:59:06,393 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 14:59:06,413 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 14:59:06,431 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 14:59:06,434 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 15:13:50,380 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-06-26 15:13:50,436 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-06-26 15:13:50,437 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-06-26 15:13:50,440 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-06-26 15:13:50,441 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 135] --> Information Centre Agent Call.
2025-06-26 15:13:50,442 mlscoringinference [INFO | assistant_tool.py : FundAgent : 166] --> Fund Agent Call.
2025-06-26 15:13:50,443 mlscoringinference [INFO | assistant_tool.py : DPAgent : 193] --> DP Agent Call.
2025-06-26 15:13:50,448 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 15:13:50,449 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 15:13:50,452 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 15:13:50,459 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 15:13:50,460 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 15:13:50,460 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 15:13:50,463 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 15:13:50,463 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 15:13:50,464 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 15:13:50,488 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 15:13:50,492 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 15:13:50,493 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 15:13:50,493 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 15:13:50,494 mlscoringinference [INFO | langgraph_builder.py : <module> : 71] --> ChatBedrockConverse model initialized successfully
2025-06-26 15:13:50,494 mlscoringinference [INFO | langgraph_builder.py : <module> : 73] --> Rannnable Importing.
2025-06-26 15:13:50,498 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 15:13:50,499 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 15:13:50,503 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 15:13:50,508 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 15:13:50,508 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 15:13:50,508 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 15:13:50,510 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-06-26 15:13:50,516 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 15:13:50,524 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 15:13:50,528 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 15:13:50,529 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 15:13:50,531 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 15:13:50,537 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 15:13:50,537 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 15:13:50,538 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 15:13:50,539 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 15:13:50,545 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 15:13:50,546 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 15:13:50,546 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 15:13:50,547 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 15:13:50,547 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-06-26 15:13:50,555 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 15:13:50,560 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 15:13:50,560 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 15:13:50,562 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 15:13:50,567 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-06-26 15:13:50,567 mlscoringinference [INFO | langgraph_builder.py : <module> : 84] --> Rannnable for all agents created successfully.
2025-06-26 15:13:50,760 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 15:13:50,761 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 15:13:50,765 mlscoringinference [INFO | redis_client.py : _connect : 40] --> Connecting to Redis...
2025-06-26 15:13:50,766 mlscoringinference [INFO | redis_client.py : _connect : 50] --> Redis connection established successfully.
2025-06-26 15:13:50,767 mlscoringinference [INFO | redis_client.py : __init__ : 23] --> Connected to Redis at master.mofsl-chatbot-dev-valkey.xfjxmr.aps1.cache.amazonaws.com in dev environment.
2025-06-26 15:13:50,767 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 15:13:50,768 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 15:13:53,018 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-ffe77413-ea08-48db-b98f-bcee2d0ea638')
2025-06-26 15:13:53,019 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 15:13:53,478 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:13:53,497 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:13:53,517 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 15:13:53,522 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 15:13:58,619 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='upcoming_buyback', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-ffe77413-ea08-48db-b98f-bcee2d0ea638')
2025-06-26 15:13:58,621 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 15:13:58,644 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:13:58,663 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:13:58,664 mlscoringinference [INFO | chatbot_navigator.py : navigate : 86] --> session data: {'user_id': 'NAGSYA5', 'role': 'CLIENT', 'input_params': {'action': 'initial', 'response_text': 'Welcome to your Mo Gini assistant. How can I help you today?', 'available_choices': [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}], 'id': 'initial_client'}, 'last_updated': '2025-06-26T09:43:53.479309', 'history_stack': []}
2025-06-26 15:13:58,685 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: No
2025-06-26 15:13:58,703 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: No
2025-06-26 15:13:58,722 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: No
2025-06-26 15:13:58,742 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: No
2025-06-26 15:13:58,761 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: No
2025-06-26 15:13:58,762 mlscoringinference [INFO | chatbot_session.py : update_header : 264] --> Updated user data: {'user_id': 'NAGSYA5', 'session_id': 'Y2XyggWZuKnAQOuw6g2QOVB', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '8bec16ea-f607-4dbf-a221-60c24b82bb1b', 'interaction': {'type': 'DETERMINISTIC_FLOW', 'attachement': '', 'input': {'text': None, 'id': 'upcoming_buyback', 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-ffe77413-ea08-48db-b98f-bcee2d0ea638'}}
2025-06-26 15:13:58,781 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: No
2025-06-26 15:13:58,781 mlscoringinference [INFO | chatbot_session.py : get_api_paylods : 241] --> get_api_paylods: None
2025-06-26 15:13:58,781 mlscoringinference [INFO | chatbot_session.py : order_type : 406] --> No segment mapping found for click id: upcoming_buyback
2025-06-26 15:13:58,782 mlscoringinference [WARNING | chatbot_session.py : account_opening_partner : 381] --> Unknown click_id: upcoming_buyback
2025-06-26 15:13:58,782 mlscoringinference [INFO | chatbot_navigator.py : navigate : 102] --> CURRENT ID : upcoming_buyback
2025-06-26 15:13:58,782 mlscoringinference [INFO | chatbot_navigator.py : navigate : 106] --> NEXT STATE : {'action': 'option', 'response_text': '', 'available_choices': [{'id': 'upcoming_bse', 'text': 'BSE'}, {'id': 'upcoming_nse', 'text': 'NSE'}], 'id': 'upcoming_buyback'}
2025-06-26 15:13:58,801 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:13:58,820 mlscoringinference [INFO | chatbot_navigator.py : navigate : 131] --> {'action': 'option', 'response_text': '', 'available_choices': [{'id': 'upcoming_bse', 'text': 'BSE'}, {'id': 'upcoming_nse', 'text': 'NSE'}], 'id': 'upcoming_buyback'}
2025-06-26 15:13:58,821 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 15:13:58,822 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 15:14:00,396 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='upcoming_bse', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-ffe77413-ea08-48db-b98f-bcee2d0ea638')
2025-06-26 15:14:00,397 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 15:14:00,419 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:14:00,438 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:14:00,438 mlscoringinference [INFO | chatbot_navigator.py : navigate : 86] --> session data: {'user_id': 'NAGSYA5', 'role': 'CLIENT', 'input_params': {'action': 'option', 'response_text': '', 'available_choices': [{'id': 'upcoming_bse', 'text': 'BSE'}, {'id': 'upcoming_nse', 'text': 'NSE'}], 'id': 'upcoming_buyback'}, 'last_updated': '2025-06-26T09:43:58.783438', 'history_stack': ['initial_client']}
2025-06-26 15:14:00,474 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: Yes
2025-06-26 15:14:00,493 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: Yes
2025-06-26 15:14:00,511 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: Yes
2025-06-26 15:14:00,530 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: Yes
2025-06-26 15:14:00,549 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: Yes
2025-06-26 15:14:00,549 mlscoringinference [INFO | chatbot_session.py : update_header : 264] --> Updated user data: {'user_id': 'NAGSYA5', 'session_id': 'Y2XyggWZuKnAQOuw6g2QOVB', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '8bec16ea-f607-4dbf-a221-60c24b82bb1b', 'interaction': {'type': 'DETERMINISTIC_FLOW', 'attachement': '', 'input': {'text': None, 'id': 'upcoming_bse', 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-ffe77413-ea08-48db-b98f-bcee2d0ea638'}}
2025-06-26 15:14:00,567 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: Yes
2025-06-26 15:14:00,568 mlscoringinference [INFO | chatbot_session.py : get_api_paylods : 241] --> get_api_paylods: {'api_payloads': {'api_endpoint': 'upcoming_bse'}, 'last_updated': '2025-06-26T09:44:00.438124'}
2025-06-26 15:14:00,571 mlscoringinference [INFO | chatbot_session.py : order_type : 406] --> No segment mapping found for click id: upcoming_bse
2025-06-26 15:14:00,571 mlscoringinference [WARNING | chatbot_session.py : account_opening_partner : 381] --> Unknown click_id: upcoming_bse
2025-06-26 15:14:00,572 mlscoringinference [INFO | chatbot_navigator.py : navigate : 102] --> CURRENT ID : upcoming_bse
2025-06-26 15:14:00,572 mlscoringinference [INFO | chatbot_navigator.py : navigate : 106] --> NEXT STATE : {'action': 'endapi', 'endpoint': 'upcoming_bse', 'id': 'upcoming_bse'}
2025-06-26 15:14:00,573 mlscoringinference [INFO | chatbot_navigator.py : navigate : 141] --> END API CALL INITIATED
2025-06-26 15:14:00,592 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_api_payload, found: Yes
2025-06-26 15:14:00,592 mlscoringinference [INFO | chatbot_session.py : get_api_paylods : 241] --> get_api_paylods: {'api_payloads': {'api_endpoint': 'upcoming_bse'}, 'last_updated': '2025-06-26T09:44:00.438124'}
2025-06-26 15:14:00,593 mlscoringinference [INFO | chatbot_session.py : get_client_id_for_partner : 157] --> Y2XyggWZuKnAQOuw6g2QOVB_client_id
2025-06-26 15:14:00,611 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB_client_id, found: No
2025-06-26 15:14:00,612 mlscoringinference [INFO | chatbot_session.py : get_client_id_for_partner : 159] --> None
2025-06-26 15:14:00,615 mlscoringinference [INFO | chatbot_session.py : get_client_id_for_partner : 160] --> Client id fetched from Redis: None
2025-06-26 15:14:00,616 mlscoringinference [ERROR | chatbot_session.py : get_client_id_for_partner : 165] --> Client ID not found in Redis for session: Y2XyggWZuKnAQOuw6g2QOVB
2025-06-26 15:14:00,616 mlscoringinference [INFO | endpoint_api_handler.py : handle_primary_api : 38] --> HANDLE PRIMARY API INITIATED
2025-06-26 15:14:00,616 mlscoringinference [INFO | endpoint_api_handler.py : handle_primary_api : 45] --> upcoming_bse - API ENDPOINT
2025-06-26 15:14:00,616 mlscoringinference [DEBUG | endpoint_api_handler.py : handle_primary_api : 66] --> Calling endpoint 'upcoming_bse' with args: {}
2025-06-26 15:14:00,618 mlscoringinference [DEBUG | endpoint_api_handler.py : handle_primary_api : 68] --> Raw response from endpoint 'upcoming_bse': {'message': 'https://www.bseindia.com/markets/PublicIssues/AcqIssueDetail.aspx?expandable=3&Type=2'}
2025-06-26 15:14:00,618 mlscoringinference [INFO | endpoint_api_handler.py : handle_primary_api : 71] --> API 'upcoming_bse' call successful
2025-06-26 15:14:00,618 mlscoringinference [DEBUG | endpoint_api_handler.py : handle_primary_api : 72] --> Response: {'message': 'https://www.bseindia.com/markets/PublicIssues/AcqIssueDetail.aspx?expandable=3&Type=2', 'action': 'result'}
2025-06-26 15:14:00,619 mlscoringinference [INFO | endpoint_api_handler.py : handle_primary_api : 74] --> {'message': 'https://www.bseindia.com/markets/PublicIssues/AcqIssueDetail.aspx?expandable=3&Type=2', 'action': 'result'} - RESPONSE
2025-06-26 15:14:00,619 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 15:14:00,619 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 15:14:00,653 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-ffe77413-ea08-48db-b98f-bcee2d0ea638')
2025-06-26 15:14:00,654 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 15:14:00,674 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:14:00,693 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:14:00,712 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 15:14:00,715 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 15:15:04,163 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='ledger report', id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-ffe77413-ea08-48db-b98f-bcee2d0ea638')
2025-06-26 15:15:04,424 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 94] --> Graph State define Initiated.
2025-06-26 15:15:04,425 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 96] --> Graph State define Successfull.
2025-06-26 15:15:04,428 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 99] --> Defining nodes in the graph.
2025-06-26 15:15:04,428 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 106] --> Registering agents and tools in the graph.
2025-06-26 15:15:04,484 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 159] --> Adding edges to the graph.
2025-06-26 15:15:04,485 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 202] --> LangGraph Supervisor created successfully.
2025-06-26 15:15:04,507 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 106] --> PostgreSQL connection established for LangGraph execution.
2025-06-26 15:15:04,508 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : req-ffe77413-ea08-48db-b98f-bcee2d0ea638
2025-06-26 15:15:04,568 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-f170889b-c924-43a8-b366-b431730833fa
2025-06-26 15:15:04,568 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-f170889b-c924-43a8-b366-b431730833fa
2025-06-26 15:15:04,572 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'ledger report'
2025-06-26 15:15:04,602 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 565
2025-06-26 15:15:04,618 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 22] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='2c3641da-7974-41e8-b24a-45e7748a3229'), AIMessage(content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:54 GMT', 'content-type': 'application/json', 'content-length': '304', 'connection': 'keep-alive', 'x-amzn-requestid': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [1796]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--1cfaa37a-39fd-4fac-91e2-45d0a2937936-0', tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3129, 'output_tokens': 62, 'total_tokens': 3191, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the InformationCentreAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are InformationCentreAgent, Do not mention who you are - just act as the proxy for the assistant.', id='da543e96-0ec5-441a-b75c-1609fb7b8d0d', tool_call_id='tooluse_t0mWH3jOROyzntpgywi__A'), AIMessage(content=[{'type': 'text', 'text': 'Thought: The query "what is DIS?" seems to be asking about some acronym or term related to financial services. To provide a relevant answer, I should first check if the faq_knowledge_base tool has any information about "DIS".'}, {'type': 'tool_use', 'name': 'faq_knowledge_base', 'input': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:58 GMT', 'content-type': 'application/json', 'content-length': '539', 'connection': 'keep-alive', 'x-amzn-requestid': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [4187]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--50f1439a-947e-4247-8a39-15395b38172c-0', tool_calls=[{'name': 'faq_knowledge_base', 'args': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw', 'type': 'tool_call'}], usage_metadata={'input_tokens': 2780, 'output_tokens': 115, 'total_tokens': 2895, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='{"question": "What is a DIS?", "answer": "A DIS  is  a  Delivery  Instruction  Slip.  It  can be used to transfer shares from one \\n    Demat account to another demat account just like a cheque is used to transfer funds \\n    from one bank account to another bank account."}\n\n{"question": "What is a DIS and why is it required?\\n", "answer": "DIS  is  a  Delivery  Instruction  Slip. It  is  required to transfer shares from one demat account to another demat account just like a cheque is used to transfer funds from one bank account to another bank account."}', name='faq_knowledge_base', id='a79549e0-0091-4171-b08c-b563d323b4bb', tool_call_id='tooluse_vYhIQl9JT6-fJb3Hr5WAfw'), AIMessage(content=[{'type': 'text', 'text': 'Observation: The faq_knowledge_base provided relevant information explaining that DIS stands for "Delivery Instruction Slip" and it is used to transfer shares between demat accounts, similar to how a cheque transfers funds between bank accounts.'}, {'type': 'tool_use', 'name': 'AgentOutput', 'input': {'message': 'DIS stands for Delivery Instruction Slip. It is a document used to transfer shares from one demat account to another demat account, similar to how a cheque is used to transfer funds between bank accounts.', 'status': 'result'}, 'id': 'tooluse_0arT3C5bSIe-vKfzbfMjVg'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'b10a9ae5-f740-45fe-beac-986ac45ddca5', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:29:03 GMT', 'content-type': 'application/json', 'content-length': '759', 'connection': 'keep-alive', 'x-amzn-requestid': 'b10a9ae5-f740-45fe-beac-986ac45ddca5'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [3156]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--11aaea68-ee59-4d0e-914c-f696ee339327-0', tool_calls=[{'name': 'AgentOutput', 'args': {'message': 'DIS stands for Delivery Instruction Slip. It is a document used to transfer shares from one demat account to another demat account, similar to how a cheque is used to transfer funds between bank accounts.', 'status': 'result'}, 'id': 'tooluse_0arT3C5bSIe-vKfzbfMjVg', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3059, 'output_tokens': 166, 'total_tokens': 3225, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='This query response has been completed.', id='923c8df7-f076-4641-bdc4-70844f646132', tool_call_id='tooluse_0arT3C5bSIe-vKfzbfMjVg'), HumanMessage(content='ledger report', additional_kwargs={}, response_metadata={}, id='23c87be8-66f8-46f2-9f7f-68120b493ccf')]
2025-06-26 15:15:04,619 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 24] --> Assistance started..
2025-06-26 15:15:07,233 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 36] --> Assistance Break.
2025-06-26 15:15:07,236 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assitance completed.
2025-06-26 15:15:07,240 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 13] --> Primary Router function Activated.
2025-06-26 15:15:07,241 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 22] --> Primary Router state Routed to : ReportAgent.
2025-06-26 15:15:07,245 mlscoringinference [INFO | react_agent.py : __call__ : 59] --> react agent initiated...
2025-06-26 15:15:07,250 mlscoringinference [INFO | state_utils.py : inject_tool_message : 22] --> Tool message injection Initiated.
2025-06-26 15:15:07,250 mlscoringinference [INFO | state_utils.py : inject_tool_message : 43] --> Tool message for ReportAgent injected successfully
2025-06-26 15:15:07,250 mlscoringinference [INFO | react_agent.py : __call__ : 66] --> Client ID from payload: NAGSYA5
2025-06-26 15:15:07,251 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 667
2025-06-26 15:15:07,252 mlscoringinference [INFO | react_agent.py : __call__ : 75] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='2c3641da-7974-41e8-b24a-45e7748a3229'), AIMessage(content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:54 GMT', 'content-type': 'application/json', 'content-length': '304', 'connection': 'keep-alive', 'x-amzn-requestid': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [1796]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--1cfaa37a-39fd-4fac-91e2-45d0a2937936-0', tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3129, 'output_tokens': 62, 'total_tokens': 3191, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the InformationCentreAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are InformationCentreAgent, Do not mention who you are - just act as the proxy for the assistant.', id='da543e96-0ec5-441a-b75c-1609fb7b8d0d', tool_call_id='tooluse_t0mWH3jOROyzntpgywi__A'), AIMessage(content=[{'type': 'text', 'text': 'Thought: The query "what is DIS?" seems to be asking about some acronym or term related to financial services. To provide a relevant answer, I should first check if the faq_knowledge_base tool has any information about "DIS".'}, {'type': 'tool_use', 'name': 'faq_knowledge_base', 'input': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:58 GMT', 'content-type': 'application/json', 'content-length': '539', 'connection': 'keep-alive', 'x-amzn-requestid': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [4187]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--50f1439a-947e-4247-8a39-15395b38172c-0', tool_calls=[{'name': 'faq_knowledge_base', 'args': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw', 'type': 'tool_call'}], usage_metadata={'input_tokens': 2780, 'output_tokens': 115, 'total_tokens': 2895, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='{"question": "What is a DIS?", "answer": "A DIS  is  a  Delivery  Instruction  Slip.  It  can be used to transfer shares from one \\n    Demat account to another demat account just like a cheque is used to transfer funds \\n    from one bank account to another bank account."}\n\n{"question": "What is a DIS and why is it required?\\n", "answer": "DIS  is  a  Delivery  Instruction  Slip. It  is  required to transfer shares from one demat account to another demat account just like a cheque is used to transfer funds from one bank account to another bank account."}', name='faq_knowledge_base', id='a79549e0-0091-4171-b08c-b563d323b4bb', tool_call_id='tooluse_vYhIQl9JT6-fJb3Hr5WAfw'), AIMessage(content=[{'type': 'text', 'text': 'Observation: The faq_knowledge_base provided relevant information explaining that DIS stands for "Delivery Instruction Slip" and it is used to transfer shares between demat accounts, similar to how a cheque transfers funds between bank accounts.'}, {'type': 'tool_use', 'name': 'AgentOutput', 'input': {'message': 'DIS stands for Delivery Instruction Slip. It is a document used to transfer shares from one demat account to another demat account, similar to how a cheque is used to transfer funds between bank accounts.', 'status': 'result'}, 'id': 'tooluse_0arT3C5bSIe-vKfzbfMjVg'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'b10a9ae5-f740-45fe-beac-986ac45ddca5', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:29:03 GMT', 'content-type': 'application/json', 'content-length': '759', 'connection': 'keep-alive', 'x-amzn-requestid': 'b10a9ae5-f740-45fe-beac-986ac45ddca5'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [3156]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--11aaea68-ee59-4d0e-914c-f696ee339327-0', tool_calls=[{'name': 'AgentOutput', 'args': {'message': 'DIS stands for Delivery Instruction Slip. It is a document used to transfer shares from one demat account to another demat account, similar to how a cheque is used to transfer funds between bank accounts.', 'status': 'result'}, 'id': 'tooluse_0arT3C5bSIe-vKfzbfMjVg', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3059, 'output_tokens': 166, 'total_tokens': 3225, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='This query response has been completed.', id='923c8df7-f076-4641-bdc4-70844f646132', tool_call_id='tooluse_0arT3C5bSIe-vKfzbfMjVg'), HumanMessage(content='ledger report', additional_kwargs={}, response_metadata={}, id='23c87be8-66f8-46f2-9f7f-68120b493ccf'), AIMessage(content=[{'type': 'tool_use', 'name': 'ReportAgent', 'input': {'instuction': 'ledger report'}, 'id': 'tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'da70629c-f432-4fd0-85b0-feb69713803e', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:45:07 GMT', 'content-type': 'application/json', 'content-length': '293', 'connection': 'keep-alive', 'x-amzn-requestid': 'da70629c-f432-4fd0-85b0-feb69713803e'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2120]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--a093bb3d-6f37-423f-8bae-3d2cbed054cd-0', tool_calls=[{'name': 'ReportAgent', 'args': {'instuction': 'ledger report'}, 'id': 'tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3727, 'output_tokens': 58, 'total_tokens': 3785, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the ReportAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are ReportAgent, Do not mention who you are - just act as the proxy for the assistant.', tool_call_id='tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ')]
2025-06-26 15:15:07,252 mlscoringinference [INFO | react_agent.py : __call__ : 88] --> Invoking React agent with inputs...
2025-06-26 15:15:14,929 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> React agent invoked successfully.
2025-06-26 15:15:14,930 mlscoringinference [INFO | react_agent.py : __call__ : 103] --> Assistance Break.
2025-06-26 15:15:14,932 mlscoringinference [INFO | react_agent.py : __call__ : 106] --> react agent completed.
2025-06-26 15:15:14,934 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 30] --> Report Dynamic Router function Activated.
2025-06-26 15:15:14,934 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 44] --> Report Dynamic Router state has AskBackToUser Tool.
2025-06-26 15:15:14,938 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-06-26 15:15:14,938 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': 'To generate the ledger report, I need the following details:\n\nStart Date (mm/dd/yyyy):\nEnd Date (mm/dd/yyyy): \nExchange Segment (Combine or MTF):\nDate Type (Voucher or Effective):\nReport Delivery (Link or Email):'}, 'id': 'tooluse_kmuAYJ0vR3m6mSd_wk-GBQ', 'type': 'tool_call'}
2025-06-26 15:15:14,939 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-06-26 15:15:14,939 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-06-26 15:15:14,940 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: To generate the ledger report, I need the followin...
2025-06-26 15:15:14,942 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-06-26 15:15:14,943 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-06-26 15:15:14,943 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-06-26 15:15:14,943 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-06-26 15:15:14,944 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-06-26 15:15:15,003 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-06-26 15:15:15,043 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-06-26 15:15:15,044 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-f170889b-c924-43a8-b366-b431730833fa
2025-06-26 15:15:15,048 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: Y2XyggWZuKnAQOuw6g2QOVB
2025-06-26 15:15:15,049 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 108] --> Handled via agentic (LangGraph) flow.
2025-06-26 15:15:15,141 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-f170889b-c924-43a8-b366-b431730833fa')
2025-06-26 15:15:15,142 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 15:15:15,163 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:15:15,181 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:15:15,200 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 15:15:15,203 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 15:15:28,792 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='current year for combine effective', id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-f170889b-c924-43a8-b366-b431730833fa')
2025-06-26 15:15:29,016 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 94] --> Graph State define Initiated.
2025-06-26 15:15:29,018 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 96] --> Graph State define Successfull.
2025-06-26 15:15:29,021 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 99] --> Defining nodes in the graph.
2025-06-26 15:15:29,021 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 106] --> Registering agents and tools in the graph.
2025-06-26 15:15:29,079 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 159] --> Adding edges to the graph.
2025-06-26 15:15:29,080 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 202] --> LangGraph Supervisor created successfully.
2025-06-26 15:15:29,102 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 106] --> PostgreSQL connection established for LangGraph execution.
2025-06-26 15:15:29,102 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : req-f170889b-c924-43a8-b366-b431730833fa
2025-06-26 15:15:29,162 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-06-26 15:15:29,163 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: req-f170889b-c924-43a8-b366-b431730833fa
2025-06-26 15:15:29,166 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-06-26 15:15:29,194 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-06-26 15:15:29,195 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': 'To generate the ledger report, I need the following details:\n\nStart Date (mm/dd/yyyy):\nEnd Date (mm/dd/yyyy): \nExchange Segment (Combine or MTF):\nDate Type (Voucher or Effective):\nReport Delivery (Link or Email):'}, 'id': 'tooluse_kmuAYJ0vR3m6mSd_wk-GBQ', 'type': 'tool_call'}
2025-06-26 15:15:29,195 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-06-26 15:15:29,195 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-06-26 15:15:29,196 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: To generate the ledger report, I need the followin...
2025-06-26 15:15:29,196 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-06-26 15:15:29,196 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-06-26 15:15:29,196 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-06-26 15:15:29,197 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-06-26 15:15:29,201 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-06-26 15:15:29,201 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 25] --> User input received: current year for combine effective
2025-06-26 15:15:29,210 mlscoringinference [INFO | react_agent.py : __call__ : 59] --> react agent initiated...
2025-06-26 15:15:29,211 mlscoringinference [INFO | state_utils.py : inject_tool_message : 22] --> Tool message injection Initiated.
2025-06-26 15:15:29,211 mlscoringinference [INFO | state_utils.py : inject_tool_message : 26] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-06-26 15:15:29,211 mlscoringinference [INFO | react_agent.py : __call__ : 66] --> Client ID from payload: NAGSYA5
2025-06-26 15:15:29,212 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 878
2025-06-26 15:15:29,216 mlscoringinference [INFO | react_agent.py : __call__ : 75] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='2c3641da-7974-41e8-b24a-45e7748a3229'), AIMessage(content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:54 GMT', 'content-type': 'application/json', 'content-length': '304', 'connection': 'keep-alive', 'x-amzn-requestid': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [1796]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--1cfaa37a-39fd-4fac-91e2-45d0a2937936-0', tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3129, 'output_tokens': 62, 'total_tokens': 3191, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the InformationCentreAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are InformationCentreAgent, Do not mention who you are - just act as the proxy for the assistant.', id='da543e96-0ec5-441a-b75c-1609fb7b8d0d', tool_call_id='tooluse_t0mWH3jOROyzntpgywi__A'), AIMessage(content=[{'type': 'text', 'text': 'Thought: The query "what is DIS?" seems to be asking about some acronym or term related to financial services. To provide a relevant answer, I should first check if the faq_knowledge_base tool has any information about "DIS".'}, {'type': 'tool_use', 'name': 'faq_knowledge_base', 'input': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:58 GMT', 'content-type': 'application/json', 'content-length': '539', 'connection': 'keep-alive', 'x-amzn-requestid': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [4187]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--50f1439a-947e-4247-8a39-15395b38172c-0', tool_calls=[{'name': 'faq_knowledge_base', 'args': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw', 'type': 'tool_call'}], usage_metadata={'input_tokens': 2780, 'output_tokens': 115, 'total_tokens': 2895, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='{"question": "What is a DIS?", "answer": "A DIS  is  a  Delivery  Instruction  Slip.  It  can be used to transfer shares from one \\n    Demat account to another demat account just like a cheque is used to transfer funds \\n    from one bank account to another bank account."}\n\n{"question": "What is a DIS and why is it required?\\n", "answer": "DIS  is  a  Delivery  Instruction  Slip. It  is  required to transfer shares from one demat account to another demat account just like a cheque is used to transfer funds from one bank account to another bank account."}', name='faq_knowledge_base', id='a79549e0-0091-4171-b08c-b563d323b4bb', tool_call_id='tooluse_vYhIQl9JT6-fJb3Hr5WAfw'), AIMessage(content=[{'type': 'text', 'text': 'Observation: The faq_knowledge_base provided relevant information explaining that DIS stands for "Delivery Instruction Slip" and it is used to transfer shares between demat accounts, similar to how a cheque transfers funds between bank accounts.'}, {'type': 'tool_use', 'name': 'AgentOutput', 'input': {'message': 'DIS stands for Delivery Instruction Slip. It is a document used to transfer shares from one demat account to another demat account, similar to how a cheque is used to transfer funds between bank accounts.', 'status': 'result'}, 'id': 'tooluse_0arT3C5bSIe-vKfzbfMjVg'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'b10a9ae5-f740-45fe-beac-986ac45ddca5', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:29:03 GMT', 'content-type': 'application/json', 'content-length': '759', 'connection': 'keep-alive', 'x-amzn-requestid': 'b10a9ae5-f740-45fe-beac-986ac45ddca5'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [3156]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--11aaea68-ee59-4d0e-914c-f696ee339327-0', tool_calls=[{'name': 'AgentOutput', 'args': {'message': 'DIS stands for Delivery Instruction Slip. It is a document used to transfer shares from one demat account to another demat account, similar to how a cheque is used to transfer funds between bank accounts.', 'status': 'result'}, 'id': 'tooluse_0arT3C5bSIe-vKfzbfMjVg', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3059, 'output_tokens': 166, 'total_tokens': 3225, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='This query response has been completed.', id='923c8df7-f076-4641-bdc4-70844f646132', tool_call_id='tooluse_0arT3C5bSIe-vKfzbfMjVg'), HumanMessage(content='ledger report', additional_kwargs={}, response_metadata={}, id='23c87be8-66f8-46f2-9f7f-68120b493ccf'), AIMessage(content=[{'type': 'tool_use', 'name': 'ReportAgent', 'input': {'instuction': 'ledger report'}, 'id': 'tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'da70629c-f432-4fd0-85b0-feb69713803e', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:45:07 GMT', 'content-type': 'application/json', 'content-length': '293', 'connection': 'keep-alive', 'x-amzn-requestid': 'da70629c-f432-4fd0-85b0-feb69713803e'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2120]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--a093bb3d-6f37-423f-8bae-3d2cbed054cd-0', tool_calls=[{'name': 'ReportAgent', 'args': {'instuction': 'ledger report'}, 'id': 'tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3727, 'output_tokens': 58, 'total_tokens': 3785, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the ReportAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are ReportAgent, Do not mention who you are - just act as the proxy for the assistant.', id='90603998-695c-4bbb-8372-48d9f7a69a79', tool_call_id='tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ'), AIMessage(content=[{'type': 'text', 'text': "Thought: The user has requested a ledger report. To generate this report, I will need the following parameters:\n\n- Client ID\n- Start Date (from_Date) \n- End Date (to_Date)\n- Exchange Segment (exchange_Seg)\n- Date Type (date_Type)\n- Return Type (return_Type)\n\nI have the Client ID (NAGSYA5) from the customer context, so I don't need to ask for that.\n\nAction: "}, {'type': 'tool_use', 'name': 'AskBackToUser', 'input': {'interrupt_message': 'To generate the ledger report, I need the following details:\n\nStart Date (mm/dd/yyyy):\nEnd Date (mm/dd/yyyy): \nExchange Segment (Combine or MTF):\nDate Type (Voucher or Effective):\nReport Delivery (Link or Email):'}, 'id': 'tooluse_kmuAYJ0vR3m6mSd_wk-GBQ'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'd794fad0-3ac6-4b82-9847-1e5bcedc11a0', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:45:15 GMT', 'content-type': 'application/json', 'content-length': '890', 'connection': 'keep-alive', 'x-amzn-requestid': 'd794fad0-3ac6-4b82-9847-1e5bcedc11a0'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [7591]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--39f27bbf-5ba1-438b-9aa1-14946983f66d-0', tool_calls=[{'name': 'AskBackToUser', 'args': {'interrupt_message': 'To generate the ledger report, I need the following details:\n\nStart Date (mm/dd/yyyy):\nEnd Date (mm/dd/yyyy): \nExchange Segment (Combine or MTF):\nDate Type (Voucher or Effective):\nReport Delivery (Link or Email):'}, 'id': 'tooluse_kmuAYJ0vR3m6mSd_wk-GBQ', 'type': 'tool_call'}], usage_metadata={'input_tokens': 9111, 'output_tokens': 230, 'total_tokens': 9341, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='current year for combine effective', id='ebdec7da-18c1-476b-8725-4834006205a4', tool_call_id='tooluse_kmuAYJ0vR3m6mSd_wk-GBQ')]
2025-06-26 15:15:29,218 mlscoringinference [INFO | react_agent.py : __call__ : 88] --> Invoking React agent with inputs...
2025-06-26 15:15:37,565 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> React agent invoked successfully.
2025-06-26 15:15:37,565 mlscoringinference [INFO | react_agent.py : __call__ : 103] --> Assistance Break.
2025-06-26 15:15:37,569 mlscoringinference [INFO | react_agent.py : __call__ : 106] --> react agent completed.
2025-06-26 15:15:37,572 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 30] --> Report Dynamic Router function Activated.
2025-06-26 15:15:37,584 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-06-26 15:15:37,586 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-06-26 15:15:37,587 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': 'Y2XyggWZuKnAQOuw6g2QOVB', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '8bec16ea-f607-4dbf-a221-60c24b82bb1b', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'ledger report', 'id': 'home', 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-f170889b-c924-43a8-b366-b431730833fa'}}
2025-06-26 15:15:37,587 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-06-26 15:15:37,587 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-06-26 15:15:37,587 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://10.167.203.119/gw/api/cbot/ledgerstatement with headers: {'sessionid': 'Y2XyggWZuKnAQOuw6g2QOVB', 'token': '8bec16ea-f607-4dbf-a221-60c24b82bb1b', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientId': 'NAGSYA5', 'from_Date': '04/01/2025', 'to_Date': '03/31/2026', 'exchange_Seg': 'Combine', 'date_Type': 'Effective', 'return_Type': 'Link', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-06-26 15:15:41,938 mlscoringinference [INFO | react_agent.py : __call__ : 59] --> react agent initiated...
2025-06-26 15:15:41,941 mlscoringinference [INFO | state_utils.py : inject_tool_message : 22] --> Tool message injection Initiated.
2025-06-26 15:15:41,944 mlscoringinference [INFO | state_utils.py : inject_tool_message : 26] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-06-26 15:15:41,944 mlscoringinference [INFO | react_agent.py : __call__ : 66] --> Client ID from payload: NAGSYA5
2025-06-26 15:15:41,945 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 1118
2025-06-26 15:15:41,948 mlscoringinference [INFO | react_agent.py : __call__ : 75] --> Trimmed messages: [HumanMessage(content='what is DIS?', additional_kwargs={}, response_metadata={}, id='2c3641da-7974-41e8-b24a-45e7748a3229'), AIMessage(content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:54 GMT', 'content-type': 'application/json', 'content-length': '304', 'connection': 'keep-alive', 'x-amzn-requestid': '48aa23fa-fb59-4fc8-9d05-299f89ddca5b'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [1796]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--1cfaa37a-39fd-4fac-91e2-45d0a2937936-0', tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'what is DIS?'}, 'id': 'tooluse_t0mWH3jOROyzntpgywi__A', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3129, 'output_tokens': 62, 'total_tokens': 3191, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the InformationCentreAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are InformationCentreAgent, Do not mention who you are - just act as the proxy for the assistant.', id='da543e96-0ec5-441a-b75c-1609fb7b8d0d', tool_call_id='tooluse_t0mWH3jOROyzntpgywi__A'), AIMessage(content=[{'type': 'text', 'text': 'Thought: The query "what is DIS?" seems to be asking about some acronym or term related to financial services. To provide a relevant answer, I should first check if the faq_knowledge_base tool has any information about "DIS".'}, {'type': 'tool_use', 'name': 'faq_knowledge_base', 'input': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:28:58 GMT', 'content-type': 'application/json', 'content-length': '539', 'connection': 'keep-alive', 'x-amzn-requestid': 'fa566be9-1a28-478a-b2b4-7517f0e5c1f2'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [4187]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--50f1439a-947e-4247-8a39-15395b38172c-0', tool_calls=[{'name': 'faq_knowledge_base', 'args': {'question': 'what is DIS?'}, 'id': 'tooluse_vYhIQl9JT6-fJb3Hr5WAfw', 'type': 'tool_call'}], usage_metadata={'input_tokens': 2780, 'output_tokens': 115, 'total_tokens': 2895, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='{"question": "What is a DIS?", "answer": "A DIS  is  a  Delivery  Instruction  Slip.  It  can be used to transfer shares from one \\n    Demat account to another demat account just like a cheque is used to transfer funds \\n    from one bank account to another bank account."}\n\n{"question": "What is a DIS and why is it required?\\n", "answer": "DIS  is  a  Delivery  Instruction  Slip. It  is  required to transfer shares from one demat account to another demat account just like a cheque is used to transfer funds from one bank account to another bank account."}', name='faq_knowledge_base', id='a79549e0-0091-4171-b08c-b563d323b4bb', tool_call_id='tooluse_vYhIQl9JT6-fJb3Hr5WAfw'), AIMessage(content=[{'type': 'text', 'text': 'Observation: The faq_knowledge_base provided relevant information explaining that DIS stands for "Delivery Instruction Slip" and it is used to transfer shares between demat accounts, similar to how a cheque transfers funds between bank accounts.'}, {'type': 'tool_use', 'name': 'AgentOutput', 'input': {'message': 'DIS stands for Delivery Instruction Slip. It is a document used to transfer shares from one demat account to another demat account, similar to how a cheque is used to transfer funds between bank accounts.', 'status': 'result'}, 'id': 'tooluse_0arT3C5bSIe-vKfzbfMjVg'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'b10a9ae5-f740-45fe-beac-986ac45ddca5', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:29:03 GMT', 'content-type': 'application/json', 'content-length': '759', 'connection': 'keep-alive', 'x-amzn-requestid': 'b10a9ae5-f740-45fe-beac-986ac45ddca5'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [3156]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--11aaea68-ee59-4d0e-914c-f696ee339327-0', tool_calls=[{'name': 'AgentOutput', 'args': {'message': 'DIS stands for Delivery Instruction Slip. It is a document used to transfer shares from one demat account to another demat account, similar to how a cheque is used to transfer funds between bank accounts.', 'status': 'result'}, 'id': 'tooluse_0arT3C5bSIe-vKfzbfMjVg', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3059, 'output_tokens': 166, 'total_tokens': 3225, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='This query response has been completed.', id='923c8df7-f076-4641-bdc4-70844f646132', tool_call_id='tooluse_0arT3C5bSIe-vKfzbfMjVg'), HumanMessage(content='ledger report', additional_kwargs={}, response_metadata={}, id='23c87be8-66f8-46f2-9f7f-68120b493ccf'), AIMessage(content=[{'type': 'tool_use', 'name': 'ReportAgent', 'input': {'instuction': 'ledger report'}, 'id': 'tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'da70629c-f432-4fd0-85b0-feb69713803e', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:45:07 GMT', 'content-type': 'application/json', 'content-length': '293', 'connection': 'keep-alive', 'x-amzn-requestid': 'da70629c-f432-4fd0-85b0-feb69713803e'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2120]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--a093bb3d-6f37-423f-8bae-3d2cbed054cd-0', tool_calls=[{'name': 'ReportAgent', 'args': {'instuction': 'ledger report'}, 'id': 'tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ', 'type': 'tool_call'}], usage_metadata={'input_tokens': 3727, 'output_tokens': 58, 'total_tokens': 3785, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='The assistant is now the ReportAgent. Reflect on the above conversation between the host assistant and the user. Remember, you are ReportAgent, Do not mention who you are - just act as the proxy for the assistant.', id='90603998-695c-4bbb-8372-48d9f7a69a79', tool_call_id='tooluse_ihA3Ibj0Tg-L8HDO2wXCDQ'), AIMessage(content=[{'type': 'text', 'text': "Thought: The user has requested a ledger report. To generate this report, I will need the following parameters:\n\n- Client ID\n- Start Date (from_Date) \n- End Date (to_Date)\n- Exchange Segment (exchange_Seg)\n- Date Type (date_Type)\n- Return Type (return_Type)\n\nI have the Client ID (NAGSYA5) from the customer context, so I don't need to ask for that.\n\nAction: "}, {'type': 'tool_use', 'name': 'AskBackToUser', 'input': {'interrupt_message': 'To generate the ledger report, I need the following details:\n\nStart Date (mm/dd/yyyy):\nEnd Date (mm/dd/yyyy): \nExchange Segment (Combine or MTF):\nDate Type (Voucher or Effective):\nReport Delivery (Link or Email):'}, 'id': 'tooluse_kmuAYJ0vR3m6mSd_wk-GBQ'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': 'd794fad0-3ac6-4b82-9847-1e5bcedc11a0', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:45:15 GMT', 'content-type': 'application/json', 'content-length': '890', 'connection': 'keep-alive', 'x-amzn-requestid': 'd794fad0-3ac6-4b82-9847-1e5bcedc11a0'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [7591]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--39f27bbf-5ba1-438b-9aa1-14946983f66d-0', tool_calls=[{'name': 'AskBackToUser', 'args': {'interrupt_message': 'To generate the ledger report, I need the following details:\n\nStart Date (mm/dd/yyyy):\nEnd Date (mm/dd/yyyy): \nExchange Segment (Combine or MTF):\nDate Type (Voucher or Effective):\nReport Delivery (Link or Email):'}, 'id': 'tooluse_kmuAYJ0vR3m6mSd_wk-GBQ', 'type': 'tool_call'}], usage_metadata={'input_tokens': 9111, 'output_tokens': 230, 'total_tokens': 9341, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='current year for combine effective', id='ebdec7da-18c1-476b-8725-4834006205a4', tool_call_id='tooluse_kmuAYJ0vR3m6mSd_wk-GBQ'), AIMessage(content=[{'type': 'text', 'text': 'Observation: The user has provided the following inputs:\n\nStart Date: current year (04/01/2025 based on date context)\nEnd Date: current year (no end date specified, so using 03/31/2026 for current financial year)\nExchange Segment: Combine \nDate Type: Effective\nReturn Type: Not specified, so using default Link\n\nThought: I now have all the required parameters to call the getLedgerStatement API and generate the ledger report.\n\nAction:'}, {'type': 'tool_use', 'name': 'request_post', 'input': {'text': '{"url": "http://10.167.203.119/gw/api/cbot/ledgerstatement", "data": {"clientId": "NAGSYA5", "from_Date": "04/01/2025", "to_Date": "03/31/2026", "exchange_Seg": "Combine", "date_Type": "Effective", "return_Type": "Link"}}'}, 'id': 'tooluse_gnliw5iOTVSL0cgCax6UIg'}], additional_kwargs={}, response_metadata={'ResponseMetadata': {'RequestId': '346f883d-7382-4ac5-9277-56f43e393d43', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Thu, 26 Jun 2025 09:45:37 GMT', 'content-type': 'application/json', 'content-length': '984', 'connection': 'keep-alive', 'x-amzn-requestid': '346f883d-7382-4ac5-9277-56f43e393d43'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [8287]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'}, id='run--d2b37bb8-8f07-41da-a633-e1062c5ec1ca-0', tool_calls=[{'name': 'request_post', 'args': {'text': '{"url": "http://10.167.203.119/gw/api/cbot/ledgerstatement", "data": {"clientId": "NAGSYA5", "from_Date": "04/01/2025", "to_Date": "03/31/2026", "exchange_Seg": "Combine", "date_Type": "Effective", "return_Type": "Link"}}'}, 'id': 'tooluse_gnliw5iOTVSL0cgCax6UIg', 'type': 'tool_call'}], usage_metadata={'input_tokens': 9358, 'output_tokens': 259, 'total_tokens': 9617, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}), ToolMessage(content='{"Status":"Success","Data":"http://10.167.203.119:8091//?SH=F3FE7F0B1BE1"}', name='request_post', id='ac5e1c7c-be37-4c78-b18f-a32e958c5862', tool_call_id='tooluse_gnliw5iOTVSL0cgCax6UIg')]
2025-06-26 15:15:41,951 mlscoringinference [INFO | react_agent.py : __call__ : 88] --> Invoking React agent with inputs...
2025-06-26 15:15:46,812 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> React agent invoked successfully.
2025-06-26 15:15:46,812 mlscoringinference [INFO | react_agent.py : __call__ : 103] --> Assistance Break.
2025-06-26 15:15:46,816 mlscoringinference [INFO | react_agent.py : __call__ : 106] --> react agent completed.
2025-06-26 15:15:46,818 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 30] --> Report Dynamic Router function Activated.
2025-06-26 15:15:46,827 mlscoringinference [INFO | final_response_node.py : report_final_response_node : 318] --> Starting report response check...
2025-06-26 15:15:46,830 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-06-26 15:15:46,831 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Here is the link to download your ledger report fo...
2025-06-26 15:15:46,832 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-06-26 15:15:46,832 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-06-26 15:15:46,833 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-06-26 15:15:46,833 mlscoringinference [INFO | final_response_node.py : process_final_response : 280] --> Regex and ban words validation passed successfully
2025-06-26 15:15:46,833 mlscoringinference [INFO | final_response_node.py : process_final_response : 283] --> API tool call message found - proceeding with API grounding validation
2025-06-26 15:15:46,833 mlscoringinference [INFO | final_response_node.py : extract_message_content : 74] --> Extracted message content at position -2
2025-06-26 15:15:46,834 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 127] --> Validating API Response grounding ...
2025-06-26 15:15:49,697 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 133] --> API Response Grounding validation complete.
2025-06-26 15:15:49,699 mlscoringinference [INFO | final_response_node.py : process_final_response : 290] --> API tool call grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'issues': 'The response directly provides the requested link from the retrieved data chunk, which appears to be a successful API response containing the link. The response is highly relevant and well-grounded in the provided context.'}
2025-06-26 15:15:49,701 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 116] --> API response validation criteria: Query relevance: High, Chunk alignment: Aligned
2025-06-26 15:15:49,702 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 124] --> API response validation result: Pass
2025-06-26 15:15:49,703 mlscoringinference [INFO | final_response_node.py : process_final_response : 301] --> API grounding validation passed successfully
2025-06-26 15:15:49,703 mlscoringinference [INFO | final_response_node.py : process_final_response : 305] --> Final response processing completed successfully
2025-06-26 15:15:49,758 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-06-26 15:15:49,803 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-06-26 15:15:49,804 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-f170889b-c924-43a8-b366-b431730833fa
2025-06-26 15:15:49,808 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: Y2XyggWZuKnAQOuw6g2QOVB
2025-06-26 15:15:49,809 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 108] --> Handled via agentic (LangGraph) flow.
2025-06-26 15:15:49,898 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='Y2XyggWZuKnAQOuw6g2QOVB' client_id='NAGSYA5' role='CLIENT' token='8bec16ea-f607-4dbf-a221-60c24b82bb1b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-f170889b-c924-43a8-b366-b431730833fa')
2025-06-26 15:15:49,901 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 15:15:49,921 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:15:49,940 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: Y2XyggWZuKnAQOuw6g2QOVB, found: Yes
2025-06-26 15:15:49,958 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 15:15:49,960 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 16:08:24,570 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-06-26 16:08:24,672 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-06-26 16:08:24,672 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-06-26 16:08:24,672 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-06-26 16:08:24,672 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 135] --> Information Centre Agent Call.
2025-06-26 16:08:24,672 mlscoringinference [INFO | assistant_tool.py : FundAgent : 166] --> Fund Agent Call.
2025-06-26 16:08:24,672 mlscoringinference [INFO | assistant_tool.py : DPAgent : 193] --> DP Agent Call.
2025-06-26 16:08:24,685 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:08:24,685 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:08:24,702 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:08:24,725 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:08:24,725 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:08:24,725 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:08:24,734 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:08:24,734 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:08:24,734 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:08:24,796 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 16:08:24,812 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:08:24,812 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:08:24,812 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:08:24,812 mlscoringinference [INFO | langgraph_builder.py : <module> : 71] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:08:24,812 mlscoringinference [INFO | langgraph_builder.py : <module> : 73] --> Rannnable Importing.
2025-06-26 16:08:24,812 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 16:08:24,812 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 16:08:24,826 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:08:24,830 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 16:08:24,830 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 16:08:24,830 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 16:08:24,830 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-06-26 16:08:24,830 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:08:24,840 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 16:08:24,840 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 16:08:24,840 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 16:08:24,843 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:08:24,846 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 16:08:24,846 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 16:08:24,846 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 16:08:24,846 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:08:24,846 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 16:08:24,846 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 16:08:24,846 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 16:08:24,846 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 16:08:24,846 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-06-26 16:08:24,859 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 16:08:24,866 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 16:08:24,866 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 16:08:24,866 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:08:24,872 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-06-26 16:08:24,872 mlscoringinference [INFO | langgraph_builder.py : <module> : 84] --> Rannnable for all agents created successfully.
2025-06-26 16:08:25,065 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 16:08:25,065 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 16:08:25,065 mlscoringinference [INFO | redis_client.py : _connect : 40] --> Connecting to Redis...
2025-06-26 16:08:25,065 mlscoringinference [INFO | redis_client.py : _connect : 50] --> Redis connection established successfully.
2025-06-26 16:08:25,065 mlscoringinference [INFO | redis_client.py : __init__ : 23] --> Connected to Redis at master.mofsl-chatbot-dev-valkey.xfjxmr.aps1.cache.amazonaws.com in dev environment.
2025-06-26 16:08:25,065 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 16:08:25,065 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 16:08:33,424 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='aqSO63PLpIGKvUaGzF4K6ic' client_id='NAGSYA5' role='CLIENT' token='3f7f3ad5-0f0e-4316-a44e-cab5d97a3dc7' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:08:33,431 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 16:08:55,595 mlscoringinference [ERROR | chatbot_service.py : get_chatbot_response : 112] --> Error processing chatbot response: Timeout connecting to server
Traceback (most recent call last):
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\connection.py", line 276, in connect
    sock = self.retry.call_with_retry(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\retry.py", line 51, in call_with_retry
    raise error
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\retry.py", line 46, in call_with_retry
    return do()
           ^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\connection.py", line 277, in <lambda>
    lambda: self._connect(), lambda error: self.disconnect(error)
            ^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\connection.py", line 747, in _connect
    sock = super()._connect()
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\connection.py", line 639, in _connect
    raise err
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\connection.py", line 627, in _connect
    sock.connect(socket_address)
TimeoutError: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\app\services\chatbot_service.py", line 88, in get_chatbot_response
    response = engine.handle_input(payload.dict())
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\engine\deterministic_engine.py", line 30, in handle_input
    if not self.session_manager.get_session(session_id):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\engine\session_managers\chatbot_session.py", line 78, in get_session
    return self.store.load(session_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\engine\session_managers\session_store.py", line 56, in load
    raw = self.redis.get(session_id)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\commands\core.py", line 1830, in get
    return self.execute_command("GET", name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\client.py", line 542, in execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\connection.py", line 1109, in get_connection
    connection.connect()
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\redis\connection.py", line 280, in connect
    raise TimeoutError("Timeout connecting to server")
redis.exceptions.TimeoutError: Timeout connecting to server
2025-06-26 16:10:34,399 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-06-26 16:10:34,552 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-06-26 16:10:34,557 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-06-26 16:10:34,564 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-06-26 16:10:34,569 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 135] --> Information Centre Agent Call.
2025-06-26 16:10:34,577 mlscoringinference [INFO | assistant_tool.py : FundAgent : 166] --> Fund Agent Call.
2025-06-26 16:10:34,586 mlscoringinference [INFO | assistant_tool.py : DPAgent : 193] --> DP Agent Call.
2025-06-26 16:10:34,602 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:10:34,606 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:10:34,624 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:10:34,638 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:10:34,643 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:10:34,650 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:10:34,656 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:10:34,659 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:10:34,664 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:10:34,722 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 16:10:34,736 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:10:34,738 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:10:34,740 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:10:34,746 mlscoringinference [INFO | langgraph_builder.py : <module> : 71] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:10:34,750 mlscoringinference [INFO | langgraph_builder.py : <module> : 73] --> Rannnable Importing.
2025-06-26 16:10:34,755 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 16:10:34,759 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 16:10:34,768 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:10:34,777 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 16:10:34,782 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 16:10:34,786 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 16:10:34,791 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-06-26 16:10:34,797 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:10:34,814 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 16:10:34,828 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 16:10:34,836 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 16:10:34,847 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:10:34,856 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 16:10:34,860 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 16:10:34,862 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 16:10:34,866 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:10:34,873 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 16:10:34,876 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 16:10:34,880 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 16:10:34,882 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 16:10:34,886 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-06-26 16:10:34,905 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 16:10:34,913 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 16:10:34,919 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 16:10:34,929 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:10:34,945 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-06-26 16:10:34,951 mlscoringinference [INFO | langgraph_builder.py : <module> : 84] --> Rannnable for all agents created successfully.
2025-06-26 16:10:35,388 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 16:10:35,391 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 16:10:35,394 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 16:10:35,402 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 16:10:43,654 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='8eKq41sFUxqQzlrBrDQXWT8' client_id='NAGSYA5' role='CLIENT' token='afc286bc-e3fb-47ee-902a-8d71513cd88b' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:10:43,663 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 16:10:45,771 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 8eKq41sFUxqQzlrBrDQXWT8, found: No
2025-06-26 16:10:45,773 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 8eKq41sFUxqQzlrBrDQXWT8, found: No
2025-06-26 16:10:45,775 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 16:10:45,779 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 16:10:50,911 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='8eKq41sFUxqQzlrBrDQXWT8' client_id='NAGSYA5' role='CLIENT' token='afc286bc-e3fb-47ee-902a-8d71513cd88b' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='hi', id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:13:01,226 mlscoringinference [ERROR | chatbot_service.py : get_chatbot_response : 112] --> Error processing chatbot response: connection timeout expired
Traceback (most recent call last):
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\app\services\chatbot_service.py", line 98, in get_chatbot_response
    with psycopg.connect(DB_URI, **connection_kwargs) as conn:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\psycopg\connection.py", line 118, in connect
    raise last_ex.with_traceback(None)
psycopg.errors.ConnectionTimeout: connection timeout expired
2025-06-26 16:17:17,731 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-06-26 16:17:17,792 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-06-26 16:17:17,792 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-06-26 16:17:17,796 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-06-26 16:17:17,798 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 135] --> Information Centre Agent Call.
2025-06-26 16:17:17,800 mlscoringinference [INFO | assistant_tool.py : FundAgent : 166] --> Fund Agent Call.
2025-06-26 16:17:17,800 mlscoringinference [INFO | assistant_tool.py : DPAgent : 193] --> DP Agent Call.
2025-06-26 16:17:17,807 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:17:17,807 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:17:17,808 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:17:17,808 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:17:17,808 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:17:17,808 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:17:17,822 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:17:17,822 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:17:17,822 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:17:17,846 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 16:17:17,850 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:17:17,850 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:17:17,850 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:17:17,850 mlscoringinference [INFO | langgraph_builder.py : <module> : 71] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:17:17,850 mlscoringinference [INFO | langgraph_builder.py : <module> : 73] --> Rannnable Importing.
2025-06-26 16:17:17,856 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 16:17:17,856 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 16:17:17,856 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:17:17,862 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 16:17:17,862 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 16:17:17,862 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 16:17:17,862 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-06-26 16:17:17,862 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:17:17,862 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 16:17:17,872 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 16:17:17,872 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 16:17:17,872 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:17:17,872 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 16:17:17,872 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 16:17:17,872 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 16:17:17,872 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:17:17,872 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 16:17:17,872 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 16:17:17,872 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 16:17:17,883 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 16:17:17,883 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-06-26 16:17:17,888 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 16:17:17,888 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 16:17:17,888 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 16:17:17,888 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:17:17,888 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-06-26 16:17:17,888 mlscoringinference [INFO | langgraph_builder.py : <module> : 84] --> Rannnable for all agents created successfully.
2025-06-26 16:17:18,062 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 16:17:18,062 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 16:17:18,062 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 16:17:18,062 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 16:18:35,209 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='xk1WRBhg9jTpZcxiCH52iU6' client_id='NAGSYA5' role='CLIENT' token='8d938597-0f14-4a55-8559-f236b4e55dd1' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:18:35,213 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 16:18:37,273 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6, found: No
2025-06-26 16:18:37,273 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6, found: No
2025-06-26 16:18:37,277 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 16:18:37,280 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 16:18:42,229 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='xk1WRBhg9jTpZcxiCH52iU6' client_id='NAGSYA5' role='CLIENT' token='8d938597-0f14-4a55-8559-f236b4e55dd1' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:18:42,233 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 16:18:42,236 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6, found: Yes
2025-06-26 16:18:42,240 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6, found: Yes
2025-06-26 16:18:42,246 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 16:18:42,253 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 16:18:44,754 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='xk1WRBhg9jTpZcxiCH52iU6' client_id='NAGSYA5' role='CLIENT' token='8d938597-0f14-4a55-8559-f236b4e55dd1' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='my_details', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:18:44,754 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 16:18:44,754 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6, found: Yes
2025-06-26 16:18:44,763 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6, found: Yes
2025-06-26 16:18:44,766 mlscoringinference [INFO | chatbot_navigator.py : navigate : 86] --> session data: {'user_id': 'NAGSYA5', 'role': 'CLIENT', 'input_params': {'action': 'initial', 'response_text': 'Welcome to your Mo Gini assistant. How can I help you today?', 'available_choices': [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}], 'id': 'initial_client'}, 'last_updated': '2025-06-26T10:48:42.240682', 'history_stack': []}
2025-06-26 16:18:44,773 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6_api_payload, found: Yes
2025-06-26 16:18:44,776 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6_api_payload, found: Yes
2025-06-26 16:18:44,779 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6_api_payload, found: Yes
2025-06-26 16:18:44,783 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6_api_payload, found: Yes
2025-06-26 16:18:44,787 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6_api_payload, found: Yes
2025-06-26 16:18:44,789 mlscoringinference [INFO | chatbot_session.py : update_header : 264] --> Updated user data: {'user_id': 'NAGSYA5', 'session_id': 'xk1WRBhg9jTpZcxiCH52iU6', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '8d938597-0f14-4a55-8559-f236b4e55dd1', 'interaction': {'type': 'DETERMINISTIC_FLOW', 'attachement': '', 'input': {'text': None, 'id': 'my_details', 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': None}}
2025-06-26 16:18:44,792 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6_api_payload, found: Yes
2025-06-26 16:18:44,793 mlscoringinference [INFO | chatbot_session.py : get_api_paylods : 241] --> get_api_paylods: {'api_payloads': {'user_id': 'NAGSYA5', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '8d938597-0f14-4a55-8559-f236b4e55dd1', 'session_id': 'xk1WRBhg9jTpZcxiCH52iU6', 'api_endpoint': 'my_details'}, 'last_updated': '2025-06-26T10:48:44.789248'}
2025-06-26 16:18:44,795 mlscoringinference [INFO | chatbot_session.py : order_type : 406] --> No segment mapping found for click id: my_details
2025-06-26 16:18:44,798 mlscoringinference [WARNING | chatbot_session.py : account_opening_partner : 381] --> Unknown click_id: my_details
2025-06-26 16:18:44,800 mlscoringinference [INFO | chatbot_navigator.py : navigate : 102] --> CURRENT ID : my_details
2025-06-26 16:18:44,800 mlscoringinference [INFO | chatbot_navigator.py : navigate : 106] --> NEXT STATE : {'action': 'endapi', 'endpoint': 'my_details', 'id': 'my_details'}
2025-06-26 16:18:44,802 mlscoringinference [INFO | chatbot_navigator.py : navigate : 141] --> END API CALL INITIATED
2025-06-26 16:18:44,804 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6_api_payload, found: Yes
2025-06-26 16:18:44,804 mlscoringinference [INFO | chatbot_session.py : get_api_paylods : 241] --> get_api_paylods: {'api_payloads': {'user_id': 'NAGSYA5', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '8d938597-0f14-4a55-8559-f236b4e55dd1', 'session_id': 'xk1WRBhg9jTpZcxiCH52iU6', 'api_endpoint': 'my_details'}, 'last_updated': '2025-06-26T10:48:44.789248'}
2025-06-26 16:18:44,806 mlscoringinference [INFO | chatbot_session.py : get_client_id_for_partner : 157] --> xk1WRBhg9jTpZcxiCH52iU6_client_id
2025-06-26 16:18:44,807 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6_client_id, found: No
2025-06-26 16:18:44,807 mlscoringinference [INFO | chatbot_session.py : get_client_id_for_partner : 159] --> None
2025-06-26 16:18:44,809 mlscoringinference [INFO | chatbot_session.py : get_client_id_for_partner : 160] --> Client id fetched from Redis: None
2025-06-26 16:18:44,809 mlscoringinference [ERROR | chatbot_session.py : get_client_id_for_partner : 165] --> Client ID not found in Redis for session: xk1WRBhg9jTpZcxiCH52iU6
2025-06-26 16:18:44,809 mlscoringinference [INFO | endpoint_api_handler.py : handle_primary_api : 38] --> HANDLE PRIMARY API INITIATED
2025-06-26 16:18:44,814 mlscoringinference [INFO | endpoint_api_handler.py : handle_primary_api : 45] --> my_details - API ENDPOINT
2025-06-26 16:18:44,814 mlscoringinference [DEBUG | endpoint_api_handler.py : handle_primary_api : 66] --> Calling endpoint 'my_details' with args: {'user_id': 'NAGSYA5', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '8d938597-0f14-4a55-8559-f236b4e55dd1', 'session_id': 'xk1WRBhg9jTpZcxiCH52iU6'}
2025-06-26 16:18:45,155 mlscoringinference [DEBUG | endpoint_api_handler.py : handle_primary_api : 68] --> Raw response from endpoint 'my_details': {'Status': 'Success', 'Data': [{'ClientCode': 'NAGSYA5', 'ClientName': 'GULREZ IMRAN ALI', 'MobileNo': '9370605963', 'EmailId': 'gulrez.ali1971@gmail.com', 'Family': 'NAG1200', 'DefaultDPID': '1201090003822577', 'BankName': 'AXIS BANK LTD--SAVING', 'AccNumber': '924010002129578', 'BranchFranchisee': 'PUKHRAJ CAPITAL AND SHARE BROKING PVT LTD', 'BranchFranchiseeNo': '9822223399', 'BranchFranchiseeAdd': 'PUKHRAJ HOUSE, VIP ROAD, DHARAMPETH,Pin-440010,Nagpur,MH,India', 'Branch': 'RETAILNAGP', 'SubBroker': 'RPUKRAJ', 'Trader': 'PUKHRAJ2', 'AccountType': 'NOR', 'AccountStatus': 'ACTIVE', 'Segment': 'BSE , CDSL, NSE', 'Advisor': 'You are a Call and trade Customer - Kindly call on 022-62126661 from your registered mobile number'}]}
2025-06-26 16:18:45,159 mlscoringinference [INFO | endpoint_api_handler.py : handle_primary_api : 71] --> API 'my_details' call successful
2025-06-26 16:18:45,164 mlscoringinference [DEBUG | endpoint_api_handler.py : handle_primary_api : 72] --> Response: {'Status': 'Success', 'Data': [{'ClientCode': 'NAGSYA5', 'ClientName': 'GULREZ IMRAN ALI', 'MobileNo': '9370605963', 'EmailId': 'gulrez.ali1971@gmail.com', 'Family': 'NAG1200', 'DefaultDPID': '1201090003822577', 'BankName': 'AXIS BANK LTD--SAVING', 'AccNumber': '924010002129578', 'BranchFranchisee': 'PUKHRAJ CAPITAL AND SHARE BROKING PVT LTD', 'BranchFranchiseeNo': '9822223399', 'BranchFranchiseeAdd': 'PUKHRAJ HOUSE, VIP ROAD, DHARAMPETH,Pin-440010,Nagpur,MH,India', 'Branch': 'RETAILNAGP', 'SubBroker': 'RPUKRAJ', 'Trader': 'PUKHRAJ2', 'AccountType': 'NOR', 'AccountStatus': 'ACTIVE', 'Segment': 'BSE , CDSL, NSE', 'Advisor': 'You are a Call and trade Customer - Kindly call on 022-62126661 from your registered mobile number'}], 'action': 'result'}
2025-06-26 16:18:45,164 mlscoringinference [INFO | endpoint_api_handler.py : handle_primary_api : 74] --> {'Status': 'Success', 'Data': [{'ClientCode': 'NAGSYA5', 'ClientName': 'GULREZ IMRAN ALI', 'MobileNo': '9370605963', 'EmailId': 'gulrez.ali1971@gmail.com', 'Family': 'NAG1200', 'DefaultDPID': '1201090003822577', 'BankName': 'AXIS BANK LTD--SAVING', 'AccNumber': '924010002129578', 'BranchFranchisee': 'PUKHRAJ CAPITAL AND SHARE BROKING PVT LTD', 'BranchFranchiseeNo': '9822223399', 'BranchFranchiseeAdd': 'PUKHRAJ HOUSE, VIP ROAD, DHARAMPETH,Pin-440010,Nagpur,MH,India', 'Branch': 'RETAILNAGP', 'SubBroker': 'RPUKRAJ', 'Trader': 'PUKHRAJ2', 'AccountType': 'NOR', 'AccountStatus': 'ACTIVE', 'Segment': 'BSE , CDSL, NSE', 'Advisor': 'You are a Call and trade Customer - Kindly call on 022-62126661 from your registered mobile number'}], 'action': 'result'} - RESPONSE
2025-06-26 16:18:45,166 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 16:18:45,169 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 16:18:45,482 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='xk1WRBhg9jTpZcxiCH52iU6' client_id='NAGSYA5' role='CLIENT' token='8d938597-0f14-4a55-8559-f236b4e55dd1' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:18:45,490 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 16:18:45,494 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6, found: Yes
2025-06-26 16:18:45,502 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: xk1WRBhg9jTpZcxiCH52iU6, found: Yes
2025-06-26 16:18:45,503 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 16:18:45,509 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 16:18:51,000 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='xk1WRBhg9jTpZcxiCH52iU6' client_id='NAGSYA5' role='CLIENT' token='8d938597-0f14-4a55-8559-f236b4e55dd1' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='hello', id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:21:01,091 mlscoringinference [ERROR | chatbot_service.py : get_chatbot_response : 112] --> Error processing chatbot response: connection timeout expired
Traceback (most recent call last):
  File "D:\mofsl-wmchatbot-repo\chatbot_backend\app\services\chatbot_service.py", line 98, in get_chatbot_response
    # with psycopg.connect(DB_URI, **connection_kwargs) as conn:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\psycopg\connection.py", line 118, in connect
    raise last_ex.with_traceback(None)
psycopg.errors.ConnectionTimeout: connection timeout expired
2025-06-26 16:21:15,315 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-06-26 16:21:15,402 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-06-26 16:21:15,404 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-06-26 16:21:15,408 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-06-26 16:21:15,408 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 135] --> Information Centre Agent Call.
2025-06-26 16:21:15,410 mlscoringinference [INFO | assistant_tool.py : FundAgent : 166] --> Fund Agent Call.
2025-06-26 16:21:15,411 mlscoringinference [INFO | assistant_tool.py : DPAgent : 193] --> DP Agent Call.
2025-06-26 16:21:15,416 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:21:15,418 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:21:15,418 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:15,424 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:21:15,424 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:21:15,424 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:15,432 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:21:15,432 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:21:15,432 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:15,459 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 16:21:15,463 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:21:15,463 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:21:15,466 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:15,466 mlscoringinference [INFO | langgraph_builder.py : <module> : 71] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:15,466 mlscoringinference [INFO | langgraph_builder.py : <module> : 73] --> Rannnable Importing.
2025-06-26 16:21:15,469 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 16:21:15,469 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 16:21:15,473 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:15,480 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 16:21:15,480 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 16:21:15,480 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 16:21:15,482 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-06-26 16:21:15,482 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:15,482 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 16:21:15,482 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 16:21:15,482 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 16:21:15,490 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:15,490 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 16:21:15,490 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 16:21:15,490 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 16:21:15,490 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:15,507 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 16:21:15,509 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 16:21:15,509 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 16:21:15,511 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 16:21:15,513 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-06-26 16:21:15,532 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 16:21:15,534 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 16:21:15,534 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 16:21:15,540 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:15,549 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-06-26 16:21:15,549 mlscoringinference [INFO | langgraph_builder.py : <module> : 84] --> Rannnable for all agents created successfully.
2025-06-26 16:21:15,732 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 16:21:15,732 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 16:21:15,732 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 16:21:15,732 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 94] --> Graph State define Initiated.
2025-06-26 16:21:15,737 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 96] --> Graph State define Successfull.
2025-06-26 16:21:15,737 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 99] --> Defining nodes in the graph.
2025-06-26 16:21:15,737 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 106] --> Registering agents and tools in the graph.
2025-06-26 16:21:15,800 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 159] --> Adding edges to the graph.
2025-06-26 16:21:15,800 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 202] --> LangGraph Supervisor created successfully.
2025-06-26 16:21:15,816 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 16:21:27,315 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-06-26 16:21:27,390 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-06-26 16:21:27,390 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-06-26 16:21:27,390 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-06-26 16:21:27,394 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 135] --> Information Centre Agent Call.
2025-06-26 16:21:27,394 mlscoringinference [INFO | assistant_tool.py : FundAgent : 166] --> Fund Agent Call.
2025-06-26 16:21:27,394 mlscoringinference [INFO | assistant_tool.py : DPAgent : 193] --> DP Agent Call.
2025-06-26 16:21:27,394 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:21:27,394 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:21:27,394 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:27,405 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:21:27,405 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:21:27,405 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:27,411 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:21:27,411 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:21:27,411 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:27,428 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-06-26 16:21:27,439 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-06-26 16:21:27,439 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-06-26 16:21:27,442 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:27,442 mlscoringinference [INFO | langgraph_builder.py : <module> : 71] --> ChatBedrockConverse model initialized successfully
2025-06-26 16:21:27,442 mlscoringinference [INFO | langgraph_builder.py : <module> : 73] --> Rannnable Importing.
2025-06-26 16:21:27,442 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-06-26 16:21:27,442 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-06-26 16:21:27,442 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:27,450 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-06-26 16:21:27,450 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-06-26 16:21:27,450 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-06-26 16:21:27,450 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-06-26 16:21:27,450 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:27,458 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-06-26 16:21:27,458 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-06-26 16:21:27,458 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-06-26 16:21:27,458 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:27,465 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-06-26 16:21:27,465 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-06-26 16:21:27,465 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-06-26 16:21:27,465 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:27,469 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-06-26 16:21:27,469 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-06-26 16:21:27,469 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-06-26 16:21:27,469 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-06-26 16:21:27,473 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-06-26 16:21:27,480 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-06-26 16:21:27,480 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-06-26 16:21:27,480 mlscoringinference [INFO | json_utils.py : load_json_file : 53] --> Loading JSON file from path: D:\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-06-26 16:21:27,480 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-06-26 16:21:27,485 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-06-26 16:21:27,485 mlscoringinference [INFO | langgraph_builder.py : <module> : 84] --> Rannnable for all agents created successfully.
2025-06-26 16:21:27,680 mlscoringinference [INFO | chatbot_service.py : <module> : 37] --> Chatbot service initialization started.
2025-06-26 16:21:27,680 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-06-26 16:21:27,680 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-06-26 16:21:27,680 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 94] --> Graph State define Initiated.
2025-06-26 16:21:27,680 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 96] --> Graph State define Successfull.
2025-06-26 16:21:27,680 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 99] --> Defining nodes in the graph.
2025-06-26 16:21:27,680 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 106] --> Registering agents and tools in the graph.
2025-06-26 16:21:27,738 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 159] --> Adding edges to the graph.
2025-06-26 16:21:27,738 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 202] --> LangGraph Supervisor created successfully.
2025-06-26 16:21:27,759 mlscoringinference [INFO | chatbot_service.py : <module> : 53] --> Chatbot service initialized successfully.
2025-06-26 16:21:43,880 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='rodk0RyFdBbdq9oEUXZIihw' client_id='NAGSYA5' role='CLIENT' token='3d5df443-ad46-46aa-80a4-c7111d7550bd' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:21:43,890 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 16:21:45,957 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: rodk0RyFdBbdq9oEUXZIihw, found: No
2025-06-26 16:21:45,961 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: rodk0RyFdBbdq9oEUXZIihw, found: No
2025-06-26 16:21:45,967 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 16:21:45,972 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
2025-06-26 16:21:52,752 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='rodk0RyFdBbdq9oEUXZIihw' client_id='NAGSYA5' role='CLIENT' token='3d5df443-ad46-46aa-80a4-c7111d7550bd' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='hello', id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-06-26 16:21:52,756 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : None
2025-06-26 16:21:52,767 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-e4fa3cde-88af-46dd-b45a-3a056af17c55
2025-06-26 16:21:52,769 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-e4fa3cde-88af-46dd-b45a-3a056af17c55
2025-06-26 16:21:52,772 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'hello'
2025-06-26 16:21:52,793 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 6
2025-06-26 16:21:52,854 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 22] --> Trimmed messages: [HumanMessage(content='hello', additional_kwargs={}, response_metadata={}, id='27d8611f-49fe-447f-b24f-ba91a8af35c2')]
2025-06-26 16:21:52,854 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 24] --> Assistance started..
2025-06-26 16:21:55,725 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 36] --> Assistance Break.
2025-06-26 16:21:55,727 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assitance completed.
2025-06-26 16:21:55,729 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 13] --> Primary Router function Activated.
2025-06-26 16:21:55,735 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 16] --> Primary Router state has no Tool.
2025-06-26 16:21:55,748 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 201] --> Starting assistance check messages extraction...
2025-06-26 16:21:55,751 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 211] --> Found AIMessage without tool calls - proceeding with assistance guard check
2025-06-26 16:21:55,753 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 50] --> Starting intent guard check...
2025-06-26 16:21:55,754 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 52] --> Checking response intent...
2025-06-26 16:21:59,729 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 57] --> Intent guard check complete
2025-06-26 16:21:59,729 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 214] --> Assistance guard check result: {'intent_type': 'Greeting', 'reason': 'The response is a simple greeting, saying "Hello! How can I assist you today?"'}
2025-06-26 16:21:59,734 mlscoringinference [INFO | final_response_node.py : assisatnce_pass_signal : 145] --> Assistance guard result: Pass
2025-06-26 16:21:59,747 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-06-26 16:21:59,752 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-06-26 16:21:59,761 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-e4fa3cde-88af-46dd-b45a-3a056af17c55
2025-06-26 16:21:59,761 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: rodk0RyFdBbdq9oEUXZIihw
2025-06-26 16:21:59,765 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 108] --> Handled via agentic (LangGraph) flow.
2025-06-26 16:22:00,147 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 69] --> Received chatbot payload: user_id='NAGSYA5' session_id='rodk0RyFdBbdq9oEUXZIihw' client_id='NAGSYA5' role='CLIENT' token='3d5df443-ad46-46aa-80a4-c7111d7550bd' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-e4fa3cde-88af-46dd-b45a-3a056af17c55')
2025-06-26 16:22:00,155 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 87] --> Invoking graph with interrupt resume command
2025-06-26 16:22:00,157 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: rodk0RyFdBbdq9oEUXZIihw, found: Yes
2025-06-26 16:22:00,161 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: rodk0RyFdBbdq9oEUXZIihw, found: Yes
2025-06-26 16:22:00,164 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 89] --> Interrupt resume completed successfully
2025-06-26 16:22:00,170 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 93] --> Handled via deterministic flow.
