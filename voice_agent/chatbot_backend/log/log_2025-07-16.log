2025-07-16 10:30:50,883 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 10:31:13,362 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 10:31:16,860 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 10:31:16,950 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:16,950 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:16,958 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:17,014 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 10:31:17,014 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 10:31:17,014 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 10:31:17,014 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 10:31:17,014 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 10:31:17,014 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 10:31:17,040 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 10:31:17,062 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:17,062 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:17,062 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:17,082 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:17,082 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:17,082 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:17,088 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:17,088 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:17,088 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:17,137 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:17,137 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:17,137 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:17,137 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:17,137 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 10:31:17,144 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 10:31:17,144 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 10:31:17,144 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 10:31:17,152 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 10:31:17,152 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 10:31:17,152 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 10:31:17,152 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 10:31:17,152 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 10:31:17,152 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:17,173 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 10:31:17,173 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 10:31:17,173 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 10:31:17,173 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 10:31:17,173 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 10:31:17,173 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 10:31:17,183 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 10:31:17,184 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 10:31:17,184 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 10:31:17,187 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:17,187 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 10:31:17,187 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 10:31:17,438 mlscoringinference [INFO | chatbot_service.py : <module> : 32] --> Chatbot service initialization started.
2025-07-16 10:31:17,438 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 10:31:17,438 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 10:31:17,438 mlscoringinference [INFO | chatbot_service.py : <module> : 48] --> Chatbot service initialized successfully.
2025-07-16 10:31:28,850 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 10:31:31,530 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 10:31:31,560 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:31,560 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:31,570 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:31,576 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 10:31:31,592 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 10:31:31,594 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 10:31:31,594 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 10:31:31,596 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 10:31:31,596 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 10:31:31,612 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 10:31:31,612 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:31,612 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:31,612 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:31,618 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:31,618 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:31,618 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:31,624 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:31,624 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:31,624 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:31,632 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:31:31,632 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:31:31,632 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:31,632 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:31:31,632 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 10:31:31,632 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 10:31:31,632 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 10:31:31,640 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:31,647 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 10:31:31,647 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 10:31:31,647 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 10:31:31,649 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 10:31:31,649 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 10:31:31,649 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:31,657 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 10:31:31,658 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 10:31:31,658 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 10:31:31,660 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:31,662 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 10:31:31,662 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 10:31:31,664 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 10:31:31,664 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:31,671 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 10:31:31,671 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 10:31:31,671 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 10:31:31,671 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 10:31:31,671 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 10:31:31,671 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 10:31:31,678 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 10:31:31,678 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 10:31:31,678 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 10:31:31,678 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:31:31,684 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 10:31:31,684 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 10:31:31,817 mlscoringinference [INFO | chatbot_service.py : <module> : 32] --> Chatbot service initialization started.
2025-07-16 10:31:31,820 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 10:31:31,820 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 10:31:31,820 mlscoringinference [INFO | chatbot_service.py : <module> : 48] --> Chatbot service initialized successfully.
2025-07-16 10:33:05,571 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 64] --> Received chatbot payload: user_id='NAGSYA5' session_id='nrbfemEEOTH114muWBktGiT' client_id='NAGSYA5' role='CLIENT' token='c1013693-bdfd-4035-b5db-ce7ec7fd2651' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-07-16 10:33:05,571 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 65] --> Starting to classify payload ID type.
2025-07-16 10:35:15,916 mlscoringinference [ERROR | chatbot_service.py : get_chatbot_response : 129] --> Error processing chatbot response: connection timeout expired
Traceback (most recent call last):
  File "C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\app\services\chatbot_service.py", line 68, in get_chatbot_response
    with psycopg.connect(DB_URI, **connection_kwargs) as conn:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\psycopg\connection.py", line 118, in connect
    raise last_ex.with_traceback(None)
psycopg.errors.ConnectionTimeout: connection timeout expired
2025-07-16 10:35:26,463 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 64] --> Received chatbot payload: user_id='NAGSYA5' session_id='nrbfemEEOTH114muWBktGiT' client_id='NAGSYA5' role='CLIENT' token='c1013693-bdfd-4035-b5db-ce7ec7fd2651' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='hi', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-07-16 10:35:26,467 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 65] --> Starting to classify payload ID type.
2025-07-16 10:37:36,492 mlscoringinference [ERROR | chatbot_service.py : get_chatbot_response : 129] --> Error processing chatbot response: connection timeout expired
Traceback (most recent call last):
  File "C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\app\services\chatbot_service.py", line 68, in get_chatbot_response
    with psycopg.connect(DB_URI, **connection_kwargs) as conn:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\rohangupta\AppData\Local\Programs\Python\Python311\Lib\site-packages\psycopg\connection.py", line 118, in connect
    raise last_ex.with_traceback(None)
psycopg.errors.ConnectionTimeout: connection timeout expired
2025-07-16 10:49:23,979 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 10:49:27,987 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 10:49:28,040 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:28,040 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:28,056 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:28,088 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 10:49:28,092 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 10:49:28,092 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 10:49:28,092 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 10:49:28,092 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 10:49:28,092 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 10:49:28,112 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 10:49:28,122 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:28,124 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:28,124 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:28,126 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:28,126 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:28,126 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:28,126 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:28,135 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:28,136 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:28,153 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:28,153 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:28,153 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:28,153 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:28,153 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 10:49:28,153 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 10:49:28,153 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 10:49:28,153 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:49:28,162 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 10:49:28,162 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 10:49:28,162 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 10:49:28,162 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 10:49:28,167 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 10:49:28,167 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:49:28,167 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 10:49:28,167 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 10:49:28,167 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 10:49:28,167 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:49:28,178 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 10:49:28,178 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 10:49:28,178 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 10:49:28,178 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:49:28,184 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 10:49:28,184 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 10:49:28,184 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 10:49:28,184 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 10:49:28,184 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 10:49:28,184 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 10:49:28,192 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 10:49:28,192 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 10:49:28,192 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 10:49:28,192 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 10:49:28,197 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 10:49:28,197 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 10:49:28,202 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 10:49:28,202 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 10:49:28,204 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 10:49:28,204 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:49:28,204 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:49:28,204 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:49:28,204 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:49:28,252 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:49:28,252 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:49:28,280 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 10:49:37,406 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-07-16 10:49:37,409 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:49:37,409 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:49:37,411 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:49:37,411 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:49:37,413 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:49:37,534 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:49:37,534 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:49:37,601 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:49:37,601 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:49:37,609 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:49:37,609 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:49:37,609 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:37,615 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:37,615 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:37,619 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:49:37,621 mlscoringinference [ERROR | simple_flow_router.py : classify_id_type : 172] --> ID type classification failed: 'NoneType' object has no attribute 'split'
2025-07-16 10:49:37,621 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:49:37,621 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 10:49:37,621 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 10:49:39,676 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: No
2025-07-16 10:49:39,679 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: No
2025-07-16 10:49:39,680 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 10:49:39,684 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 10:49:43,407 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='hi', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-07-16 10:49:43,408 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:49:43,408 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:49:43,408 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:49:43,408 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:49:43,408 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:49:43,525 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:49:43,525 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:49:43,731 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:49:43,731 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:49:43,731 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:49:43,737 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:49:43,741 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:43,742 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:43,742 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:43,742 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:49:43,745 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 1
2025-07-16 10:49:43,747 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 143] --> Short input detected in agentic flow
2025-07-16 10:49:43,747 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 145] --> Invoking flow router runnable for short input in agentic flow
2025-07-16 10:49:47,033 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 147] --> Result from flow router: content=[{'type': 'text', 'text': 'Based on the input "hi", there is no clear match to any of the available id_types. This seems to be a general greeting rather than a request for a specific report or statement. Therefore, I will return:'}, {'type': 'tool_use', 'name': 'IDTypeClassifierTool', 'input': {'id_type': ['other']}, 'id': 'tooluse_LoDI8hgvRPm4ZPo2Qgk2sQ'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': '9f05c629-c3e2-478b-a690-bac641e7cb78', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 05:19:46 GMT', 'content-type': 'application/json', 'content-length': '509', 'connection': 'keep-alive', 'x-amzn-requestid': '9f05c629-c3e2-478b-a690-bac641e7cb78'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [1763]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--4d380b22-7d52-478f-87a8-7084eff8f068-0' tool_calls=[{'name': 'IDTypeClassifierTool', 'args': {'id_type': ['other']}, 'id': 'tooluse_LoDI8hgvRPm4ZPo2Qgk2sQ', 'type': 'tool_call'}] usage_metadata={'input_tokens': 985, 'output_tokens': 106, 'total_tokens': 1091, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}
2025-07-16 10:49:47,033 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 165] --> Classified as 'other' due to short input in agentic flow
2025-07-16 10:49:47,033 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:49:47,033 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : None
2025-07-16 10:49:47,040 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-ed2ea91b-fd71-43cb-aedd-c73079c15c5a
2025-07-16 10:49:47,040 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-ed2ea91b-fd71-43cb-aedd-c73079c15c5a
2025-07-16 10:49:47,040 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'hi'
2025-07-16 10:49:47,049 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 5
2025-07-16 10:49:47,072 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 10:49:48,202 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 10:49:48,204 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 10:49:48,205 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 10:49:48,205 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 18] --> Primary Router state has no Tool.
2025-07-16 10:49:48,205 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 138] --> Starting assistance check messages extraction...
2025-07-16 10:49:48,205 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 148] --> Found AIMessage without tool calls - proceeding with assistance guard check
2025-07-16 10:49:48,205 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 51] --> Starting intent guard check...
2025-07-16 10:49:48,205 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 53] --> Checking response intent...
2025-07-16 10:49:49,908 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 58] --> Intent guard check complete
2025-07-16 10:49:49,910 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 151] --> Assistance guard check result: {'intent_type': 'Greeting', 'reason': 'The response is just the greeting "Hello!" with no additional content.'}
2025-07-16 10:49:49,910 mlscoringinference [INFO | final_response_node.py : assisatnce_pass_signal : 130] --> Assistance guard result: Pass
2025-07-16 10:49:49,910 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 153] --> Assistance guard check result: True
2025-07-16 10:49:49,910 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 10:49:49,910 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Hello!...
2025-07-16 10:49:49,913 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 10:49:49,915 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 155] --> Regex guard check result: True
2025-07-16 10:49:49,915 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 10:49:49,915 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 10:49:49,915 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 157] --> Ban words guard check result: True
2025-07-16 10:49:49,915 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 159] --> Assistance guard check passed successfully.
2025-07-16 10:49:49,915 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 10:49:49,915 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 10:49:49,915 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-ed2ea91b-fd71-43cb-aedd-c73079c15c5a
2025-07-16 10:49:49,915 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: plMtEbGvs6hmNijfQfdQG3W
2025-07-16 10:49:49,915 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 10:49:50,000 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-ed2ea91b-fd71-43cb-aedd-c73079c15c5a')
2025-07-16 10:49:50,003 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:49:50,005 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:49:50,005 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:49:50,007 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:49:50,007 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:49:50,184 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:49:50,186 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:49:50,243 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:49:50,263 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:49:50,268 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:49:50,275 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:49:50,277 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:50,277 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:50,277 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:50,277 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:49:50,283 mlscoringinference [ERROR | simple_flow_router.py : classify_id_type : 172] --> ID type classification failed: 'NoneType' object has no attribute 'split'
2025-07-16 10:49:50,283 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:49:50,286 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 10:49:50,287 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 10:49:50,289 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: Yes
2025-07-16 10:49:50,289 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: Yes
2025-07-16 10:49:50,291 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 10:49:50,291 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 10:49:59,836 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='can you give me ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-ed2ea91b-fd71-43cb-aedd-c73079c15c5a')
2025-07-16 10:49:59,836 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:49:59,836 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:49:59,836 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:49:59,838 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:49:59,838 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:49:59,906 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:49:59,906 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:49:59,934 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:49:59,934 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:49:59,934 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:49:59,939 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:49:59,940 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:49:59,940 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:49:59,941 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:49:59,941 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:49:59,941 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 6
2025-07-16 10:49:59,941 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 10:49:59,941 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:49:59,941 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : req-ed2ea91b-fd71-43cb-aedd-c73079c15c5a
2025-07-16 10:49:59,941 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d
2025-07-16 10:49:59,941 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d
2025-07-16 10:49:59,941 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'can you give me ledger report'
2025-07-16 10:49:59,948 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 24
2025-07-16 10:49:59,948 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 10:50:07,719 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 10:50:07,721 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 10:50:07,721 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 10:50:07,721 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 10:50:07,726 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 10:50:07,726 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 10:50:07,726 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 10:50:07,726 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 10:50:07,728 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 130
2025-07-16 10:50:07,728 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 10:50:14,686 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 10:50:14,686 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 10:50:14,686 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 10:50:14,693 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 10:50:14,693 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 10:50:14,695 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 10:50:14,698 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate the ledger report, I need the following information:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy format) \n- End date for the report (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery method (Link or Email)\n\nPlease provide the missing details so I can fetch the ledger report for you.'}, 'id': 'tooluse_FHk9TOHwTl69r9DDI8Z6cA', 'type': 'tool_call'}
2025-07-16 10:50:14,698 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 10:50:14,698 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 10:50:14,698 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate the ledger report, I need the follow...
2025-07-16 10:50:14,698 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 10:50:14,700 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 10:50:14,700 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 10:50:14,700 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 10:50:14,701 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 10:50:14,704 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 10:50:14,706 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 10:50:14,706 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d
2025-07-16 10:50:14,706 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: plMtEbGvs6hmNijfQfdQG3W
2025-07-16 10:50:14,706 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 10:50:14,755 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d')
2025-07-16 10:50:14,757 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:50:14,757 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:50:14,757 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:50:14,757 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:50:14,759 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:50:14,828 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:50:14,829 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:50:14,872 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:50:14,873 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:50:14,874 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:50:14,875 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:50:14,877 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:50:14,877 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:50:14,879 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:50:14,879 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:50:14,883 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 10:50:14,883 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:50:14,885 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 10:50:14,886 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 10:50:14,888 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: Yes
2025-07-16 10:50:14,889 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: Yes
2025-07-16 10:50:14,891 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 10:50:14,893 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 10:50:44,757 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='for last year throgh default settings', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d')
2025-07-16 10:50:44,757 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:50:44,757 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:50:44,760 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:50:44,760 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:50:44,761 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:50:44,869 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:50:44,869 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:50:44,929 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:50:44,929 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:50:44,929 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:50:44,929 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:50:44,934 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:50:44,936 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:50:44,936 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:50:44,936 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:50:44,942 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 10:50:44,946 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:50:44,947 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d
2025-07-16 10:50:44,950 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 10:50:44,950 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d
2025-07-16 10:50:44,952 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 10:50:44,962 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 10:50:44,962 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate the ledger report, I need the following information:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy format) \n- End date for the report (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery method (Link or Email)\n\nPlease provide the missing details so I can fetch the ledger report for you.'}, 'id': 'tooluse_FHk9TOHwTl69r9DDI8Z6cA', 'type': 'tool_call'}
2025-07-16 10:50:44,964 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 10:50:44,964 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 10:50:44,964 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate the ledger report, I need the follow...
2025-07-16 10:50:44,964 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 10:50:44,966 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 10:50:44,967 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 10:50:44,967 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 10:50:44,967 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 10:50:44,967 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 27] --> User input received: for last year throgh default settings
2025-07-16 10:50:44,973 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 10:50:44,973 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 10:50:44,973 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 10:50:44,976 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 10:50:44,980 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 339
2025-07-16 10:50:44,982 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 10:50:52,572 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 10:50:52,574 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 10:50:52,574 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 10:50:52,576 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 10:50:52,596 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-07-16 10:50:52,598 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 10:50:52,602 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 70] --> System parameters mapper loaded from agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 10:50:52,602 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 80] --> System parameters mapper updated with base URL.
2025-07-16 10:50:52,604 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': 'plMtEbGvs6hmNijfQfdQG3W', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'can you give me ledger report', 'id': None, 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d'}}
2025-07-16 10:50:52,604 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-07-16 10:50:52,604 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-07-16 10:50:52,604 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://cs.motilaloswaluat.com/gw/api/cbot/ledgerstatement with headers: {'sessionid': 'plMtEbGvs6hmNijfQfdQG3W', 'token': '9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientId': 'NAGSYA5', 'from_Date': '04/01/2024', 'to_Date': '03/31/2025', 'exchange_Seg': 'Combine', 'date_Type': 'Voucher', 'return_Type': 'Link', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-07-16 10:50:52,989 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 10:50:52,991 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 10:50:52,991 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 10:50:52,991 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 10:50:52,991 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 686
2025-07-16 10:50:52,991 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 10:50:59,741 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 10:50:59,741 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 10:50:59,741 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 10:50:59,745 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 10:50:59,747 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 44] --> Report Dynamic Router state has no Tool.
2025-07-16 10:50:59,749 mlscoringinference [INFO | leave_node.py : leave_node : 16] --> Executing leave_node function - popping dialog stack
2025-07-16 10:50:59,749 mlscoringinference [INFO | leave_node.py : leave_node : 21] --> Found tool call with id: tooluse_mmcbGrGGQSe_06hi7EYkHQ
2025-07-16 10:50:59,749 mlscoringinference [INFO | leave_node.py : leave_node : 36] --> Created tool message response for resuming dialog
2025-07-16 10:50:59,749 mlscoringinference [INFO | leave_node.py : leave_node : 40] --> Leaving node and returning to main assistant
2025-07-16 10:50:59,754 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 966
2025-07-16 10:50:59,754 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 10:51:02,706 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 10:51:02,706 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 10:51:02,706 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 10:51:02,706 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 18] --> Primary Router state has no Tool.
2025-07-16 10:51:02,711 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 138] --> Starting assistance check messages extraction...
2025-07-16 10:51:02,711 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 148] --> Found AIMessage without tool calls - proceeding with assistance guard check
2025-07-16 10:51:02,711 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 51] --> Starting intent guard check...
2025-07-16 10:51:02,711 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 53] --> Checking response intent...
2025-07-16 10:51:04,546 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 58] --> Intent guard check complete
2025-07-16 10:51:04,552 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 151] --> Assistance guard check result: {'intent_type': 'Apology', 'reason': "The response is an apology for not being able to answer the user's request about getting a ledger report due to a technical issue."}
2025-07-16 10:51:04,552 mlscoringinference [INFO | final_response_node.py : assisatnce_pass_signal : 128] --> Assistance guard failed due to intent type being 'Other' or empty. with reason: The response is an apology for not being able to answer the user's request about getting a ledger report due to a technical issue.
2025-07-16 10:51:04,552 mlscoringinference [INFO | final_response_node.py : assisatnce_pass_signal : 130] --> Assistance guard result: Fail
2025-07-16 10:51:04,552 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 153] --> Assistance guard check result: False
2025-07-16 10:51:04,552 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 10:51:04,552 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Thought: The ReportAgent was unable to fetch the r...
2025-07-16 10:51:04,552 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 10:51:04,552 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 155] --> Regex guard check result: True
2025-07-16 10:51:04,552 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 10:51:04,552 mlscoringinference [WARNING | api_guard.py : get_ban_words_guard : 79] --> Banned words detected: ['reportagent']
2025-07-16 10:51:04,552 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 157] --> Ban words guard check result: You are disclosing technical details about APIs & their parameter, this poses security risk.
2025-07-16 10:51:04,552 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 166] --> Assistance guard check failed with reason: I sincerely apologize for not able to fulfill your request.
2025-07-16 10:51:04,552 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 168] --> Appending failure message to messages history.
2025-07-16 10:51:04,552 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 10:51:04,552 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 10:51:04,552 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d
2025-07-16 10:51:04,564 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: plMtEbGvs6hmNijfQfdQG3W
2025-07-16 10:51:04,564 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 10:51:04,650 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d')
2025-07-16 10:51:04,650 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:51:04,650 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:51:04,652 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:51:04,652 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:51:04,652 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:51:04,802 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:51:04,802 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:51:04,818 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:51:04,818 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:51:04,818 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:51:04,818 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:51:04,818 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:51:04,834 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:51:04,834 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:51:04,834 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:51:04,834 mlscoringinference [ERROR | simple_flow_router.py : classify_id_type : 172] --> ID type classification failed: 'NoneType' object has no attribute 'split'
2025-07-16 10:51:04,834 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:51:04,834 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 10:51:04,834 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 10:51:04,834 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: Yes
2025-07-16 10:51:04,834 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: Yes
2025-07-16 10:51:04,834 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 10:51:04,834 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 10:52:24,847 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='give me my account ddtails', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d')
2025-07-16 10:52:24,848 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:52:24,848 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:52:24,848 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:52:24,848 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:52:24,848 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:52:24,970 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:52:24,973 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:52:25,031 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:52:25,031 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:52:25,031 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:52:25,039 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:52:25,042 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:52:25,042 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:52:25,042 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:52:25,048 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:52:25,048 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 10:52:25,048 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 10:52:25,048 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:52:25,054 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : req-96c3eef3-820e-4b7c-aa11-6f7ed08dff4d
2025-07-16 10:52:25,056 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-f5e79e9b-7ad7-4c1c-adb5-da5d303bd4bc
2025-07-16 10:52:25,056 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-f5e79e9b-7ad7-4c1c-adb5-da5d303bd4bc
2025-07-16 10:52:25,058 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'give me my account ddtails'
2025-07-16 10:52:25,064 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 1095
2025-07-16 10:52:25,075 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 10:52:27,395 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 10:52:27,395 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 10:52:27,397 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 10:52:27,397 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : AccountAgent.
2025-07-16 10:52:27,401 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 10:52:27,401 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 10:52:27,403 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for AccountAgent injected successfully
2025-07-16 10:52:27,407 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 10:52:27,409 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 1202
2025-07-16 10:52:27,409 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 10:52:31,450 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 10:52:31,456 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 10:52:31,456 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 10:52:31,456 mlscoringinference [INFO | dynamic_router.py : account_dynamic_router : 59] --> Account Dynamic Router function Activated.
2025-07-16 10:52:31,482 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-07-16 10:52:31,484 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\mofsl-wmchatbot-repo\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 10:52:31,488 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 70] --> System parameters mapper loaded from agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 10:52:31,491 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 80] --> System parameters mapper updated with base URL.
2025-07-16 10:52:31,491 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': 'plMtEbGvs6hmNijfQfdQG3W', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'give me my account ddtails', 'id': None, 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-f5e79e9b-7ad7-4c1c-adb5-da5d303bd4bc'}}
2025-07-16 10:52:31,491 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-07-16 10:52:31,491 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-07-16 10:52:31,493 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://cs.motilaloswaluat.com/gw/api/cbot/ClientDetails with headers: {'sessionid': 'plMtEbGvs6hmNijfQfdQG3W', 'token': '9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientId': 'NAGSYA5', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-07-16 10:52:32,669 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 10:52:32,670 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 10:52:32,670 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 10:52:32,670 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 10:52:32,670 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 1417
2025-07-16 10:52:32,670 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 10:52:58,587 mlscoringinference [INFO | main.py : communicate : 154] --> Snapshot Data in except part : 18
2025-07-16 10:52:58,587 mlscoringinference [INFO | main.py : communicate : 156] --> Last message in except state: content='Error: ConnectionError(MaxRetryError(\'HTTPConnectionPool(host=\\\'cs.motilaloswaluat.com\\\', port=80): Max retries exceeded with url: /gw/api/cbot/ClientDetails (Caused by NameResolutionError("<urllib3.connection.HTTPConnection object at 0x000001F9F07ADE50>: Failed to resolve \\\'cs.motilaloswaluat.com\\\' ([Errno 11001] getaddrinfo failed)"))\'))\n Please fix your mistakes.' name='request_post' id='5abb5922-5f7f-4859-adb8-407bd066b671' tool_call_id='tooluse_Q4NT6eZJTS67GMdZOMF7tA' status='error', type: <class 'langchain_core.messages.tool.ToolMessage'>
2025-07-16 10:52:58,587 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 55] --> Generating RemoveMessage actions.
2025-07-16 10:52:58,587 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 64] --> RemoveMessage generation completed.
2025-07-16 10:52:58,587 mlscoringinference [INFO | main.py : communicate : 166] --> Messages to remove: 0
2025-07-16 10:52:58,594 mlscoringinference [INFO | main.py : communicate : 172] --> Snapshot Data in recover part : 18
2025-07-16 10:52:58,601 mlscoringinference [INFO | main.py : communicate : 174] --> Last message in recover state: content='Error: ConnectionError(MaxRetryError(\'HTTPConnectionPool(host=\\\'cs.motilaloswaluat.com\\\', port=80): Max retries exceeded with url: /gw/api/cbot/ClientDetails (Caused by NameResolutionError("<urllib3.connection.HTTPConnection object at 0x000001F9F07ADE50>: Failed to resolve \\\'cs.motilaloswaluat.com\\\' ([Errno 11001] getaddrinfo failed)"))\'))\n Please fix your mistakes.' name='request_post' id='5abb5922-5f7f-4859-adb8-407bd066b671' tool_call_id='tooluse_Q4NT6eZJTS67GMdZOMF7tA' status='error', type: <class 'langchain_core.messages.tool.ToolMessage'>
2025-07-16 10:52:58,601 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 10:52:58,688 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='plMtEbGvs6hmNijfQfdQG3W' client_id='NAGSYA5' role='CLIENT' token='9c00bbb0-a6d9-437e-8ef3-9e819e7c95f8' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='')
2025-07-16 10:52:58,692 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 10:52:58,694 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 10:52:58,696 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 10:52:58,696 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 10:52:58,698 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 10:52:58,811 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 10:52:58,811 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 10:52:58,884 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 10:52:58,890 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 10:52:58,892 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 10:52:58,892 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 10:52:58,892 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 10:52:58,892 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 10:52:58,892 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 10:52:58,892 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 10:52:58,901 mlscoringinference [ERROR | simple_flow_router.py : classify_id_type : 172] --> ID type classification failed: 'NoneType' object has no attribute 'split'
2025-07-16 10:52:58,906 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 10:52:58,906 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 10:52:58,908 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 10:52:58,908 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: Yes
2025-07-16 10:52:58,908 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: plMtEbGvs6hmNijfQfdQG3W, found: Yes
2025-07-16 10:52:58,908 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 10:52:58,917 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 11:18:31,430 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 11:18:40,645 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 11:18:40,776 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:18:40,776 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:18:40,790 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:18:40,853 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 11:18:40,865 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 11:18:40,867 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 11:18:40,867 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 11:18:40,872 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 11:18:40,872 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 11:18:40,913 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 11:18:40,913 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:18:40,913 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:18:40,913 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:18:40,930 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:18:40,930 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:18:40,930 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:18:40,945 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:18:40,945 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:18:40,947 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:18:40,970 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:18:40,971 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:18:40,971 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:18:40,971 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:18:40,971 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 11:18:40,974 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 11:18:40,974 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 11:18:40,989 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:18:40,990 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 11:18:40,990 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 11:18:41,002 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 11:18:41,004 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 11:18:41,007 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 11:18:41,009 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:18:41,009 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 11:18:41,009 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 11:18:41,020 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 11:18:41,023 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:18:41,033 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 11:18:41,033 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 11:18:41,033 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 11:18:41,039 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:18:41,039 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 11:18:41,039 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 11:18:41,039 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 11:18:41,039 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 11:18:41,039 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 11:18:41,054 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 11:18:41,072 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 11:18:41,072 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 11:18:41,072 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 11:18:41,080 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:18:41,090 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 11:18:41,090 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 11:18:41,090 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 11:18:41,090 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 11:18:41,090 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 11:18:41,104 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:18:41,106 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:18:41,106 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:18:41,106 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:18:41,216 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:18:41,229 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:18:41,295 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 11:20:05,529 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-07-16 11:20:05,533 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:20:05,533 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:20:05,535 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:20:05,535 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:20:05,535 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:20:05,666 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:20:05,667 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:20:05,729 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:20:05,734 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:20:05,734 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:20:05,736 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:20:05,738 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:20:05,738 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:20:05,738 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:20:05,738 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:20:05,746 mlscoringinference [ERROR | simple_flow_router.py : classify_id_type : 172] --> ID type classification failed: 'NoneType' object has no attribute 'split'
2025-07-16 11:20:05,748 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:20:05,748 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 11:20:05,748 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 11:20:07,775 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: No
2025-07-16 11:20:07,775 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: No
2025-07-16 11:20:07,779 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 11:20:07,782 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 11:20:25,909 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='hi', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id=None)
2025-07-16 11:20:25,911 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:20:25,911 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:20:25,917 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:20:25,920 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:20:25,923 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:20:26,122 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:20:26,124 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:20:26,356 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:20:26,360 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:20:26,360 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:20:26,360 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:20:26,364 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:20:26,364 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:20:26,364 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:20:26,364 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:20:26,364 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 1
2025-07-16 11:20:26,364 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 143] --> Short input detected in agentic flow
2025-07-16 11:20:26,364 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 145] --> Invoking flow router runnable for short input in agentic flow
2025-07-16 11:20:29,370 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 147] --> Result from flow router: content=[{'type': 'text', 'text': 'Based on the input "hi", there is no clear match to any of the available id_types. This seems to be a general greeting rather than a request for a specific report or statement. Therefore, I will return:'}, {'type': 'tool_use', 'name': 'IDTypeClassifierTool', 'input': {'id_type': ['other']}, 'id': 'tooluse_CQ0QzbEoRrGb9i8nuqj7Ug'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': '2a16c2ae-48e6-43a3-ad72-f2d42a460a42', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 05:50:29 GMT', 'content-type': 'application/json', 'content-length': '509', 'connection': 'keep-alive', 'x-amzn-requestid': '2a16c2ae-48e6-43a3-ad72-f2d42a460a42'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [1743]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--eceb8a12-e821-4d44-a9d9-19ab6628d8a9-0' tool_calls=[{'name': 'IDTypeClassifierTool', 'args': {'id_type': ['other']}, 'id': 'tooluse_CQ0QzbEoRrGb9i8nuqj7Ug', 'type': 'tool_call'}] usage_metadata={'input_tokens': 985, 'output_tokens': 106, 'total_tokens': 1091, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}
2025-07-16 11:20:29,370 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 165] --> Classified as 'other' due to short input in agentic flow
2025-07-16 11:20:29,370 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:20:29,370 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : None
2025-07-16 11:20:29,375 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-4b9c39f1-8687-4068-a045-c401f407f9c1
2025-07-16 11:20:29,375 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-4b9c39f1-8687-4068-a045-c401f407f9c1
2025-07-16 11:20:29,377 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'hi'
2025-07-16 11:20:29,382 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 5
2025-07-16 11:20:29,415 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:20:30,705 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:20:30,707 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:20:30,709 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:20:30,709 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 18] --> Primary Router state has no Tool.
2025-07-16 11:20:30,709 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 138] --> Starting assistance check messages extraction...
2025-07-16 11:20:30,709 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 148] --> Found AIMessage without tool calls - proceeding with assistance guard check
2025-07-16 11:20:30,709 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 51] --> Starting intent guard check...
2025-07-16 11:20:30,719 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 53] --> Checking response intent...
2025-07-16 11:20:32,448 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 58] --> Intent guard check complete
2025-07-16 11:20:32,452 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 151] --> Assistance guard check result: {'intent_type': 'Greeting', 'reason': 'The response is just the greeting "Hello!" with no additional content.'}
2025-07-16 11:20:32,453 mlscoringinference [INFO | final_response_node.py : assisatnce_pass_signal : 130] --> Assistance guard result: Pass
2025-07-16 11:20:32,453 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 153] --> Assistance guard check result: True
2025-07-16 11:20:32,457 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:20:32,457 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Hello!...
2025-07-16 11:20:32,457 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:20:32,457 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 155] --> Regex guard check result: True
2025-07-16 11:20:32,457 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:20:32,457 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:20:32,459 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 157] --> Ban words guard check result: True
2025-07-16 11:20:32,459 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 159] --> Assistance guard check passed successfully.
2025-07-16 11:20:32,461 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:20:32,461 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:20:32,461 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-4b9c39f1-8687-4068-a045-c401f407f9c1
2025-07-16 11:20:32,461 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 6ci6cRhgNF1KNeB6AWFYJZn
2025-07-16 11:20:32,461 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:20:32,520 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-4b9c39f1-8687-4068-a045-c401f407f9c1')
2025-07-16 11:20:32,522 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:20:32,522 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:20:32,526 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:20:32,526 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:20:32,526 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:20:32,641 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:20:32,641 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:20:32,704 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:20:32,710 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:20:32,710 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:20:32,710 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:20:32,710 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:20:32,710 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:20:32,710 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:20:32,719 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:20:32,722 mlscoringinference [ERROR | simple_flow_router.py : classify_id_type : 172] --> ID type classification failed: 'NoneType' object has no attribute 'split'
2025-07-16 11:20:32,722 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:20:32,722 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 11:20:32,727 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 11:20:32,727 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: Yes
2025-07-16 11:20:32,727 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: Yes
2025-07-16 11:20:32,727 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 11:20:32,727 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 11:20:37,750 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='give me ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-4b9c39f1-8687-4068-a045-c401f407f9c1')
2025-07-16 11:20:37,752 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:20:37,752 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:20:37,756 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:20:37,758 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:20:37,758 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:20:37,877 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:20:37,879 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:20:37,940 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:20:37,940 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:20:37,949 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:20:37,949 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:20:37,952 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:20:37,952 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:20:37,952 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:20:37,957 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:20:37,957 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 4
2025-07-16 11:20:37,957 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:20:37,962 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:20:37,962 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : req-4b9c39f1-8687-4068-a045-c401f407f9c1
2025-07-16 11:20:37,965 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:20:37,965 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:20:37,967 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'give me ledger report'
2025-07-16 11:20:37,982 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 22
2025-07-16 11:20:37,982 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:20:39,918 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:20:39,918 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:20:39,918 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:20:39,922 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 11:20:39,928 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:20:39,931 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:20:39,931 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 11:20:39,933 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:20:39,933 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 126
2025-07-16 11:20:39,933 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:20:46,475 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:20:46,477 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:20:46,477 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:20:46,479 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:20:46,479 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 11:20:46,489 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:20:46,489 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need some additional details:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy format) \n- End date for the report (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- How would you like to receive the report (Link or Email)?\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_4hm2AyGCSkW6KXwLdliC_A', 'type': 'tool_call'}
2025-07-16 11:20:46,489 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:20:46,495 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:20:46,495 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need some addi...
2025-07-16 11:20:46,495 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:20:46,495 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:20:46,495 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:20:46,495 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:20:46,497 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:20:46,499 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:20:46,499 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 11:20:46,499 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:20:46,502 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 6ci6cRhgNF1KNeB6AWFYJZn
2025-07-16 11:20:46,502 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:20:46,552 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-70f8e79a-1464-451b-8440-aa51ba23ad40')
2025-07-16 11:20:46,552 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:20:46,554 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:20:46,556 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:20:46,556 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:20:46,562 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:20:46,695 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:20:46,699 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:20:46,765 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:20:46,765 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:20:46,765 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:20:46,765 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:20:46,765 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:20:46,765 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:20:46,774 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:20:46,778 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:20:46,782 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 11:20:46,783 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:20:46,783 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 11:20:46,783 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 11:20:46,783 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: Yes
2025-07-16 11:20:46,783 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: Yes
2025-07-16 11:20:46,790 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 11:20:46,795 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 11:21:07,848 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='for last year , combine , voucher , through link', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-70f8e79a-1464-451b-8440-aa51ba23ad40')
2025-07-16 11:21:07,851 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:21:07,853 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:21:07,855 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:21:07,856 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:21:07,857 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:21:07,981 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:21:07,982 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:21:08,049 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:21:08,049 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:21:08,056 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:21:08,056 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:21:08,056 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:21:08,056 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:21:08,056 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:21:08,065 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:21:08,068 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 11:21:08,068 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:21:08,068 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:21:08,072 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 11:21:08,072 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:21:08,072 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 11:21:08,083 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:21:08,083 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need some additional details:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy format) \n- End date for the report (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- How would you like to receive the report (Link or Email)?\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_4hm2AyGCSkW6KXwLdliC_A', 'type': 'tool_call'}
2025-07-16 11:21:08,088 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:21:08,089 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:21:08,089 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need some addi...
2025-07-16 11:21:08,089 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:21:08,089 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:21:08,089 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:21:08,089 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:21:08,089 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:21:08,089 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 27] --> User input received: for last year , combine , voucher , through link
2025-07-16 11:21:08,104 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:21:08,104 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:21:08,104 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:21:08,104 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:21:08,113 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 384
2025-07-16 11:21:08,116 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:21:13,623 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:21:13,625 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:21:13,625 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:21:13,625 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:21:13,625 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 11:21:13,637 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:21:13,637 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': 'Thank you for the additional details. I still need:\n\n- Client ID (if not NAGSYA5)\n- Start date for last financial year (mm/dd/yyyy format)\n- End date for last financial year (mm/dd/yyyy format)\n\nPlease provide this information so I can process your ledger report request for the last financial year.'}, 'id': 'tooluse_zs8SWvQiSFuv7NyVnK2_Kg', 'type': 'tool_call'}
2025-07-16 11:21:13,637 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:21:13,637 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:21:13,637 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Thank you for the additional details. I still need...
2025-07-16 11:21:13,637 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:21:13,637 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:21:13,637 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:21:13,637 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:21:13,637 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:21:13,644 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 11:21:13,644 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 11:21:13,644 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:21:13,644 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 6ci6cRhgNF1KNeB6AWFYJZn
2025-07-16 11:21:13,644 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:21:13,720 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-70f8e79a-1464-451b-8440-aa51ba23ad40')
2025-07-16 11:21:13,720 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:21:13,720 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:21:13,720 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:21:13,724 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:21:13,724 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:21:13,855 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:21:13,859 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:21:13,939 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:21:13,939 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:21:13,939 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:21:13,939 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:21:13,952 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:21:13,955 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:21:13,955 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:21:13,959 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:21:13,962 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 11:21:13,964 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:21:13,964 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 11:21:13,966 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 11:21:13,966 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: Yes
2025-07-16 11:21:13,969 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: Yes
2025-07-16 11:21:13,969 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 11:21:13,974 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 11:21:35,897 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='client id is NAGSYA5 , for last year', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-70f8e79a-1464-451b-8440-aa51ba23ad40')
2025-07-16 11:21:35,899 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:21:35,900 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:21:35,900 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:21:35,901 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:21:35,903 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:21:36,024 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:21:36,024 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:21:36,098 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:21:36,098 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:21:36,098 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:21:36,098 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:21:36,098 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:21:36,106 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:21:36,108 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:21:36,111 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:21:36,114 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 11:21:36,114 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:21:36,116 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:21:36,116 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 11:21:36,119 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:21:36,120 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 11:21:36,131 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:21:36,131 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': 'Thank you for the additional details. I still need:\n\n- Client ID (if not NAGSYA5)\n- Start date for last financial year (mm/dd/yyyy format)\n- End date for last financial year (mm/dd/yyyy format)\n\nPlease provide this information so I can process your ledger report request for the last financial year.'}, 'id': 'tooluse_zs8SWvQiSFuv7NyVnK2_Kg', 'type': 'tool_call'}
2025-07-16 11:21:36,131 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:21:36,131 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:21:36,131 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Thank you for the additional details. I still need...
2025-07-16 11:21:36,131 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:21:36,131 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:21:36,131 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:21:36,131 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:21:36,131 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:21:36,131 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 27] --> User input received: client id is NAGSYA5 , for last year
2025-07-16 11:21:36,149 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:21:36,149 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:21:36,156 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:21:36,158 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:21:36,158 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 578
2025-07-16 11:21:36,160 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:21:42,303 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:21:42,303 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:21:42,303 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:21:42,311 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:21:42,323 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-07-16 11:21:42,328 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 11:21:42,333 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 70] --> System parameters mapper loaded from agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 11:21:42,335 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 80] --> System parameters mapper updated with base URL.
2025-07-16 11:21:42,335 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': '6ci6cRhgNF1KNeB6AWFYJZn', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '13439184-57a4-4655-ac8b-4b8389c4aab2', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'give me ledger report', 'id': None, 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-70f8e79a-1464-451b-8440-aa51ba23ad40'}}
2025-07-16 11:21:42,335 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-07-16 11:21:42,335 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-07-16 11:21:42,337 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://cs.motilaloswaluat.com/gw/api/cbot/ledgerstatement with headers: {'sessionid': '6ci6cRhgNF1KNeB6AWFYJZn', 'token': '13439184-57a4-4655-ac8b-4b8389c4aab2', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientid': 'NAGSYA5', 'from_Date': '04/01/2024', 'to_Date': '03/31/2025', 'exchange_Seg': 'Combine', 'date_Type': 'Voucher', 'Return_Type': 'Link', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-07-16 11:21:43,337 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:21:43,337 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:21:43,337 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:21:43,337 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:21:43,337 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 808
2025-07-16 11:21:43,337 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:21:48,039 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:21:48,041 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:21:48,041 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:21:48,041 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:21:48,053 mlscoringinference [INFO | final_response_node.py : report_final_response_node : 296] --> Starting report response check...
2025-07-16 11:21:48,056 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:21:48,056 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Here is the download link for your ledger report f...
2025-07-16 11:21:48,059 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:21:48,059 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:21:48,061 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:21:48,061 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:21:48,061 mlscoringinference [INFO | final_response_node.py : process_final_response : 227] --> API tool call message found - proceeding with API grounding validation
2025-07-16 11:21:48,063 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 11:21:48,063 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 127] --> Validating API Response grounding ...
2025-07-16 11:21:49,783 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 133] --> API Response Grounding validation complete.
2025-07-16 11:21:49,783 mlscoringinference [INFO | final_response_node.py : process_final_response : 234] --> API tool call grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'issues': 'The response directly provides the requested download link for the ledger report, which is fully aligned with the retrieved knowledge chunk containing the same link.'}
2025-07-16 11:21:49,783 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 100] --> API response validation criteria: Query relevance: High, Chunk alignment: Aligned
2025-07-16 11:21:49,783 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 108] --> API response validation result: Pass
2025-07-16 11:21:49,783 mlscoringinference [INFO | final_response_node.py : process_final_response : 245] --> API grounding validation passed successfully
2025-07-16 11:21:49,783 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 11:21:49,799 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 11:21:49,799 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:21:49,804 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-70f8e79a-1464-451b-8440-aa51ba23ad40
2025-07-16 11:21:49,804 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 6ci6cRhgNF1KNeB6AWFYJZn
2025-07-16 11:21:49,804 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:21:49,844 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='6ci6cRhgNF1KNeB6AWFYJZn' client_id='NAGSYA5' role='CLIENT' token='13439184-57a4-4655-ac8b-4b8389c4aab2' interaction=InteractionV2(type='DETERMINISTIC_FLOW', attachement='', input=InputData(text=None, id='home', from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='req-70f8e79a-1464-451b-8440-aa51ba23ad40')
2025-07-16 11:21:49,846 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:21:49,847 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:21:49,849 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:21:49,849 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:21:49,851 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:21:49,991 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:21:50,003 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:21:50,087 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:21:50,092 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:21:50,094 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:21:50,094 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:21:50,094 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:21:50,098 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:21:50,099 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:21:50,099 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:21:50,099 mlscoringinference [ERROR | simple_flow_router.py : classify_id_type : 172] --> ID type classification failed: 'NoneType' object has no attribute 'split'
2025-07-16 11:21:50,099 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:21:50,099 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 88] --> Handling deterministic flow with input: None
2025-07-16 11:21:50,099 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 97] --> button based flow started ..
2025-07-16 11:21:50,099 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: Yes
2025-07-16 11:21:50,099 mlscoringinference [INFO | session_store.py : load : 57] --> Loading session data for ID: 6ci6cRhgNF1KNeB6AWFYJZn, found: Yes
2025-07-16 11:21:50,115 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 99] --> button based flow completed successfully
2025-07-16 11:21:50,117 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 103] --> Handled via deterministic flow.
2025-07-16 11:22:40,031 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='b309176b-f412-4bd3-a798-8aa1924f46b7' client_id='NAGSYA5' role='CLIENT' token='1b80f258-d3f2-4355-965d-5aacaca78593' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='give me ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='1e642dea-7599-421e-abbe-f0a96034437d')
2025-07-16 11:22:40,031 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:22:40,031 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:22:40,031 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:22:40,035 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:22:40,035 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:22:40,132 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:22:40,132 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:22:40,193 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:22:40,200 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:22:40,201 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:22:40,201 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:22:40,201 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:22:40,201 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:22:40,201 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:22:40,201 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:22:40,201 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 4
2025-07-16 11:22:40,201 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:22:40,210 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:22:40,210 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 1e642dea-7599-421e-abbe-f0a96034437d
2025-07-16 11:22:40,211 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-a6de82e8-1212-4877-b975-a1a790b548de
2025-07-16 11:22:40,211 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-a6de82e8-1212-4877-b975-a1a790b548de
2025-07-16 11:22:40,212 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'give me ledger report'
2025-07-16 11:22:40,221 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 10
2025-07-16 11:22:40,221 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:22:42,254 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:22:42,254 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:22:42,254 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:22:42,254 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 11:22:42,259 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:22:42,267 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:22:42,267 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 11:22:42,267 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:22:42,272 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 114
2025-07-16 11:22:42,273 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:22:48,155 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:22:48,174 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:22:48,174 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:22:48,177 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:22:48,180 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 11:22:48,188 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:22:48,188 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Client ID (if not NAGSYA5)\n- Start date (mm/dd/yyyy format) \n- End date (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery (Link or Email)\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_jHI5jCLZRdiQI2n17d7YEA', 'type': 'tool_call'}
2025-07-16 11:22:48,188 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:22:48,188 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:22:48,188 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 11:22:48,188 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:22:48,188 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:22:48,188 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:22:48,188 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:22:48,188 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:22:48,188 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:22:48,188 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 11:22:48,188 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-a6de82e8-1212-4877-b975-a1a790b548de
2025-07-16 11:22:48,188 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: b309176b-f412-4bd3-a798-8aa1924f46b7
2025-07-16 11:22:48,188 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:23:14,356 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='b309176b-f412-4bd3-a798-8aa1924f46b7' client_id='NAGSYA5' role='CLIENT' token='1b80f258-d3f2-4355-965d-5aacaca78593' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Generate ledger report for Client ID NAGSYA5 for the last year, exchange segment Combine, date type Voucher, and deliver through link.', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='9bc0e8b5-958a-47a9-8a44-a4617a355845')
2025-07-16 11:23:14,358 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:23:14,359 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:23:14,359 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:23:14,361 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:23:14,362 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:23:14,612 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:23:14,612 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:23:14,673 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:23:14,676 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:23:14,676 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:23:14,676 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:23:14,676 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:23:14,681 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:23:14,682 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:23:14,684 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:23:14,684 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 11:23:14,684 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:23:14,684 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 9bc0e8b5-958a-47a9-8a44-a4617a355845
2025-07-16 11:23:14,692 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 11:23:14,692 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: 9bc0e8b5-958a-47a9-8a44-a4617a355845
2025-07-16 11:23:14,692 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 11:23:14,699 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:23:14,699 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Client ID (if not NAGSYA5)\n- Start date (mm/dd/yyyy format) \n- End date (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery (Link or Email)\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_jHI5jCLZRdiQI2n17d7YEA', 'type': 'tool_call'}
2025-07-16 11:23:14,701 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:23:14,701 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:23:14,701 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 11:23:14,703 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:23:14,704 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:23:14,704 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:23:14,704 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:23:14,704 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:23:14,704 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 27] --> User input received: Generate ledger report for Client ID NAGSYA5 for the last year, exchange segment Combine, date type Voucher, and deliver through link.
2025-07-16 11:23:14,717 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:23:14,721 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:23:14,723 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:23:14,723 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:23:14,723 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 338
2025-07-16 11:23:14,723 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:23:21,059 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:23:21,059 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:23:21,059 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:23:21,061 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:23:21,073 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-07-16 11:23:21,073 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 11:23:21,079 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 70] --> System parameters mapper loaded from agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 11:23:21,079 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 80] --> System parameters mapper updated with base URL.
2025-07-16 11:23:21,081 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': 'b309176b-f412-4bd3-a798-8aa1924f46b7', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '1b80f258-d3f2-4355-965d-5aacaca78593', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'give me ledger report', 'id': None, 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-a6de82e8-1212-4877-b975-a1a790b548de'}}
2025-07-16 11:23:21,082 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-07-16 11:23:21,083 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-07-16 11:23:21,083 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://cs.motilaloswaluat.com/gw/api/cbot/ledgerstatement with headers: {'sessionid': 'b309176b-f412-4bd3-a798-8aa1924f46b7', 'token': '1b80f258-d3f2-4355-965d-5aacaca78593', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientId': 'NAGSYA5', 'from_Date': '04/01/2024', 'to_Date': '03/31/2025', 'exchange_Seg': 'Combine', 'date_Type': 'Voucher', 'return_Type': 'Link', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-07-16 11:23:22,085 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:23:22,092 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:23:22,094 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:23:22,094 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:23:22,096 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 596
2025-07-16 11:23:22,096 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:23:26,908 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:23:26,908 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:23:26,908 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:23:26,915 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:23:26,922 mlscoringinference [INFO | final_response_node.py : report_final_response_node : 296] --> Starting report response check...
2025-07-16 11:23:26,922 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:23:26,922 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Here is the download link for your ledger report f...
2025-07-16 11:23:26,925 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:23:26,925 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:23:26,925 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:23:26,925 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:23:26,925 mlscoringinference [INFO | final_response_node.py : process_final_response : 227] --> API tool call message found - proceeding with API grounding validation
2025-07-16 11:23:26,925 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 11:23:26,925 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 127] --> Validating API Response grounding ...
2025-07-16 11:23:28,736 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 133] --> API Response Grounding validation complete.
2025-07-16 11:23:28,738 mlscoringinference [INFO | final_response_node.py : process_final_response : 234] --> API tool call grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'issues': 'The response directly provides the requested download link for the ledger report, which is fully aligned with the retrieved data chunk containing the same link.'}
2025-07-16 11:23:28,738 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 100] --> API response validation criteria: Query relevance: High, Chunk alignment: Aligned
2025-07-16 11:23:28,738 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 108] --> API response validation result: Pass
2025-07-16 11:23:28,740 mlscoringinference [INFO | final_response_node.py : process_final_response : 245] --> API grounding validation passed successfully
2025-07-16 11:23:28,740 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 11:23:28,745 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 11:23:28,745 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:23:28,745 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-a6de82e8-1212-4877-b975-a1a790b548de
2025-07-16 11:23:28,756 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: b309176b-f412-4bd3-a798-8aa1924f46b7
2025-07-16 11:23:28,758 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:24:13,367 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='b309176b-f412-4bd3-a798-8aa1924f46b7' client_id='NAGSYA5' role='CLIENT' token='1b80f258-d3f2-4355-965d-5aacaca78593' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='show my account details', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='a417426f-00ac-46ea-9c8a-bf072e81104f')
2025-07-16 11:24:13,368 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:24:13,369 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:24:13,371 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:24:13,375 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:24:13,376 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:24:13,500 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:24:13,504 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:24:13,567 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:24:13,571 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:24:13,572 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:24:13,573 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:24:13,575 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:24:13,575 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:24:13,576 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:24:13,579 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:24:13,582 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 4
2025-07-16 11:24:13,583 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:24:13,583 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:24:13,584 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : a417426f-00ac-46ea-9c8a-bf072e81104f
2025-07-16 11:24:13,586 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-ceecf70a-3f70-462d-8b40-c751def0e06d
2025-07-16 11:24:13,586 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-ceecf70a-3f70-462d-8b40-c751def0e06d
2025-07-16 11:24:13,589 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'show my account details'
2025-07-16 11:24:13,603 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 756
2025-07-16 11:24:13,604 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:24:15,402 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:24:15,403 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:24:15,405 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:24:15,405 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : AccountAgent.
2025-07-16 11:24:15,408 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:24:15,409 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:24:15,409 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for AccountAgent injected successfully
2025-07-16 11:24:15,410 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:24:15,410 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 862
2025-07-16 11:24:15,412 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:24:18,909 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:24:18,913 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:24:18,914 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:24:18,918 mlscoringinference [INFO | dynamic_router.py : account_dynamic_router : 59] --> Account Dynamic Router function Activated.
2025-07-16 11:24:18,928 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-07-16 11:24:18,929 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 11:24:18,933 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 70] --> System parameters mapper loaded from agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 11:24:18,934 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 80] --> System parameters mapper updated with base URL.
2025-07-16 11:24:18,934 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': 'b309176b-f412-4bd3-a798-8aa1924f46b7', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '1b80f258-d3f2-4355-965d-5aacaca78593', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'show my account details', 'id': None, 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-ceecf70a-3f70-462d-8b40-c751def0e06d'}}
2025-07-16 11:24:18,935 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-07-16 11:24:18,935 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-07-16 11:24:18,936 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://cs.motilaloswaluat.com/gw/api/cbot/ClientDetails with headers: {'sessionid': 'b309176b-f412-4bd3-a798-8aa1924f46b7', 'token': '1b80f258-d3f2-4355-965d-5aacaca78593', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientId': 'NAGSYA5', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-07-16 11:24:19,393 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:24:19,393 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:24:19,395 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:24:19,396 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:24:19,397 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 1005
2025-07-16 11:24:19,398 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:24:24,110 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:24:24,110 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:24:24,110 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:24:24,113 mlscoringinference [INFO | dynamic_router.py : account_dynamic_router : 59] --> Account Dynamic Router function Activated.
2025-07-16 11:24:24,113 mlscoringinference [INFO | dynamic_router.py : account_dynamic_router : 73] --> Account Dynamic Router state has AskBackToUser Tool.
2025-07-16 11:24:24,118 mlscoringinference [INFO | human_in_loop_node.py : account_human_node : 37] --> Account Human Node Activated.
2025-07-16 11:24:24,122 mlscoringinference [INFO | human_in_loop_node.py : account_human_node : 44] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': "**I'm unable to retrieve your account details at the moment due to an invalid session.** \n\nTo view your account information, I'll need you to re-authenticate your session or provide a valid session token. Once I have a valid session, I can securely access and display your account details.\n\nPlease let me know if you can re-authenticate or provide a new session token."}, 'id': 'tooluse_kXB7ItigT0ScTk2pnaA_zQ', 'type': 'tool_call'}
2025-07-16 11:24:24,124 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:24:24,124 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:24:24,125 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **I'm unable to retrieve your account details at t...
2025-07-16 11:24:24,125 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:24:24,126 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:24:24,126 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:24:24,126 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:24:24,126 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:24:24,130 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:24:24,134 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 11:24:24,134 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-ceecf70a-3f70-462d-8b40-c751def0e06d
2025-07-16 11:24:24,134 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: b309176b-f412-4bd3-a798-8aa1924f46b7
2025-07-16 11:24:24,134 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:24:24,639 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='b309176b-f412-4bd3-a798-8aa1924f46b7' client_id='NAGSYA5' role='CLIENT' token='1b80f258-d3f2-4355-965d-5aacaca78593' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='show my account details', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='668fb77e-b42c-48ac-9ea8-33cc5f438342')
2025-07-16 11:24:24,640 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:24:24,642 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:24:24,644 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:24:24,645 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:24:24,646 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:24:24,741 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:24:24,744 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:24:24,806 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:24:24,808 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:24:24,808 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:24:24,810 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:24:24,813 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:24:24,813 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:24:24,814 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:24:24,817 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:24:24,821 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 11:24:24,822 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:24:24,822 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 668fb77e-b42c-48ac-9ea8-33cc5f438342
2025-07-16 11:24:24,824 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 11:24:24,825 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: 668fb77e-b42c-48ac-9ea8-33cc5f438342
2025-07-16 11:24:24,826 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 11:24:24,834 mlscoringinference [INFO | human_in_loop_node.py : account_human_node : 37] --> Account Human Node Activated.
2025-07-16 11:24:24,835 mlscoringinference [INFO | human_in_loop_node.py : account_human_node : 44] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': "**I'm unable to retrieve your account details at the moment due to an invalid session.** \n\nTo view your account information, I'll need you to re-authenticate your session or provide a valid session token. Once I have a valid session, I can securely access and display your account details.\n\nPlease let me know if you can re-authenticate or provide a new session token."}, 'id': 'tooluse_kXB7ItigT0ScTk2pnaA_zQ', 'type': 'tool_call'}
2025-07-16 11:24:24,835 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:24:24,836 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:24:24,836 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **I'm unable to retrieve your account details at t...
2025-07-16 11:24:24,837 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:24:24,837 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:24:24,839 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:24:24,839 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:24:24,840 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:24:24,841 mlscoringinference [INFO | human_in_loop_node.py : account_human_node : 49] --> User input received: show my account details
2025-07-16 11:24:24,850 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:24:24,851 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:24:24,852 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:24:24,852 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:24:24,856 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 1216
2025-07-16 11:24:24,857 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:24:30,845 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:24:30,845 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:24:30,846 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:24:30,849 mlscoringinference [INFO | dynamic_router.py : account_dynamic_router : 59] --> Account Dynamic Router function Activated.
2025-07-16 11:24:30,850 mlscoringinference [INFO | dynamic_router.py : account_dynamic_router : 69] --> Account Dynamic Router state has no Tool.
2025-07-16 11:24:30,854 mlscoringinference [INFO | leave_node.py : leave_node : 16] --> Executing leave_node function - popping dialog stack
2025-07-16 11:24:30,855 mlscoringinference [INFO | leave_node.py : leave_node : 21] --> Found tool call with id: tooluse_hj1JKcINS9KOV7GTxSArrg
2025-07-16 11:24:30,856 mlscoringinference [INFO | leave_node.py : leave_node : 36] --> Created tool message response for resuming dialog
2025-07-16 11:24:30,856 mlscoringinference [INFO | leave_node.py : leave_node : 40] --> Leaving node and returning to main assistant
2025-07-16 11:24:30,859 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 1579
2025-07-16 11:24:30,866 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:24:38,393 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:24:38,393 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:24:38,395 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:24:38,398 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 27] --> Detected Fake Tool call, routing to fake_tool_node.
2025-07-16 11:24:38,401 mlscoringinference [INFO | tool_node.py : fake_tool_node : 35] --> Executing fake_tool_node function - simulating tool call
2025-07-16 11:24:38,402 mlscoringinference [INFO | tool_node.py : fake_tool_node : 43] --> Found fake tool call with id: tooluse_u56iJWnlRMWb9lJSaaU_9g
2025-07-16 11:24:38,405 mlscoringinference [INFO | tool_node.py : fake_tool_node : 53] --> Fake tool node executed, returning simulated messages
2025-07-16 11:24:38,408 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 2077
2025-07-16 11:24:38,410 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:24:42,831 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:24:42,831 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:24:42,834 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:24:42,835 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : InformationCentreAgent.
2025-07-16 11:24:42,837 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:24:42,840 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:24:42,840 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for InformationCentreAgent injected successfully
2025-07-16 11:24:42,840 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 2363
2025-07-16 11:24:42,841 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:24:46,079 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:24:46,080 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:24:46,080 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:24:46,083 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:24:46,937 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 136] --> FAQ retrieval tool initialized with AWS Knowledge Base
2025-07-16 11:24:46,939 mlscoringinference [DEBUG | react_tool.py : faq_knowledge_base : 138] --> Retrieving FAQ context for question: How to access account details on Motilal Oswal platform?
2025-07-16 11:24:48,415 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 145] --> Retrieved 2 relevant FAQ documents
2025-07-16 11:24:48,426 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:24:48,426 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:24:48,431 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:24:48,433 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 2624
2025-07-16 11:24:48,435 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:24:55,500 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:24:55,500 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:24:55,500 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:24:55,504 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:24:55,508 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 334] --> Starting FAQ grounding messages extraction...
2025-07-16 11:24:55,510 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:24:55,510 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: To view your account details on the Motilal Oswal ...
2025-07-16 11:24:55,511 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:24:55,511 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:24:55,511 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:24:55,511 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:24:55,515 mlscoringinference [INFO | final_response_node.py : process_final_response : 249] --> FAQ adjacent message is from the FAQ knowledge base.
2025-07-16 11:24:55,517 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 11:24:55,518 mlscoringinference [INFO | final_response_node.py : process_final_response : 254] --> Proceeding with contextual grounding validation
2025-07-16 11:24:55,518 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 70] --> Validating grounding for chatbot response...
2025-07-16 11:24:58,596 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 78] --> Grounding validation complete
2025-07-16 11:24:58,596 mlscoringinference [INFO | final_response_node.py : process_final_response : 263] --> Grounding validation result: {'query_response_relevance': 'Moderate', 'response_chunk_alignment': 'Partially Aligned', 'dialogue_continuity': 'Coherent', 'issues': 'The response provides instructions on how to login and view account details, which is relevant to the query. However, it goes into more detail than what is directly asked for in the query. The response is only partially aligned with the provided context chunk, which only covers the login process briefly. Overall, the response is coherent as a standalone message.'}
2025-07-16 11:24:58,596 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 75] --> Grounding validation criteria: Query relevance: Moderate, Chunk alignment: Partially Aligned, Dialogue continuity: Coherent
2025-07-16 11:24:58,597 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 84] --> Grounding validation result: Fail
2025-07-16 11:24:58,597 mlscoringinference [INFO | final_response_node.py : process_final_response : 267] --> Grounding validation failed with issues: The response provides instructions on how to login and view account details, which is relevant to the query. However, it goes into more detail than what is directly asked for in the query. The response is only partially aligned with the provided context chunk, which only covers the login process briefly. Overall, the response is coherent as a standalone message.
2025-07-16 11:24:58,603 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:24:58,610 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:24:58,612 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:24:58,615 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 3114
2025-07-16 11:24:58,617 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:25:03,745 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:25:03,746 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:25:03,746 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:25:03,750 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:25:03,755 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 334] --> Starting FAQ grounding messages extraction...
2025-07-16 11:25:03,764 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:25:03,765 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: To view your account details on the Motilal Oswal ...
2025-07-16 11:25:03,766 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:25:03,767 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:25:03,768 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:25:03,770 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:25:03,771 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 11:25:03,784 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 11:25:03,787 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:25:03,789 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-ceecf70a-3f70-462d-8b40-c751def0e06d
2025-07-16 11:25:03,789 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: b309176b-f412-4bd3-a798-8aa1924f46b7
2025-07-16 11:25:03,789 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:25:06,453 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='b309176b-f412-4bd3-a798-8aa1924f46b7' client_id='NAGSYA5' role='CLIENT' token='1b80f258-d3f2-4355-965d-5aacaca78593' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='give me ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='f6c31f7c-7193-488b-af81-d852f44f3a33')
2025-07-16 11:25:06,455 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:25:06,455 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:25:06,456 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:25:06,458 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:25:06,459 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:25:06,591 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:25:06,593 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:25:06,677 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:25:06,680 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:25:06,681 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:25:06,682 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:25:06,685 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:25:06,685 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:25:06,687 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:25:06,690 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:25:06,694 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 4
2025-07-16 11:25:06,695 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:25:06,696 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:25:06,697 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : f6c31f7c-7193-488b-af81-d852f44f3a33
2025-07-16 11:25:06,700 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-49756637-0ce1-4e76-8f9b-e0b68f959c82
2025-07-16 11:25:06,700 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-49756637-0ce1-4e76-8f9b-e0b68f959c82
2025-07-16 11:25:06,703 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'give me ledger report'
2025-07-16 11:25:06,720 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 3425
2025-07-16 11:25:06,723 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:25:09,435 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:25:09,436 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:25:09,440 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:25:09,440 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 11:25:09,446 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:25:09,453 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:25:09,454 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 11:25:09,457 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:25:09,460 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 3529
2025-07-16 11:25:09,462 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:25:17,864 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:25:17,865 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:25:17,865 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:25:17,868 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:25:17,874 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 11:25:17,880 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:25:17,882 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need the following information:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy)\n- End date for the report (mm/dd/yyyy) \n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery method (Link or Email)\n\nPlease provide the missing details so I can process your ledger report request.'}, 'id': 'tooluse_2pPjPBKmRJ63uqW4AMI5xw', 'type': 'tool_call'}
2025-07-16 11:25:17,882 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:25:17,882 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:25:17,883 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need the follo...
2025-07-16 11:25:17,883 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:25:17,883 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:25:17,884 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:25:17,884 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:25:17,885 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:25:17,889 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:25:17,893 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 11:25:17,895 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-49756637-0ce1-4e76-8f9b-e0b68f959c82
2025-07-16 11:25:17,895 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: b309176b-f412-4bd3-a798-8aa1924f46b7
2025-07-16 11:25:17,895 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:25:39,834 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='b309176b-f412-4bd3-a798-8aa1924f46b7' client_id='NAGSYA5' role='CLIENT' token='1b80f258-d3f2-4355-965d-5aacaca78593' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Generate ledger report for Client ID NAGSYA5 for the last year, exchange segment Combine, date type Voucher, and deliver through link.', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='a655b772-49a9-4752-852b-93c3b034970f')
2025-07-16 11:25:39,836 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:25:39,836 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:25:39,838 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:25:39,840 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:25:39,841 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:25:39,946 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:25:39,949 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:25:40,010 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:25:40,013 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:25:40,013 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:25:40,014 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:25:40,016 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:25:40,016 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:25:40,016 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:25:40,019 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:25:40,022 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 11:25:40,024 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:25:40,024 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : a655b772-49a9-4752-852b-93c3b034970f
2025-07-16 11:25:40,028 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 11:25:40,029 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: a655b772-49a9-4752-852b-93c3b034970f
2025-07-16 11:25:40,030 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 11:25:40,042 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:25:40,043 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need the following information:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy)\n- End date for the report (mm/dd/yyyy) \n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery method (Link or Email)\n\nPlease provide the missing details so I can process your ledger report request.'}, 'id': 'tooluse_2pPjPBKmRJ63uqW4AMI5xw', 'type': 'tool_call'}
2025-07-16 11:25:40,044 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:25:40,044 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:25:40,045 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need the follo...
2025-07-16 11:25:40,045 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:25:40,045 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:25:40,045 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:25:40,046 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:25:40,048 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:25:40,048 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 27] --> User input received: Generate ledger report for Client ID NAGSYA5 for the last year, exchange segment Combine, date type Voucher, and deliver through link.
2025-07-16 11:25:40,061 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:25:40,062 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:25:40,062 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:25:40,063 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:25:40,064 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 3780
2025-07-16 11:25:40,069 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:25:47,446 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:25:47,451 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:25:47,454 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:25:47,461 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:25:47,648 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-07-16 11:25:47,650 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 11:25:47,654 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 70] --> System parameters mapper loaded from agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 11:25:47,654 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 80] --> System parameters mapper updated with base URL.
2025-07-16 11:25:47,655 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': 'b309176b-f412-4bd3-a798-8aa1924f46b7', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': '1b80f258-d3f2-4355-965d-5aacaca78593', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'give me ledger report', 'id': None, 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-49756637-0ce1-4e76-8f9b-e0b68f959c82'}}
2025-07-16 11:25:47,656 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-07-16 11:25:47,656 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-07-16 11:25:47,657 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://cs.motilaloswaluat.com/gw/api/cbot/ledgerstatement with headers: {'sessionid': 'b309176b-f412-4bd3-a798-8aa1924f46b7', 'token': '1b80f258-d3f2-4355-965d-5aacaca78593', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientId': 'NAGSYA5', 'from_Date': '04/01/2024', 'to_Date': '03/31/2025', 'exchange_Seg': 'Combine', 'date_Type': 'Voucher', 'return_Type': 'Link', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-07-16 11:25:48,493 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:25:48,500 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:25:48,502 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:25:48,504 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:25:48,505 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 4033
2025-07-16 11:25:48,506 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:25:54,996 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:25:55,002 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:25:55,002 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:25:55,006 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:25:55,012 mlscoringinference [INFO | final_response_node.py : report_final_response_node : 296] --> Starting report response check...
2025-07-16 11:25:55,014 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:25:55,014 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Here is the download link for your ledger report f...
2025-07-16 11:25:55,014 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:25:55,014 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:25:55,016 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:25:55,016 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:25:55,016 mlscoringinference [INFO | final_response_node.py : process_final_response : 227] --> API tool call message found - proceeding with API grounding validation
2025-07-16 11:25:55,016 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 11:25:55,016 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 127] --> Validating API Response grounding ...
2025-07-16 11:25:56,778 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 133] --> API Response Grounding validation complete.
2025-07-16 11:25:56,778 mlscoringinference [INFO | final_response_node.py : process_final_response : 234] --> API tool call grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'issues': 'The response accurately reflects the retrieved knowledge chunk by providing the same download link for the ledger report. The response is highly relevant and well-grounded in the retrieved context.'}
2025-07-16 11:25:56,778 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 100] --> API response validation criteria: Query relevance: High, Chunk alignment: Aligned
2025-07-16 11:25:56,779 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 108] --> API response validation result: Pass
2025-07-16 11:25:56,782 mlscoringinference [INFO | final_response_node.py : process_final_response : 245] --> API grounding validation passed successfully
2025-07-16 11:25:56,783 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 11:25:56,793 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 11:25:56,797 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:25:56,797 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-49756637-0ce1-4e76-8f9b-e0b68f959c82
2025-07-16 11:25:56,797 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: b309176b-f412-4bd3-a798-8aa1924f46b7
2025-07-16 11:25:56,797 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:27:15,817 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 11:27:23,854 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 11:27:23,991 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:27:23,991 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:27:24,000 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:27:24,076 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 11:27:24,076 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 11:27:24,076 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 11:27:24,076 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 11:27:24,083 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 11:27:24,084 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 11:27:24,118 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 11:27:24,131 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:27:24,131 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:27:24,134 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:27:24,144 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:27:24,144 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:27:24,144 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:27:24,155 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:27:24,155 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:27:24,155 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:27:24,194 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:27:24,194 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:27:24,194 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:27:24,196 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:27:24,196 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 11:27:24,200 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 11:27:24,200 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 11:27:24,206 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:27:24,214 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 11:27:24,214 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 11:27:24,214 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 11:27:24,228 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 11:27:24,229 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 11:27:24,230 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:27:24,234 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 11:27:24,234 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 11:27:24,234 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 11:27:24,234 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:27:24,246 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 11:27:24,246 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 11:27:24,246 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 11:27:24,254 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:27:24,263 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 11:27:24,265 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 11:27:24,265 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 11:27:24,267 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 11:27:24,267 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 11:27:24,267 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 11:27:24,286 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 11:27:24,286 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 11:27:24,286 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 11:27:24,293 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 11:27:24,294 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 11:27:24,304 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 11:27:24,308 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 11:27:24,308 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 11:27:24,308 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 11:27:24,314 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:27:24,316 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:27:24,316 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:27:24,316 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:27:24,436 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:27:24,436 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:27:24,507 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 11:49:16,101 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='953ed694-abd4-41ef-89b4-18fb24258594' client_id='NAGSYA5' role='CLIENT' token='136ce6ec-a775-47e8-b0d6-f640498cbc30' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text="Please provide the ledger statement for the user's account.", id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='ac59da7c-f636-4dd3-b269-ae87a250b98a')
2025-07-16 11:49:16,117 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:49:16,117 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:49:16,131 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:49:16,132 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:49:16,132 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:49:16,291 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:49:16,294 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:49:16,355 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:49:16,371 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:49:16,371 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:49:16,371 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:49:16,381 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:49:16,383 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:49:16,389 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:49:16,395 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:49:16,402 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 9
2025-07-16 11:49:16,402 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:49:16,402 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:49:16,402 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : ac59da7c-f636-4dd3-b269-ae87a250b98a
2025-07-16 11:49:16,410 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-e805ca86-8d40-49ea-9e15-5d848d1db04e
2025-07-16 11:49:16,410 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-e805ca86-8d40-49ea-9e15-5d848d1db04e
2025-07-16 11:49:16,421 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'Please provide the ledger statement for the user's account.'
2025-07-16 11:49:16,453 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 19
2025-07-16 11:49:16,528 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:49:20,310 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:49:20,319 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:49:20,325 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:49:20,325 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 11:49:20,331 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:49:20,331 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:49:20,331 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 11:49:20,331 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:49:20,331 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 125
2025-07-16 11:49:20,331 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:49:27,647 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:49:27,647 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:49:27,647 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:49:27,651 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:49:27,651 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 11:49:27,654 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:49:27,659 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger statement, I need a few more details:**\n\n- Start date for the report (mm/dd/yyyy format)\n- End date for the report (mm/dd/yyyy format) \n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- How would you like to receive the report (Download Link or Email)?'}, 'id': 'tooluse_laWbJ2qcTeqPMexmwF3Piw', 'type': 'tool_call'}
2025-07-16 11:49:27,659 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:49:27,659 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:49:27,665 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger statement, I need a few ...
2025-07-16 11:49:27,665 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:49:27,665 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:49:27,665 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:49:27,665 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:49:27,665 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:49:27,673 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:49:27,673 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 11:49:27,673 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-e805ca86-8d40-49ea-9e15-5d848d1db04e
2025-07-16 11:49:27,673 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 953ed694-abd4-41ef-89b4-18fb24258594
2025-07-16 11:49:27,673 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:56:06,677 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='d68d1c7d-6c69-4aa8-9a3d-f694f26b97c6' client_id='NAGSYA5' role='CLIENT' token='d5ecc441-e1c6-4738-b38b-3bda95ee4a07' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Give me the ledger report.', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='c9db617c-c00d-4983-a211-54fd4a946eeb')
2025-07-16 11:56:06,678 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:56:06,678 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:56:06,680 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:56:06,681 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:56:06,681 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:56:06,988 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:56:06,989 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:56:07,019 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:56:07,021 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:56:07,021 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:56:07,022 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:56:07,022 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:56:07,023 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:56:07,024 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:56:07,025 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:56:07,026 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:56:07,026 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:56:07,026 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:56:07,026 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : c9db617c-c00d-4983-a211-54fd4a946eeb
2025-07-16 11:56:07,027 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-7ad6fc73-770a-495a-bfe7-9ae81c2d6fd1
2025-07-16 11:56:07,027 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-7ad6fc73-770a-495a-bfe7-9ae81c2d6fd1
2025-07-16 11:56:07,027 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'Give me the ledger report.'
2025-07-16 11:56:07,031 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 11
2025-07-16 11:56:07,032 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:56:09,033 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:56:09,035 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:56:09,037 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:56:09,038 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 11:56:09,040 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 11:56:09,041 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:56:09,041 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 11:56:09,041 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 11:56:09,042 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 117
2025-07-16 11:56:09,042 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 11:56:15,392 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 11:56:15,394 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 11:56:15,395 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 11:56:15,397 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 11:56:15,398 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 11:56:15,401 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 11:56:15,402 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Start date (mm/dd/yyyy format)\n- End date (mm/dd/yyyy format) \n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery method (Link or Email)\n\nPlease provide the missing information.'}, 'id': 'tooluse_WyFebjHwTXKgpMriX3OziQ', 'type': 'tool_call'}
2025-07-16 11:56:15,402 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 11:56:15,402 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:56:15,404 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 11:56:15,404 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:56:15,404 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:56:15,404 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:56:15,404 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 11:56:15,405 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 11:56:15,406 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:56:15,408 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 11:56:15,408 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-7ad6fc73-770a-495a-bfe7-9ae81c2d6fd1
2025-07-16 11:56:15,409 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: d68d1c7d-6c69-4aa8-9a3d-f694f26b97c6
2025-07-16 11:56:15,409 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:57:53,759 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='0dd3903b-49cf-4eb5-ab2e-80df52a3b7ec')
2025-07-16 11:57:53,759 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:57:53,759 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:57:53,759 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:57:53,759 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:57:53,759 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:57:53,808 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:57:53,822 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:57:53,846 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:57:53,846 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:57:53,846 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:57:53,846 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:57:53,846 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:57:53,846 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:57:53,846 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:57:53,846 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:57:53,846 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:57:53,846 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:57:53,846 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:57:53,846 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 0dd3903b-49cf-4eb5-ab2e-80df52a3b7ec
2025-07-16 11:57:53,846 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-b0c06221-56a3-4e28-b1e6-6b5b50af6d98
2025-07-16 11:57:53,846 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-b0c06221-56a3-4e28-b1e6-6b5b50af6d98
2025-07-16 11:57:53,846 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:57:53,855 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 10
2025-07-16 11:57:53,855 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:57:54,322 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='0c2a17bc-13da-4f3b-89e0-60bc54b6daf6')
2025-07-16 11:57:54,322 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:57:54,322 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:57:54,322 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:57:54,322 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:57:54,322 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:57:54,380 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:57:54,380 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:57:54,415 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:57:54,415 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:57:54,415 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:57:54,415 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:57:54,415 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:57:54,415 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:57:54,415 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:57:54,415 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:57:54,415 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:57:54,415 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:57:54,415 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:57:54,415 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 0c2a17bc-13da-4f3b-89e0-60bc54b6daf6
2025-07-16 11:57:54,415 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-7595353f-5a99-494d-b9a1-2dcdd26ce57b
2025-07-16 11:57:54,415 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-7595353f-5a99-494d-b9a1-2dcdd26ce57b
2025-07-16 11:57:54,415 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:57:54,433 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 20
2025-07-16 11:57:54,433 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:57:54,971 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='11a70a19-9a3c-43fa-969a-cd3142ae7e07')
2025-07-16 11:57:54,971 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:57:54,971 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:57:54,971 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:57:54,971 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:57:54,971 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:57:55,031 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:57:55,031 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:57:55,058 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:57:55,063 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:57:55,063 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:57:55,063 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:57:55,063 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:57:55,066 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:57:55,067 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:57:55,067 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:57:55,067 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:57:55,067 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:57:55,067 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:57:55,067 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 11a70a19-9a3c-43fa-969a-cd3142ae7e07
2025-07-16 11:57:55,067 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-3392d79f-2c64-4420-acca-5536467b3d72
2025-07-16 11:57:55,067 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-3392d79f-2c64-4420-acca-5536467b3d72
2025-07-16 11:57:55,067 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:57:55,067 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 30
2025-07-16 11:57:55,067 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:57:55,586 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='1c1d60ca-c0b7-400d-b83e-4add74e62326')
2025-07-16 11:57:55,586 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:57:55,586 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:57:55,586 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:57:55,586 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:57:55,586 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:57:55,654 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:57:55,656 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:57:55,679 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:57:55,679 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:57:55,684 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:57:55,684 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:57:55,684 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:57:55,684 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:57:55,684 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:57:55,684 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:57:55,684 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:57:55,684 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:57:55,684 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:57:55,684 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 1c1d60ca-c0b7-400d-b83e-4add74e62326
2025-07-16 11:57:55,684 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-aac5309f-9924-484a-b20a-82372fb15614
2025-07-16 11:57:55,684 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-aac5309f-9924-484a-b20a-82372fb15614
2025-07-16 11:57:55,684 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:57:55,684 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 40
2025-07-16 11:57:55,695 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:57:56,075 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:57:56,075 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:57:56,075 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:57:56,075 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : InformationCentreAgent.
2025-07-16 11:57:56,075 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:57:56,075 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:57:56,075 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for InformationCentreAgent injected successfully
2025-07-16 11:57:56,075 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 124
2025-07-16 11:57:56,075 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:57:56,188 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='b555867b-636f-459b-ac55-7da2be9a8213')
2025-07-16 11:57:56,188 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:57:56,188 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:57:56,188 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:57:56,188 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:57:56,188 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:57:56,250 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:57:56,250 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:57:56,287 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:57:56,287 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:57:56,287 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:57:56,287 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:57:56,289 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:57:56,289 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:57:56,289 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:57:56,289 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:57:56,291 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:57:56,291 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:57:56,291 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:57:56,291 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : b555867b-636f-459b-ac55-7da2be9a8213
2025-07-16 11:57:56,291 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-909cba01-d2d1-4c62-88c4-6af372d5edb2
2025-07-16 11:57:56,291 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-909cba01-d2d1-4c62-88c4-6af372d5edb2
2025-07-16 11:57:56,293 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:57:56,299 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 63
2025-07-16 11:57:56,299 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:57:57,043 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='e8051595-fc16-4a07-8c49-6ed76aad114f')
2025-07-16 11:57:57,043 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:57:57,043 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:57:57,043 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:57:57,043 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:57:57,043 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:57:57,113 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:57:57,113 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:57:57,145 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:57:57,145 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:57:57,145 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:57:57,145 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:57:57,145 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:57:57,145 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:57:57,145 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:57:57,145 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:57:57,145 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:57:57,145 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:57:57,145 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:57:57,145 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : e8051595-fc16-4a07-8c49-6ed76aad114f
2025-07-16 11:57:57,145 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-2d69f7a3-26d0-432e-b63c-b3e5554fbd0d
2025-07-16 11:57:57,145 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-2d69f7a3-26d0-432e-b63c-b3e5554fbd0d
2025-07-16 11:57:57,155 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:57:57,159 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 73
2025-07-16 11:57:57,159 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:57:57,159 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:57:57,159 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:57:57,170 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:57:57,170 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : InformationCentreAgent.
2025-07-16 11:57:57,170 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:57:57,170 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:57:57,170 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for InformationCentreAgent injected successfully
2025-07-16 11:57:57,170 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 134
2025-07-16 11:57:57,170 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:57:57,186 mlscoringinference [INFO | main.py : communicate : 154] --> Snapshot Data in except part : 3
2025-07-16 11:57:57,186 mlscoringinference [INFO | main.py : communicate : 156] --> Last message in except state: content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'What is SPEED-e of NSDL?'}, 'id': 'tooluse_Aw2zv2ZDTKKuJCWmKrp3Ew'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': '25b6828b-bd3d-4cfd-bb41-768429cfd5ef', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 06:27:57 GMT', 'content-type': 'application/json', 'content-length': '316', 'connection': 'keep-alive', 'x-amzn-requestid': '25b6828b-bd3d-4cfd-bb41-768429cfd5ef'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2044]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--a250fe26-f993-4a94-9c5c-738f5cea332b-0' tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'What is SPEED-e of NSDL?'}, 'id': 'tooluse_Aw2zv2ZDTKKuJCWmKrp3Ew', 'type': 'tool_call'}] usage_metadata={'input_tokens': 3246, 'output_tokens': 69, 'total_tokens': 3315, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}, type: <class 'langchain_core.messages.ai.AIMessage'>
2025-07-16 11:57:57,186 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 55] --> Generating RemoveMessage actions.
2025-07-16 11:57:57,188 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 64] --> RemoveMessage generation completed.
2025-07-16 11:57:57,188 mlscoringinference [INFO | main.py : communicate : 166] --> Messages to remove: 0
2025-07-16 11:57:57,188 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:57:57,188 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : InformationCentreAgent.
2025-07-16 11:57:57,188 mlscoringinference [INFO | main.py : communicate : 172] --> Snapshot Data in recover part : 3
2025-07-16 11:57:57,188 mlscoringinference [INFO | main.py : communicate : 174] --> Last message in recover state: content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'What is SPEED-e of NSDL?'}, 'id': 'tooluse_Aw2zv2ZDTKKuJCWmKrp3Ew'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': '25b6828b-bd3d-4cfd-bb41-768429cfd5ef', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 06:27:57 GMT', 'content-type': 'application/json', 'content-length': '316', 'connection': 'keep-alive', 'x-amzn-requestid': '25b6828b-bd3d-4cfd-bb41-768429cfd5ef'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2044]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--a250fe26-f993-4a94-9c5c-738f5cea332b-0' tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'What is SPEED-e of NSDL?'}, 'id': 'tooluse_Aw2zv2ZDTKKuJCWmKrp3Ew', 'type': 'tool_call'}] usage_metadata={'input_tokens': 3246, 'output_tokens': 69, 'total_tokens': 3315, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}, type: <class 'langchain_core.messages.ai.AIMessage'>
2025-07-16 11:57:57,188 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:57:57,279 mlscoringinference [INFO | main.py : communicate : 154] --> Snapshot Data in except part : 3
2025-07-16 11:57:57,286 mlscoringinference [INFO | main.py : communicate : 156] --> Last message in except state: content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'What is SPEED-e of NSDL?'}, 'id': 'tooluse_Aw2zv2ZDTKKuJCWmKrp3Ew'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': '25b6828b-bd3d-4cfd-bb41-768429cfd5ef', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 06:27:57 GMT', 'content-type': 'application/json', 'content-length': '316', 'connection': 'keep-alive', 'x-amzn-requestid': '25b6828b-bd3d-4cfd-bb41-768429cfd5ef'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2044]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--a250fe26-f993-4a94-9c5c-738f5cea332b-0' tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'What is SPEED-e of NSDL?'}, 'id': 'tooluse_Aw2zv2ZDTKKuJCWmKrp3Ew', 'type': 'tool_call'}] usage_metadata={'input_tokens': 3246, 'output_tokens': 69, 'total_tokens': 3315, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}, type: <class 'langchain_core.messages.ai.AIMessage'>
2025-07-16 11:57:57,288 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 55] --> Generating RemoveMessage actions.
2025-07-16 11:57:57,290 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 64] --> RemoveMessage generation completed.
2025-07-16 11:57:57,290 mlscoringinference [INFO | main.py : communicate : 166] --> Messages to remove: 0
2025-07-16 11:57:57,290 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:57:57,290 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : InformationCentreAgent.
2025-07-16 11:57:57,290 mlscoringinference [INFO | main.py : communicate : 172] --> Snapshot Data in recover part : 3
2025-07-16 11:57:57,290 mlscoringinference [INFO | main.py : communicate : 174] --> Last message in recover state: content=[{'type': 'tool_use', 'name': 'InformationCentreAgent', 'input': {'instruction': 'What is SPEED-e of NSDL?'}, 'id': 'tooluse_Aw2zv2ZDTKKuJCWmKrp3Ew'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': '25b6828b-bd3d-4cfd-bb41-768429cfd5ef', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 06:27:57 GMT', 'content-type': 'application/json', 'content-length': '316', 'connection': 'keep-alive', 'x-amzn-requestid': '25b6828b-bd3d-4cfd-bb41-768429cfd5ef'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [2044]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--a250fe26-f993-4a94-9c5c-738f5cea332b-0' tool_calls=[{'name': 'InformationCentreAgent', 'args': {'instruction': 'What is SPEED-e of NSDL?'}, 'id': 'tooluse_Aw2zv2ZDTKKuJCWmKrp3Ew', 'type': 'tool_call'}] usage_metadata={'input_tokens': 3246, 'output_tokens': 69, 'total_tokens': 3315, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}, type: <class 'langchain_core.messages.ai.AIMessage'>
2025-07-16 11:57:57,290 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:57:57,308 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='f373578a-0c0f-4558-805c-4e40e6948d8e')
2025-07-16 11:57:57,310 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:57:57,310 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:57:57,310 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:57:57,310 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:57:57,313 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:57:57,383 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:57:57,388 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:57:57,443 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:57:57,445 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:57:57,445 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:57:57,445 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:57:57,447 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:57:57,447 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:57:57,449 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:57:57,449 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:57:57,449 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:57:57,451 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:57:57,451 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:57:57,451 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : f373578a-0c0f-4558-805c-4e40e6948d8e
2025-07-16 11:57:57,451 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-5b40b05c-75f5-49b7-b51f-dae6dbfae7d7
2025-07-16 11:57:57,453 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-5b40b05c-75f5-49b7-b51f-dae6dbfae7d7
2025-07-16 11:57:57,453 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:57:57,456 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 73
2025-07-16 11:57:57,458 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:57:57,595 mlscoringinference [INFO | main.py : communicate : 154] --> Snapshot Data in except part : 4
2025-07-16 11:57:57,595 mlscoringinference [INFO | main.py : communicate : 156] --> Last message in except state: content='What is SPEED-e of NSDL?' additional_kwargs={} response_metadata={} id='9f4b7b59-40b1-4abb-84fa-8700c7c82e48', type: <class 'langchain_core.messages.human.HumanMessage'>
2025-07-16 11:57:57,597 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 55] --> Generating RemoveMessage actions.
2025-07-16 11:57:57,597 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 64] --> RemoveMessage generation completed.
2025-07-16 11:57:57,597 mlscoringinference [INFO | main.py : communicate : 166] --> Messages to remove: 0
2025-07-16 11:57:57,599 mlscoringinference [INFO | main.py : communicate : 172] --> Snapshot Data in recover part : 4
2025-07-16 11:57:57,601 mlscoringinference [INFO | main.py : communicate : 174] --> Last message in recover state: content='What is SPEED-e of NSDL?' additional_kwargs={} response_metadata={} id='9f4b7b59-40b1-4abb-84fa-8700c7c82e48', type: <class 'langchain_core.messages.human.HumanMessage'>
2025-07-16 11:57:57,601 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:57:57,800 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:57:57,801 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:57:57,804 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:57:57,804 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : InformationCentreAgent.
2025-07-16 11:57:57,808 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:57:57,810 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:57:57,810 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for InformationCentreAgent injected successfully
2025-07-16 11:57:57,812 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 144
2025-07-16 11:57:57,813 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:57:58,286 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:57:58,286 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:57:58,286 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:57:58,286 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : InformationCentreAgent.
2025-07-16 11:57:58,295 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:57:58,295 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:57:58,295 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for InformationCentreAgent injected successfully
2025-07-16 11:57:58,295 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 154
2025-07-16 11:57:58,295 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:57:59,028 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:57:59,030 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:57:59,031 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:57:59,032 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:57:59,455 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 136] --> FAQ retrieval tool initialized with AWS Knowledge Base
2025-07-16 11:57:59,455 mlscoringinference [DEBUG | react_tool.py : faq_knowledge_base : 138] --> Retrieving FAQ context for question: What is SPEED-e of NSDL?
2025-07-16 11:58:00,138 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='ff110df6-e649-4026-b388-04f76cbc4854')
2025-07-16 11:58:00,138 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:58:00,138 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:58:00,138 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:58:00,138 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:58:00,138 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:58:00,186 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:58:00,186 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:58:00,218 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:58:00,218 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:58:00,218 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:58:00,218 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:58:00,218 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:58:00,218 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:58:00,218 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:58:00,218 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:58:00,218 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:58:00,218 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:58:00,218 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:58:00,218 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : ff110df6-e649-4026-b388-04f76cbc4854
2025-07-16 11:58:00,218 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-d0508d8c-2ace-4fdc-a5ac-cf28ba710d6e
2025-07-16 11:58:00,218 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-d0508d8c-2ace-4fdc-a5ac-cf28ba710d6e
2025-07-16 11:58:00,218 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:58:00,218 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 246
2025-07-16 11:58:00,218 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:58:00,243 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:58:00,244 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:58:00,244 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:58:00,244 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:58:00,407 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='a549b8de-c258-4270-a57a-eaf6d976d380')
2025-07-16 11:58:00,407 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:58:00,407 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:58:00,407 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:58:00,407 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:58:00,407 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:58:00,455 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:58:00,455 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:58:00,455 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 145] --> Retrieved 2 relevant FAQ documents
2025-07-16 11:58:00,471 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:58:00,471 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:58:00,471 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:58:00,471 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 494
2025-07-16 11:58:00,488 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:58:00,499 mlscoringinference [INFO | main.py : communicate : 154] --> Snapshot Data in except part : 5
2025-07-16 11:58:00,499 mlscoringinference [INFO | main.py : communicate : 156] --> Last message in except state: content='{"question": "What is SPEED-e of NSDL?", "answer": "This  facility  enables  demat  account  holders to submit instructions directly on the Internet\\n    through  SPEED-e  website https://eservices.nsdl.com,  without the need to use paper. The \\n    client needs to get registered for this facility first with NSDL, with the approval of DP.\\n\\n    The SPEED-e  instructions also needs to be approved by DP."}\n\n{"question": "What is Easiest of CDSL?", "answer": "   Easiest (electronic access to securities information and execution of secured transactions) \\n   is CDSL\'s  internet  based facility, which permits Beneficiary Owners (BOs) to submit  off-\\n   market,  on-market,  inter-depository  and  early  pay-in  debit instructions from their demat \\n   account,  without the need to use paper. The  client  needs to get registered for this  facility\\n   first with CDSL, with the approval of DP.\\n\\n   The Easiest instructions also needs to be approved by DP."}' name='faq_knowledge_base' id='5593fae5-e51c-43be-9baf-53bcb92c1375' tool_call_id='tooluse_TFXGZNGhSviLikqBOqn19A', type: <class 'langchain_core.messages.tool.ToolMessage'>
2025-07-16 11:58:00,503 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 55] --> Generating RemoveMessage actions.
2025-07-16 11:58:00,503 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 64] --> RemoveMessage generation completed.
2025-07-16 11:58:00,503 mlscoringinference [INFO | main.py : communicate : 166] --> Messages to remove: 0
2025-07-16 11:58:00,503 mlscoringinference [INFO | main.py : communicate : 172] --> Snapshot Data in recover part : 5
2025-07-16 11:58:00,503 mlscoringinference [INFO | main.py : communicate : 174] --> Last message in recover state: content='{"question": "What is SPEED-e of NSDL?", "answer": "This  facility  enables  demat  account  holders to submit instructions directly on the Internet\\n    through  SPEED-e  website https://eservices.nsdl.com,  without the need to use paper. The \\n    client needs to get registered for this facility first with NSDL, with the approval of DP.\\n\\n    The SPEED-e  instructions also needs to be approved by DP."}\n\n{"question": "What is Easiest of CDSL?", "answer": "   Easiest (electronic access to securities information and execution of secured transactions) \\n   is CDSL\'s  internet  based facility, which permits Beneficiary Owners (BOs) to submit  off-\\n   market,  on-market,  inter-depository  and  early  pay-in  debit instructions from their demat \\n   account,  without the need to use paper. The  client  needs to get registered for this  facility\\n   first with CDSL, with the approval of DP.\\n\\n   The Easiest instructions also needs to be approved by DP."}' name='faq_knowledge_base' id='5593fae5-e51c-43be-9baf-53bcb92c1375' tool_call_id='tooluse_TFXGZNGhSviLikqBOqn19A', type: <class 'langchain_core.messages.tool.ToolMessage'>
2025-07-16 11:58:00,503 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:58:00,514 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:58:00,517 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:58:00,519 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:58:00,520 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:58:00,520 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:58:00,520 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:58:00,520 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:58:00,520 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:58:00,520 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:58:00,520 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:58:00,520 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:58:00,520 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : a549b8de-c258-4270-a57a-eaf6d976d380
2025-07-16 11:58:00,520 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-f7009d6f-1b53-447d-a70d-90a1c0c64f64
2025-07-16 11:58:00,528 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-f7009d6f-1b53-447d-a70d-90a1c0c64f64
2025-07-16 11:58:00,529 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:58:00,536 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 504
2025-07-16 11:58:00,536 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:58:00,621 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:58:00,621 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:58:00,621 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:58:00,626 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:58:00,915 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 136] --> FAQ retrieval tool initialized with AWS Knowledge Base
2025-07-16 11:58:00,915 mlscoringinference [DEBUG | react_tool.py : faq_knowledge_base : 138] --> Retrieving FAQ context for question: What is SPEED-e of NSDL?
2025-07-16 11:58:01,074 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='df018c6b-ebfd-4cbf-905c-ec8cd392b108' client_id='NAGSYA5' role='CLIENT' token='b05c8b40-3d72-469b-b3ef-829f04894e9a' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='What is SPEED-e of NSDL?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='d8be99c1-bfb2-4681-81af-430cbe5ead91')
2025-07-16 11:58:01,075 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 11:58:01,077 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 11:58:01,078 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 11:58:01,078 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 11:58:01,080 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 11:58:01,143 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 11:58:01,145 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 11:58:01,180 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:58:01,184 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:58:01,184 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:58:01,184 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:58:01,219 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 11:58:01,225 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 11:58:01,256 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 11:58:01,256 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 11:58:01,256 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 11:58:01,260 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 11:58:01,260 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 11:58:01,265 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 11:58:01,267 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 11:58:01,269 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 11:58:01,271 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 11:58:01,273 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : d8be99c1-bfb2-4681-81af-430cbe5ead91
2025-07-16 11:58:01,273 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-b5777f53-ce71-4a38-9edf-5c3f70be361f
2025-07-16 11:58:01,276 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-b5777f53-ce71-4a38-9edf-5c3f70be361f
2025-07-16 11:58:01,278 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'What is SPEED-e of NSDL?'
2025-07-16 11:58:01,288 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 278
2025-07-16 11:58:01,288 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 11:58:01,401 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 136] --> FAQ retrieval tool initialized with AWS Knowledge Base
2025-07-16 11:58:01,401 mlscoringinference [DEBUG | react_tool.py : faq_knowledge_base : 138] --> Retrieving FAQ context for question: What is SPEED-e of NSDL?
2025-07-16 11:58:01,523 mlscoringinference [INFO | main.py : communicate : 154] --> Snapshot Data in except part : 8
2025-07-16 11:58:01,523 mlscoringinference [INFO | main.py : communicate : 156] --> Last message in except state: content='What is SPEED-e of NSDL?' additional_kwargs={} response_metadata={} id='8b941d46-7b52-4e0e-9445-4b4c43c33568', type: <class 'langchain_core.messages.human.HumanMessage'>
2025-07-16 11:58:01,525 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 55] --> Generating RemoveMessage actions.
2025-07-16 11:58:01,525 mlscoringinference [INFO | state_utils.py : generate_remove_messages : 64] --> RemoveMessage generation completed.
2025-07-16 11:58:01,525 mlscoringinference [INFO | main.py : communicate : 166] --> Messages to remove: 0
2025-07-16 11:58:01,525 mlscoringinference [INFO | main.py : communicate : 172] --> Snapshot Data in recover part : 8
2025-07-16 11:58:01,531 mlscoringinference [INFO | main.py : communicate : 174] --> Last message in recover state: content='What is SPEED-e of NSDL?' additional_kwargs={} response_metadata={} id='8b941d46-7b52-4e0e-9445-4b4c43c33568', type: <class 'langchain_core.messages.human.HumanMessage'>
2025-07-16 11:58:01,531 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:58:01,644 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 136] --> FAQ retrieval tool initialized with AWS Knowledge Base
2025-07-16 11:58:01,646 mlscoringinference [DEBUG | react_tool.py : faq_knowledge_base : 138] --> Retrieving FAQ context for question: What is SPEED-e of NSDL?
2025-07-16 11:58:01,988 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 145] --> Retrieved 2 relevant FAQ documents
2025-07-16 11:58:01,999 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:58:02,001 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:58:02,002 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:58:02,003 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 506
2025-07-16 11:58:02,003 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:58:02,405 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 145] --> Retrieved 2 relevant FAQ documents
2025-07-16 11:58:02,406 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:58:02,406 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:58:02,406 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:58:02,406 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 518
2025-07-16 11:58:02,406 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:58:02,595 mlscoringinference [INFO | react_tool.py : faq_knowledge_base : 145] --> Retrieved 2 relevant FAQ documents
2025-07-16 11:58:02,609 mlscoringinference [INFO | information_center_agent.py : __call__ : 59] --> Information react agent initiated...
2025-07-16 11:58:02,609 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 11:58:02,613 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 11:58:02,613 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 526
2025-07-16 11:58:02,613 mlscoringinference [INFO | information_center_agent.py : __call__ : 81] --> Invoking Information React agent with inputs...
2025-07-16 11:58:07,412 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 11:58:07,412 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 11:58:07,412 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 11:58:07,412 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 18] --> Primary Router state has no Tool.
2025-07-16 11:58:07,429 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 138] --> Starting assistance check messages extraction...
2025-07-16 11:58:07,429 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 148] --> Found AIMessage without tool calls - proceeding with assistance guard check
2025-07-16 11:58:07,429 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 51] --> Starting intent guard check...
2025-07-16 11:58:07,429 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 53] --> Checking response intent...
2025-07-16 11:58:08,325 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:58:08,325 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:58:08,325 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:58:08,329 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:58:08,329 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 334] --> Starting FAQ grounding messages extraction...
2025-07-16 11:58:08,329 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:58:08,329 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **SPEED-e of NSDL** is an internet-based facility ...
2025-07-16 11:58:08,329 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:58:08,329 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:58:08,329 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:58:08,329 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:58:08,329 mlscoringinference [INFO | final_response_node.py : process_final_response : 249] --> FAQ adjacent message is from the FAQ knowledge base.
2025-07-16 11:58:08,329 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 11:58:08,329 mlscoringinference [INFO | final_response_node.py : process_final_response : 254] --> Proceeding with contextual grounding validation
2025-07-16 11:58:08,329 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 70] --> Validating grounding for chatbot response...
2025-07-16 11:58:09,550 mlscoringinference [INFO | assistance_guard.py : guard_simple_response : 58] --> Intent guard check complete
2025-07-16 11:58:09,550 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 151] --> Assistance guard check result: {'intent_type': 'Other', 'reason': 'The response provides detailed information about SPEED-e, which is a facility provided by NSDL for submitting demat account instructions online. It does not strictly fall into the categories of greeting, thank you, or apology for not knowing.'}
2025-07-16 11:58:09,550 mlscoringinference [INFO | final_response_node.py : assisatnce_pass_signal : 128] --> Assistance guard failed due to intent type being 'Other' or empty. with reason: The response provides detailed information about SPEED-e, which is a facility provided by NSDL for submitting demat account instructions online. It does not strictly fall into the categories of greeting, thank you, or apology for not knowing.
2025-07-16 11:58:09,550 mlscoringinference [INFO | final_response_node.py : assisatnce_pass_signal : 130] --> Assistance guard result: Fail
2025-07-16 11:58:09,550 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 153] --> Assistance guard check result: False
2025-07-16 11:58:09,550 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:58:09,550 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: SPEED-e is an internet-based facility provided by ...
2025-07-16 11:58:09,550 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:58:09,550 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 155] --> Regex guard check result: True
2025-07-16 11:58:09,550 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:58:09,550 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:58:09,550 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 157] --> Ban words guard check result: True
2025-07-16 11:58:09,550 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 166] --> Assistance guard check failed with reason: I sincerely apologize for not able to fulfill your request.
2025-07-16 11:58:09,550 mlscoringinference [INFO | final_response_node.py : assistance_final_response_node : 168] --> Appending failure message to messages history.
2025-07-16 11:58:09,564 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:58:09,567 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:58:09,567 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-f7009d6f-1b53-447d-a70d-90a1c0c64f64
2025-07-16 11:58:09,569 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: df018c6b-ebfd-4cbf-905c-ec8cd392b108
2025-07-16 11:58:09,569 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:58:09,691 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:58:09,691 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:58:09,691 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:58:09,691 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:58:09,706 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 334] --> Starting FAQ grounding messages extraction...
2025-07-16 11:58:09,706 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:58:09,706 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **SPEED-e** is an internet-based facility provided...
2025-07-16 11:58:09,706 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:58:09,710 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:58:09,710 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:58:09,710 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:58:09,712 mlscoringinference [INFO | final_response_node.py : process_final_response : 249] --> FAQ adjacent message is from the FAQ knowledge base.
2025-07-16 11:58:09,712 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 11:58:09,712 mlscoringinference [INFO | final_response_node.py : process_final_response : 254] --> Proceeding with contextual grounding validation
2025-07-16 11:58:09,712 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 70] --> Validating grounding for chatbot response...
2025-07-16 11:58:09,867 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:58:09,867 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:58:09,867 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:58:09,867 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:58:09,882 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 334] --> Starting FAQ grounding messages extraction...
2025-07-16 11:58:09,882 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:58:09,882 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **SPEED-e** is an internet-based facility provided...
2025-07-16 11:58:09,882 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:58:09,882 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:58:09,882 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:58:09,882 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:58:09,882 mlscoringinference [INFO | final_response_node.py : process_final_response : 249] --> FAQ adjacent message is from the FAQ knowledge base.
2025-07-16 11:58:09,882 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 11:58:09,882 mlscoringinference [INFO | final_response_node.py : process_final_response : 254] --> Proceeding with contextual grounding validation
2025-07-16 11:58:09,882 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 70] --> Validating grounding for chatbot response...
2025-07-16 11:58:09,960 mlscoringinference [INFO | information_center_agent.py : __call__ : 83] --> Information React agent invoked successfully.
2025-07-16 11:58:09,960 mlscoringinference [INFO | information_center_agent.py : __call__ : 98] --> Assistance Break.
2025-07-16 11:58:09,960 mlscoringinference [INFO | information_center_agent.py : __call__ : 101] --> Information react agent completed.
2025-07-16 11:58:09,960 mlscoringinference [INFO | dynamic_router.py : information_dynamic_router : 109] --> Information Dynamic Router function Activated.
2025-07-16 11:58:09,960 mlscoringinference [INFO | final_response_node.py : information_final_response_node : 334] --> Starting FAQ grounding messages extraction...
2025-07-16 11:58:09,960 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 11:58:09,960 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **SPEED-e** is an internet-based facility provided...
2025-07-16 11:58:09,960 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 11:58:09,960 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 11:58:09,960 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 11:58:09,960 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 11:58:09,960 mlscoringinference [INFO | final_response_node.py : process_final_response : 249] --> FAQ adjacent message is from the FAQ knowledge base.
2025-07-16 11:58:09,960 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 11:58:09,960 mlscoringinference [INFO | final_response_node.py : process_final_response : 254] --> Proceeding with contextual grounding validation
2025-07-16 11:58:09,960 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 70] --> Validating grounding for chatbot response...
2025-07-16 11:58:12,017 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 78] --> Grounding validation complete
2025-07-16 11:58:12,017 mlscoringinference [INFO | final_response_node.py : process_final_response : 263] --> Grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'dialogue_continuity': 'Coherent', 'issues': 'The response directly answers the query by explaining what SPEED-e is and how it works for demat account holders to submit instructions online. The key details are grounded in the provided context chunk. As this is the first query in the dialogue, continuity is coherent.'}
2025-07-16 11:58:12,017 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 75] --> Grounding validation criteria: Query relevance: High, Chunk alignment: Aligned, Dialogue continuity: Coherent
2025-07-16 11:58:12,019 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 84] --> Grounding validation result: Pass
2025-07-16 11:58:12,019 mlscoringinference [INFO | final_response_node.py : process_final_response : 275] --> Grounding validation passed successfully
2025-07-16 11:58:12,019 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 11:58:12,019 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:58:12,019 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:58:12,019 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-3392d79f-2c64-4420-acca-5536467b3d72
2025-07-16 11:58:12,019 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: df018c6b-ebfd-4cbf-905c-ec8cd392b108
2025-07-16 11:58:12,019 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:58:12,414 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 78] --> Grounding validation complete
2025-07-16 11:58:12,414 mlscoringinference [INFO | final_response_node.py : process_final_response : 263] --> Grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'dialogue_continuity': 'Coherent', 'issues': 'The response directly answers the query by explaining what SPEED-e is, how it works, and its purpose. The information is clearly grounded in the provided context chunk. The response is a standalone explanation, so dialogue continuity is not applicable.'}
2025-07-16 11:58:12,414 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 75] --> Grounding validation criteria: Query relevance: High, Chunk alignment: Aligned, Dialogue continuity: Coherent
2025-07-16 11:58:12,414 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 84] --> Grounding validation result: Pass
2025-07-16 11:58:12,414 mlscoringinference [INFO | final_response_node.py : process_final_response : 275] --> Grounding validation passed successfully
2025-07-16 11:58:12,414 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 11:58:12,430 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:58:12,430 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:58:12,430 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-b0c06221-56a3-4e28-b1e6-6b5b50af6d98
2025-07-16 11:58:12,430 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: df018c6b-ebfd-4cbf-905c-ec8cd392b108
2025-07-16 11:58:12,430 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:58:12,621 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 78] --> Grounding validation complete
2025-07-16 11:58:12,621 mlscoringinference [INFO | final_response_node.py : process_final_response : 263] --> Grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'dialogue_continuity': 'Coherent', 'issues': 'The response directly answers the query by explaining what SPEED-e is and how it works for NSDL demat account holders. The information is clearly grounded in the retrieved context chunk. As this is the first query in the dialogue, the continuity criterion is not applicable.'}
2025-07-16 11:58:12,621 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 75] --> Grounding validation criteria: Query relevance: High, Chunk alignment: Aligned, Dialogue continuity: Coherent
2025-07-16 11:58:12,621 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 84] --> Grounding validation result: Pass
2025-07-16 11:58:12,621 mlscoringinference [INFO | final_response_node.py : process_final_response : 275] --> Grounding validation passed successfully
2025-07-16 11:58:12,621 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 11:58:12,621 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:58:12,621 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:58:12,621 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-aac5309f-9924-484a-b20a-82372fb15614
2025-07-16 11:58:12,621 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: df018c6b-ebfd-4cbf-905c-ec8cd392b108
2025-07-16 11:58:12,621 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 11:58:13,143 mlscoringinference [INFO | faq_grounding.py : validate_contextual_grounding : 78] --> Grounding validation complete
2025-07-16 11:58:13,143 mlscoringinference [INFO | final_response_node.py : process_final_response : 263] --> Grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'dialogue_continuity': 'Coherent', 'issues': 'The response directly answers the query by explaining what SPEED-e is, how it works, and its purpose. The information is clearly grounded in the provided context chunk. The response is a standalone explanation, so dialogue continuity is coherent.'}
2025-07-16 11:58:13,143 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 75] --> Grounding validation criteria: Query relevance: High, Chunk alignment: Aligned, Dialogue continuity: Coherent
2025-07-16 11:58:13,144 mlscoringinference [INFO | final_response_node.py : grounding_pass_signal : 84] --> Grounding validation result: Pass
2025-07-16 11:58:13,144 mlscoringinference [INFO | final_response_node.py : process_final_response : 275] --> Grounding validation passed successfully
2025-07-16 11:58:13,144 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 11:58:13,152 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 11:58:13,152 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 11:58:13,155 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-7595353f-5a99-494d-b9a1-2dcdd26ce57b
2025-07-16 11:58:13,155 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: df018c6b-ebfd-4cbf-905c-ec8cd392b108
2025-07-16 11:58:13,155 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 12:00:01,484 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='d069ea86-2379-48b7-a4be-3888e4eab447' client_id='NAGSYA5' role='CLIENT' token='fb178e64-f767-432e-a531-34fc48239afb' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Give me a ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='cdcaa688-a489-445d-9ea7-027dd374baba')
2025-07-16 12:00:01,485 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:00:01,485 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:00:01,486 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:00:01,486 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:00:01,487 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:00:01,537 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:00:01,538 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:00:01,561 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:00:01,563 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:00:01,564 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:00:01,564 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:00:01,564 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:00:01,565 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:00:01,565 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:00:01,565 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:00:01,566 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 5
2025-07-16 12:00:01,566 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 12:00:01,566 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:00:01,566 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : cdcaa688-a489-445d-9ea7-027dd374baba
2025-07-16 12:00:01,566 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-72909b26-0085-47c7-8a0b-7f8d1d687c1d
2025-07-16 12:00:01,567 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-72909b26-0085-47c7-8a0b-7f8d1d687c1d
2025-07-16 12:00:01,567 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'Give me a ledger report'
2025-07-16 12:00:01,570 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 10
2025-07-16 12:00:01,571 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 12:00:03,458 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 12:00:03,459 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 12:00:03,460 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 12:00:03,462 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 12:00:03,465 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:00:03,467 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:00:03,467 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 12:00:03,468 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:00:03,468 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 115
2025-07-16 12:00:03,468 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:00:10,498 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:00:10,498 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:00:10,498 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:00:10,499 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:00:10,500 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 12:00:10,503 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 12:00:10,504 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy format) \n- End date for the report (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- How would you like to receive the report (Link or Email)?\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_nAj3XhyxQvSV2YG6wOMe4g', 'type': 'tool_call'}
2025-07-16 12:00:10,504 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 12:00:10,504 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:00:10,506 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 12:00:10,506 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:00:10,506 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:00:10,506 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:00:10,507 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 12:00:10,507 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 12:00:10,512 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 12:00:10,514 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 12:00:10,515 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-72909b26-0085-47c7-8a0b-7f8d1d687c1d
2025-07-16 12:00:10,515 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: d069ea86-2379-48b7-a4be-3888e4eab447
2025-07-16 12:00:10,515 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 12:00:46,999 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='d069ea86-2379-48b7-a4be-3888e4eab447' client_id='NAGSYA5' role='CLIENT' token='fb178e64-f767-432e-a531-34fc48239afb' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text="Generate a ledger report using default settings for Client ID 'NAGSYA5' and send it through a link.", id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='75a9f3c9-34ed-41eb-bd7a-a905f2a99f06')
2025-07-16 12:00:46,999 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:00:47,000 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:00:47,000 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:00:47,000 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:00:47,000 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:00:47,056 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:00:47,057 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:00:47,086 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:00:47,088 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:00:47,088 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:00:47,089 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:00:47,090 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:00:47,091 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:00:47,091 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:00:47,092 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:00:47,093 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 12:00:47,093 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:00:47,093 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 75a9f3c9-34ed-41eb-bd7a-a905f2a99f06
2025-07-16 12:00:47,094 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 12:00:47,095 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: 75a9f3c9-34ed-41eb-bd7a-a905f2a99f06
2025-07-16 12:00:47,095 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 12:00:47,099 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 12:00:47,099 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy format) \n- End date for the report (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- How would you like to receive the report (Link or Email)?\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_nAj3XhyxQvSV2YG6wOMe4g', 'type': 'tool_call'}
2025-07-16 12:00:47,099 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 12:00:47,099 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:00:47,100 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 12:00:47,100 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:00:47,100 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:00:47,100 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:00:47,100 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 12:00:47,100 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 12:00:47,101 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 27] --> User input received: Generate a ledger report using default settings for Client ID 'NAGSYA5' and send it through a link.
2025-07-16 12:00:47,103 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:00:47,104 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:00:47,104 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 12:00:47,104 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:00:47,104 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 387
2025-07-16 12:00:47,105 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:00:53,632 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:00:53,633 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:00:53,633 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:00:53,635 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:00:53,635 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 12:00:53,639 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 12:00:53,639 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': "**Got it, I'll use the Client ID NAGSYA5 and provide a download link for the report.**\n\nTo complete the request, please share:\n\n- The start date for the ledger report (mm/dd/yyyy format)\n- The end date for the report (mm/dd/yyyy format)\n\nI'll use the 'Combine' exchange segment and 'Voucher' date type by default."}, 'id': 'tooluse_XtaDFb4LS1W9b2ikfGLXDg', 'type': 'tool_call'}
2025-07-16 12:00:53,640 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 12:00:53,640 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:00:53,640 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **Got it, I'll use the Client ID NAGSYA5 and provi...
2025-07-16 12:00:53,640 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:00:53,640 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:00:53,641 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:00:53,641 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 12:00:53,641 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 12:00:53,648 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 12:00:53,650 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 12:00:53,651 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-72909b26-0085-47c7-8a0b-7f8d1d687c1d
2025-07-16 12:00:53,652 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: d069ea86-2379-48b7-a4be-3888e4eab447
2025-07-16 12:00:53,653 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 12:01:20,182 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='d069ea86-2379-48b7-a4be-3888e4eab447' client_id='NAGSYA5' role='CLIENT' token='fb178e64-f767-432e-a531-34fc48239afb' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text="Generate a ledger report for last year using default settings for Client ID 'NAGSYA5' and send it through a link.", id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='130d0ca6-5b0a-4779-b0a4-b7f2a78978da')
2025-07-16 12:01:20,183 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:01:20,183 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:01:20,183 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:01:20,183 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:01:20,185 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:01:20,255 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:01:20,256 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:01:20,464 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:01:20,466 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:01:20,466 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:01:20,466 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:01:20,467 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:01:20,467 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:01:20,468 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:01:20,470 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:01:20,471 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 12:01:20,471 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:01:20,472 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 130d0ca6-5b0a-4779-b0a4-b7f2a78978da
2025-07-16 12:01:20,472 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 12:01:20,473 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: 130d0ca6-5b0a-4779-b0a4-b7f2a78978da
2025-07-16 12:01:20,473 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 12:01:20,476 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 12:01:20,476 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': "**Got it, I'll use the Client ID NAGSYA5 and provide a download link for the report.**\n\nTo complete the request, please share:\n\n- The start date for the ledger report (mm/dd/yyyy format)\n- The end date for the report (mm/dd/yyyy format)\n\nI'll use the 'Combine' exchange segment and 'Voucher' date type by default."}, 'id': 'tooluse_XtaDFb4LS1W9b2ikfGLXDg', 'type': 'tool_call'}
2025-07-16 12:01:20,476 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 12:01:20,476 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:01:20,476 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **Got it, I'll use the Client ID NAGSYA5 and provi...
2025-07-16 12:01:20,477 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:01:20,477 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:01:20,477 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:01:20,477 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 12:01:20,477 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 12:01:20,477 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 27] --> User input received: Generate a ledger report for last year using default settings for Client ID 'NAGSYA5' and send it through a link.
2025-07-16 12:01:20,480 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:01:20,481 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:01:20,481 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 12:01:20,481 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:01:20,481 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 672
2025-07-16 12:01:20,482 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:01:27,221 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:01:27,223 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:01:27,224 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:01:27,226 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:01:27,235 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-07-16 12:01:27,236 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 12:01:27,238 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 70] --> System parameters mapper loaded from agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 12:01:27,238 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 80] --> System parameters mapper updated with base URL.
2025-07-16 12:01:27,238 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': 'd069ea86-2379-48b7-a4be-3888e4eab447', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': 'fb178e64-f767-432e-a531-34fc48239afb', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'Give me a ledger report', 'id': None, 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-72909b26-0085-47c7-8a0b-7f8d1d687c1d'}}
2025-07-16 12:01:27,239 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-07-16 12:01:27,239 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-07-16 12:01:27,239 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://cs.motilaloswaluat.com/gw/api/cbot/ledgerstatement with headers: {'sessionid': 'd069ea86-2379-48b7-a4be-3888e4eab447', 'token': 'fb178e64-f767-432e-a531-34fc48239afb', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientId': 'NAGSYA5', 'from_Date': '04/01/2024', 'to_Date': '03/31/2025', 'exchange_Seg': 'Combine', 'date_Type': 'Voucher', 'return_Type': 'Link', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-07-16 12:01:28,247 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:01:28,250 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:01:28,250 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 12:01:28,250 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:01:28,251 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 920
2025-07-16 12:01:28,251 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:01:33,149 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:01:33,152 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:01:33,154 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:01:33,157 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:01:33,160 mlscoringinference [INFO | final_response_node.py : report_final_response_node : 296] --> Starting report response check...
2025-07-16 12:01:33,161 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:01:33,161 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: Here is the download link for your ledger report f...
2025-07-16 12:01:33,162 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:01:33,162 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:01:33,162 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:01:33,162 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 12:01:33,163 mlscoringinference [INFO | final_response_node.py : process_final_response : 227] --> API tool call message found - proceeding with API grounding validation
2025-07-16 12:01:33,163 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 12:01:33,163 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 127] --> Validating API Response grounding ...
2025-07-16 12:01:35,613 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 133] --> API Response Grounding validation complete.
2025-07-16 12:01:35,613 mlscoringinference [INFO | final_response_node.py : process_final_response : 234] --> API tool call grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'issues': 'The response directly provides the download link that was retrieved from the knowledge chunk, so it is highly relevant and well-grounded in the context.'}
2025-07-16 12:01:35,613 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 100] --> API response validation criteria: Query relevance: High, Chunk alignment: Aligned
2025-07-16 12:01:35,613 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 108] --> API response validation result: Pass
2025-07-16 12:01:35,613 mlscoringinference [INFO | final_response_node.py : process_final_response : 245] --> API grounding validation passed successfully
2025-07-16 12:01:35,614 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 12:01:35,619 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 12:01:35,622 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 12:01:35,622 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-72909b26-0085-47c7-8a0b-7f8d1d687c1d
2025-07-16 12:01:35,623 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: d069ea86-2379-48b7-a4be-3888e4eab447
2025-07-16 12:01:35,623 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 12:04:24,849 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='fecea1ab-bcdb-4282-987f-93d229705fd6' client_id='NAGSYA5' role='CLIENT' token='0e1bcf5c-b0ff-4069-9323-5d7ecad6a9fe' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='give me ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='1a8bfcc5-8049-4b23-a8b0-1a3ea917fe13')
2025-07-16 12:04:24,849 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:04:24,849 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:04:24,849 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:04:24,849 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:04:24,849 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:04:24,904 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:04:24,906 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:04:24,924 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:04:24,924 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:04:24,924 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:04:24,924 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:04:24,924 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:04:24,924 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:04:24,928 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:04:24,930 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:04:24,930 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 4
2025-07-16 12:04:24,930 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 12:04:24,930 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:04:24,930 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 1a8bfcc5-8049-4b23-a8b0-1a3ea917fe13
2025-07-16 12:04:24,932 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-0533cfe5-1d57-4aed-b189-c2495e211086
2025-07-16 12:04:24,932 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-0533cfe5-1d57-4aed-b189-c2495e211086
2025-07-16 12:04:24,932 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'give me ledger report'
2025-07-16 12:04:24,932 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 10
2025-07-16 12:04:24,932 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 12:04:26,839 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 12:04:26,839 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 12:04:26,839 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 12:04:26,842 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 12:04:26,847 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:04:26,847 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:04:26,847 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 12:04:26,849 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:04:26,849 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 114
2025-07-16 12:04:26,849 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:04:32,572 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:04:32,573 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:04:32,573 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:04:32,575 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:04:32,578 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 12:04:32,582 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 12:04:32,583 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Client ID (if not NAGSYA5)\n- Start date (mm/dd/yyyy format) \n- End date (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery (Link or Email)\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_5Jymfy_PT0a2cXKlElJsww', 'type': 'tool_call'}
2025-07-16 12:04:32,583 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 12:04:32,584 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:04:32,584 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 12:04:32,585 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:04:32,585 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:04:32,586 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:04:32,586 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 12:04:32,586 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 12:04:32,588 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 12:04:32,590 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 12:04:32,590 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-0533cfe5-1d57-4aed-b189-c2495e211086
2025-07-16 12:04:32,590 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: fecea1ab-bcdb-4282-987f-93d229705fd6
2025-07-16 12:04:32,592 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 12:22:20,433 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='27174386-60e1-43f8-92d9-8798d7b47669' client_id='NAGSYA5' role='CLIENT' token='22dacd77-bbea-464f-bde6-7ac51973c243' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='af9a06fe-a2ab-4192-a6fa-295598ab0627')
2025-07-16 12:22:20,433 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:22:20,433 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:22:20,433 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:22:20,438 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:22:20,438 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:22:20,508 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:22:20,508 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:22:20,536 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:22:20,536 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:22:20,536 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:22:20,536 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:22:20,536 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:22:20,536 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:22:20,536 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:22:20,536 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:22:20,536 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 2
2025-07-16 12:22:20,550 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 143] --> Short input detected in agentic flow
2025-07-16 12:22:20,550 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 145] --> Invoking flow router runnable for short input in agentic flow
2025-07-16 12:22:21,576 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 147] --> Result from flow router: content=[{'type': 'tool_use', 'name': 'IDTypeClassifierTool', 'input': {'id_type': ['ledger_report']}, 'id': 'tooluse_he-Muul_Rem5jAncDaKQRA'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': '2744eb21-97a4-4fc2-ae20-5959ac8d73e7', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 06:52:21 GMT', 'content-type': 'application/json', 'content-length': '299', 'connection': 'keep-alive', 'x-amzn-requestid': '2744eb21-97a4-4fc2-ae20-5959ac8d73e7'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [952]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--584c2c2d-7213-4a13-8991-c95990d2540d-0' tool_calls=[{'name': 'IDTypeClassifierTool', 'args': {'id_type': ['ledger_report']}, 'id': 'tooluse_he-Muul_Rem5jAncDaKQRA', 'type': 'tool_call'}] usage_metadata={'input_tokens': 989, 'output_tokens': 63, 'total_tokens': 1052, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}
2025-07-16 12:22:21,576 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 157] --> Returning matched choices: [{'id': 'ledger_report', 'text': 'Ledger Report'}]
2025-07-16 12:22:21,576 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:22:21,576 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 76] --> Returning options response from classify_id_type.{'action': 'option', 'response_text': 'Did you mean one of these options?', 'available_choices': [{'id': 'ledger_report', 'text': 'Ledger Report'}]}
2025-07-16 12:22:52,947 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 12:22:57,186 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 12:22:57,265 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:22:57,265 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:22:57,265 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:22:57,315 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 12:22:57,317 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 12:22:57,317 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 12:22:57,317 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 12:22:57,319 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 12:22:57,319 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 12:22:57,334 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 12:22:57,336 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:22:57,336 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:22:57,336 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:22:57,346 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:22:57,346 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:22:57,346 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:22:57,346 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:22:57,346 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:22:57,346 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:22:57,366 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:22:57,366 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:22:57,376 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:22:57,376 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:22:57,376 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 12:22:57,381 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 12:22:57,381 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 12:22:57,383 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:22:57,385 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 12:22:57,385 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 12:22:57,385 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 12:22:57,385 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 12:22:57,385 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 12:22:57,385 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:22:57,392 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 12:22:57,392 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 12:22:57,394 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 12:22:57,394 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:22:57,394 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 12:22:57,394 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 12:22:57,394 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 12:22:57,394 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:22:57,394 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 12:22:57,394 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 12:22:57,394 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 12:22:57,394 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 12:22:57,394 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 12:22:57,394 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 12:22:57,408 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 12:22:57,408 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 12:22:57,408 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 12:22:57,408 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:22:57,408 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 12:22:57,408 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 12:22:57,408 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 12:22:57,408 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 12:22:57,408 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 12:22:57,408 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:22:57,408 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:22:57,408 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:22:57,408 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:22:57,482 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:22:57,484 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:22:57,510 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 12:23:08,604 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='27174386-60e1-43f8-92d9-8798d7b47669' client_id='NAGSYA5' role='CLIENT' token='22dacd77-bbea-464f-bde6-7ac51973c243' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='7fdaf56e-c6f4-42e7-be61-c44f02e23df0')
2025-07-16 12:23:08,604 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:23:08,604 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:23:08,604 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:23:08,604 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:23:08,604 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:23:08,652 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:23:08,652 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:23:08,681 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:23:08,681 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:23:08,681 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:23:08,681 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:23:08,684 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:23:08,684 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:23:08,684 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:23:08,686 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:23:08,686 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 2
2025-07-16 12:23:08,686 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 143] --> Short input detected in agentic flow
2025-07-16 12:23:08,686 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 145] --> Invoking flow router runnable for short input in agentic flow
2025-07-16 12:23:10,204 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 147] --> Result from flow router: content=[{'type': 'tool_use', 'name': 'IDTypeClassifierTool', 'input': {'id_type': ['ledger_report']}, 'id': 'tooluse_3X-P6Ej3Tc6V_5Mqszrelw'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': '74818990-b13b-4f32-aa61-07d11a84a39f', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 06:53:10 GMT', 'content-type': 'application/json', 'content-length': '299', 'connection': 'keep-alive', 'x-amzn-requestid': '74818990-b13b-4f32-aa61-07d11a84a39f'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [907]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--309cfad0-2dac-4c30-b443-e2b9f030e40b-0' tool_calls=[{'name': 'IDTypeClassifierTool', 'args': {'id_type': ['ledger_report']}, 'id': 'tooluse_3X-P6Ej3Tc6V_5Mqszrelw', 'type': 'tool_call'}] usage_metadata={'input_tokens': 989, 'output_tokens': 63, 'total_tokens': 1052, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}
2025-07-16 12:23:10,204 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 157] --> Returning matched choices: [{'id': 'ledger_report', 'text': 'Ledger Report'}]
2025-07-16 12:23:10,204 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:23:10,204 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 76] --> Returning options response from classify_id_type.{'action': 'option', 'response_text': 'Did you mean one of these options?', 'available_choices': [{'id': 'ledger_report', 'text': 'Ledger Report'}]}
2025-07-16 12:23:57,348 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 12:24:00,958 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 12:24:01,006 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:24:01,006 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:24:01,021 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:24:01,061 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 12:24:01,061 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 12:24:01,061 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 12:24:01,061 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 12:24:01,061 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 12:24:01,061 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 12:24:01,069 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:24:01,087 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:24:01,105 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:24:01,105 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:24:01,105 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:24:01,105 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:24:01,105 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 12:24:01,105 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 12:24:01,116 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 12:24:01,117 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:24:01,117 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 12:24:01,117 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 12:24:01,117 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 12:24:01,117 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 12:24:01,117 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 12:24:01,117 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:24:01,130 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 12:24:01,130 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 12:24:01,130 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 12:24:01,132 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:24:01,132 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 12:24:01,132 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 12:24:01,132 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 12:24:01,132 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:24:01,141 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 12:24:01,141 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 12:24:01,141 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 12:24:01,141 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 12:24:01,141 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 12:24:01,141 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 12:24:01,148 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 12:24:01,148 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 12:24:01,148 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 12:24:01,148 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 12:24:01,148 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 12:24:01,148 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 12:24:01,148 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 12:24:01,148 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 12:24:01,148 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 12:24:01,148 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:24:01,148 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:24:01,148 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:24:01,148 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:24:01,212 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:24:01,212 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:24:01,245 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 12:24:58,507 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='132dca6e-c79f-475a-9f56-67b1f9125246' client_id='NAGSYA5' role='CLIENT' token='33e41d89-912f-4a92-85aa-c26bf10c15e0' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Give me ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='4c1dfc49-db60-4260-98da-894ba8743ff8')
2025-07-16 12:24:58,508 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:24:58,508 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:24:58,509 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:24:58,509 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:24:58,509 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:24:58,558 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:24:58,559 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:24:58,583 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:24:58,584 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:24:58,585 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:24:58,585 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:24:58,587 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:24:58,588 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:24:58,588 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:24:58,591 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:24:58,591 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 4
2025-07-16 12:24:58,591 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 12:24:58,592 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:24:58,592 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 4c1dfc49-db60-4260-98da-894ba8743ff8
2025-07-16 12:24:58,594 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-8f7d4f40-e50a-4136-90ca-bf0c75b56aaa
2025-07-16 12:24:58,594 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-8f7d4f40-e50a-4136-90ca-bf0c75b56aaa
2025-07-16 12:24:58,595 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'Give me ledger report'
2025-07-16 12:24:58,598 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 10
2025-07-16 12:24:58,624 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 12:25:01,367 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 12:25:01,367 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 12:25:01,369 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 12:25:01,369 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 12:25:01,374 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:25:01,375 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:25:01,376 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 12:25:01,376 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:25:01,377 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 114
2025-07-16 12:25:01,377 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:25:08,115 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:25:08,116 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:25:08,116 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:25:08,117 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:25:08,117 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 12:25:08,121 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 12:25:08,124 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need some additional details:**\n\n- Client ID (if not NAGSYA5)\n- Start date for the report (mm/dd/yyyy)\n- End date for the report (mm/dd/yyyy) \n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- How would you like to receive the report (Link or Email)?\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_IFegflkMRrCX7PEixtwzEA', 'type': 'tool_call'}
2025-07-16 12:25:08,126 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 12:25:08,126 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:25:08,127 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need some addi...
2025-07-16 12:25:08,127 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:25:08,128 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:25:08,128 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:25:08,128 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 12:25:08,128 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 12:25:08,131 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 12:25:08,133 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 12:25:08,133 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-8f7d4f40-e50a-4136-90ca-bf0c75b56aaa
2025-07-16 12:25:08,134 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 132dca6e-c79f-475a-9f56-67b1f9125246
2025-07-16 12:25:08,134 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 12:26:31,393 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='54f09b4c-d6cb-4cc8-a408-63702dafb9d6' client_id='NAGSYA5' role='CLIENT' token='d3a3fc95-2449-42b3-8ab6-2decf412ba0e' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='give me ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='23816d7a-6772-4782-b373-d7977b6b79f0')
2025-07-16 12:26:31,393 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:26:31,393 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:26:31,393 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:26:31,393 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:26:31,398 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:26:31,517 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:26:31,517 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:26:31,551 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:26:31,551 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:26:31,551 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:26:31,551 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:26:31,551 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:26:31,551 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:26:31,551 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:26:31,551 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:26:31,551 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 4
2025-07-16 12:26:31,551 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 12:26:31,551 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:26:31,551 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 23816d7a-6772-4782-b373-d7977b6b79f0
2025-07-16 12:26:31,551 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-df621c30-a12f-4585-acf1-d1a3849f2176
2025-07-16 12:26:31,551 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-df621c30-a12f-4585-acf1-d1a3849f2176
2025-07-16 12:26:31,551 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'give me ledger report'
2025-07-16 12:26:31,551 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 10
2025-07-16 12:26:31,551 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 12:26:34,287 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 12:26:34,287 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 12:26:34,287 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 12:26:34,287 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 12:26:34,292 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:26:34,292 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:26:34,292 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 12:26:34,292 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:26:34,292 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 114
2025-07-16 12:26:34,292 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:26:40,044 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:26:40,047 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:26:40,047 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:26:40,051 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:26:40,053 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 12:26:40,053 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 12:26:40,053 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Client ID (if not NAGSYA5)\n- Start date (mm/dd/yyyy format) \n- End date (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery (Link or Email)\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_u5KhditvQ-C7R7YeK7nOZw', 'type': 'tool_call'}
2025-07-16 12:26:40,053 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 12:26:40,053 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:26:40,053 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 12:26:40,053 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:26:40,053 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:26:40,053 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:26:40,053 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 12:26:40,053 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 12:26:40,053 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 12:26:40,063 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 12:26:40,063 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-df621c30-a12f-4585-acf1-d1a3849f2176
2025-07-16 12:26:40,063 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 54f09b4c-d6cb-4cc8-a408-63702dafb9d6
2025-07-16 12:26:40,063 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 12:27:41,708 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='54f09b4c-d6cb-4cc8-a408-63702dafb9d6' client_id='NAGSYA5' role='CLIENT' token='d3a3fc95-2449-42b3-8ab6-2decf412ba0e' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='generate ledger report with default details for last year and deliver through link', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='6d8ca70d-b0a4-4bb1-82af-e4f51e1e2d64')
2025-07-16 12:27:41,708 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 12:27:41,708 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 12:27:41,708 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 12:27:41,708 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 12:27:41,708 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 12:27:41,785 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 12:27:41,785 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 12:27:41,819 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 12:27:41,819 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 12:27:41,819 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 12:27:41,819 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 12:27:41,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 12:27:41,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 12:27:41,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 12:27:41,819 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 12:27:41,819 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 136] --> Interrupt detected in the graph state, skipping ID type classification.
2025-07-16 12:27:41,819 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 12:27:41,819 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 6d8ca70d-b0a4-4bb1-82af-e4f51e1e2d64
2025-07-16 12:27:41,819 mlscoringinference [INFO | main.py : communicate : 68] --> Interupt Resume: >>
2025-07-16 12:27:41,819 mlscoringinference [INFO | main.py : communicate : 76] --> Starting interrupt resume with request_id: 6d8ca70d-b0a4-4bb1-82af-e4f51e1e2d64
2025-07-16 12:27:41,819 mlscoringinference [INFO | main.py : communicate : 84] --> Invoking graph with interrupt resume command
2025-07-16 12:27:41,834 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 12:27:41,834 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Client ID (if not NAGSYA5)\n- Start date (mm/dd/yyyy format) \n- End date (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery (Link or Email)\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_u5KhditvQ-C7R7YeK7nOZw', 'type': 'tool_call'}
2025-07-16 12:27:41,834 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 12:27:41,834 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:27:41,837 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 12:27:41,837 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:27:41,837 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:27:41,837 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:27:41,837 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 12:27:41,837 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 12:27:41,837 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 27] --> User input received: generate ledger report with default details for last year and deliver through link
2025-07-16 12:27:41,837 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:27:41,837 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:27:41,837 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 12:27:41,837 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:27:41,837 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 325
2025-07-16 12:27:41,837 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:27:48,722 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:27:48,724 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:27:48,724 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:27:48,725 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:27:48,737 mlscoringinference [INFO | react_tool.py : request_post : 30] --> Request POST tool initiated...
2025-07-16 12:27:48,737 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 12:27:48,741 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 70] --> System parameters mapper loaded from agentic_flow\openapi_schema\system_params_mapper.json
2025-07-16 12:27:48,741 mlscoringinference [INFO | json_utils.py : update_system_param_mapper : 80] --> System parameters mapper updated with base URL.
2025-07-16 12:27:48,741 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 45] --> Payload received: {'user_id': 'NAGSYA5', 'session_id': '54f09b4c-d6cb-4cc8-a408-63702dafb9d6', 'client_id': 'NAGSYA5', 'role': 'CLIENT', 'token': 'd3a3fc95-2449-42b3-8ab6-2decf412ba0e', 'interaction': {'type': 'AGENTIC_FLOW', 'attachement': '', 'input': {'text': 'give me ledger report', 'id': None, 'from_date': None, 'to_date': None}, 'metadata': {'source': 'web'}, 'request_id': 'req-df621c30-a12f-4585-acf1-d1a3849f2176'}}
2025-07-16 12:27:48,741 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted user_id from payload: NAGSYA5
2025-07-16 12:27:48,741 mlscoringinference [INFO | react_tool.py : _get_post_tool_data : 58] --> Extracted role from payload: CLIENT
2025-07-16 12:27:48,741 mlscoringinference [INFO | react_tool.py : request_post : 100] --> Making POST request to http://cs.motilaloswaluat.com/gw/api/cbot/ledgerstatement with headers: {'sessionid': '54f09b4c-d6cb-4cc8-a408-63702dafb9d6', 'token': 'd3a3fc95-2449-42b3-8ab6-2decf412ba0e', 'User-Agent': 'Mozilla/5.0', 'Content-Type': 'application/json'} and body: {'clientId': 'NAGSYA5', 'from_Date': '04/01/2024', 'to_Date': '03/31/2025', 'exchange_Seg': 'Combine', 'date_Type': 'Voucher', 'return_Type': 'Link', 'userId': 'NAGSYA5', 'role': 'CLIENT'}
2025-07-16 12:27:49,511 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 12:27:49,511 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 12:27:49,511 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 12:27:49,513 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 12:27:49,513 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 525
2025-07-16 12:27:49,513 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 12:27:56,468 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 12:27:56,468 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 12:27:56,468 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 12:27:56,472 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 12:27:56,475 mlscoringinference [INFO | final_response_node.py : report_final_response_node : 296] --> Starting report response check...
2025-07-16 12:27:56,475 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 12:27:56,475 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **Here is the download link for your ledger report...
2025-07-16 12:27:56,475 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 12:27:56,475 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 12:27:56,475 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 12:27:56,475 mlscoringinference [INFO | final_response_node.py : process_final_response : 223] --> Regex and ban words validation passed successfully
2025-07-16 12:27:56,475 mlscoringinference [INFO | final_response_node.py : process_final_response : 227] --> API tool call message found - proceeding with API grounding validation
2025-07-16 12:27:56,475 mlscoringinference [INFO | final_response_node.py : extract_message_content : 58] --> Extracted message content at position -2
2025-07-16 12:27:56,475 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 127] --> Validating API Response grounding ...
2025-07-16 12:27:59,197 mlscoringinference [INFO | api_guard.py : validate_api_response_grounding : 133] --> API Response Grounding validation complete.
2025-07-16 12:27:59,199 mlscoringinference [INFO | final_response_node.py : process_final_response : 234] --> API tool call grounding validation result: {'query_response_relevance': 'High', 'response_chunk_alignment': 'Aligned', 'issues': 'The response is highly relevant to the retrieved knowledge chunk, which appears to be a link to a ledger report. The response accurately reflects the content of the retrieved chunk by providing context that it is a download link for a ledger report covering transactions from 04/01/2024 to 03/31/2025. There are no major issues with the grounding or relevance of the response.'}
2025-07-16 12:27:59,199 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 100] --> API response validation criteria: Query relevance: High, Chunk alignment: Aligned
2025-07-16 12:27:59,201 mlscoringinference [INFO | final_response_node.py : api_pass_signal : 108] --> API response validation result: Pass
2025-07-16 12:27:59,201 mlscoringinference [INFO | final_response_node.py : process_final_response : 245] --> API grounding validation passed successfully
2025-07-16 12:27:59,201 mlscoringinference [INFO | final_response_node.py : process_final_response : 279] --> Final response processing completed successfully
2025-07-16 12:27:59,213 mlscoringinference [INFO | main.py : communicate : 86] --> Interrupt resume completed successfully
2025-07-16 12:27:59,215 mlscoringinference [INFO | main.py : communicate : 134] --> Normal Messages goes to User.
2025-07-16 12:27:59,215 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-df621c30-a12f-4585-acf1-d1a3849f2176
2025-07-16 12:27:59,219 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 54f09b4c-d6cb-4cc8-a408-63702dafb9d6
2025-07-16 12:27:59,219 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 13:40:06,921 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 13:40:11,741 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 13:40:11,837 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:40:11,837 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:40:11,844 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:40:11,889 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 13:40:11,889 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 13:40:11,889 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 13:40:11,889 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 13:40:11,889 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 13:40:11,889 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 13:40:11,901 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 13:40:11,918 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:40:11,918 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:40:11,918 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:40:11,918 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:40:11,932 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:40:11,932 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:40:11,935 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:40:11,935 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:40:11,935 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:40:11,948 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:40:11,948 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:40:11,948 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:40:11,948 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:40:11,948 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 13:40:11,962 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 13:40:11,962 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 13:40:11,964 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:40:11,967 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 13:40:11,967 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 13:40:11,967 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 13:40:11,967 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 13:40:11,967 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 13:40:11,967 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:40:11,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 13:40:11,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 13:40:11,981 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 13:40:11,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:40:11,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 13:40:11,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 13:40:11,981 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 13:40:11,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:40:11,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 13:40:11,981 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 13:40:11,981 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 13:40:11,981 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 13:40:11,981 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 13:40:11,996 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 13:40:11,998 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 13:40:11,998 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 13:40:11,998 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 13:40:11,998 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:40:12,011 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 13:40:12,011 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 13:40:12,011 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 13:40:12,011 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 13:40:12,011 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 13:40:12,011 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 13:40:12,011 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 13:40:12,011 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 13:40:12,011 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 13:40:12,069 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 13:40:12,069 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 13:40:12,102 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 13:40:41,377 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='2f5eab9d-31ab-46b5-a695-17b75cf7bfcb' client_id='NAGSYA5' role='CLIENT' token='0165f8ae-39c3-440f-88a5-753be2c365c1' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Generate ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='9cbcbcde-ace0-45e1-9d7c-66492e9199dd')
2025-07-16 13:40:41,378 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 13:40:41,378 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 13:40:41,379 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 13:40:41,379 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 13:40:41,379 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 13:40:41,434 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 13:40:41,435 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 13:40:41,468 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 13:40:41,469 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 13:40:41,470 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 13:40:41,470 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 13:40:41,471 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:40:41,471 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:40:41,472 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:40:41,473 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 13:40:41,473 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 3
2025-07-16 13:40:41,473 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 143] --> Short input detected in agentic flow
2025-07-16 13:40:41,474 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 145] --> Invoking flow router runnable for short input in agentic flow
2025-07-16 13:40:42,890 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 147] --> Result from flow router: content=[{'type': 'tool_use', 'name': 'IDTypeClassifierTool', 'input': {'id_type': ['ledger_report']}, 'id': 'tooluse_tNUdbBzWSVOFk7Ehu3BlIw'}] additional_kwargs={} response_metadata={'ResponseMetadata': {'RequestId': 'fe112eb2-61f3-4a2d-abe0-c6b1e49946f5', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 16 Jul 2025 08:10:42 GMT', 'content-type': 'application/json', 'content-length': '299', 'connection': 'keep-alive', 'x-amzn-requestid': 'fe112eb2-61f3-4a2d-abe0-c6b1e49946f5'}, 'RetryAttempts': 0}, 'stopReason': 'tool_use', 'metrics': {'latencyMs': [919]}, 'model_name': 'anthropic.claude-3-sonnet-20240229-v1:0'} id='run--cfb072d4-719a-4d3b-b8b2-c6b8b854677b-0' tool_calls=[{'name': 'IDTypeClassifierTool', 'args': {'id_type': ['ledger_report']}, 'id': 'tooluse_tNUdbBzWSVOFk7Ehu3BlIw', 'type': 'tool_call'}] usage_metadata={'input_tokens': 991, 'output_tokens': 63, 'total_tokens': 1054, 'input_token_details': {'cache_creation': 0, 'cache_read': 0}}
2025-07-16 13:40:42,890 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 157] --> Returning matched choices: [{'id': 'ledger_report', 'text': 'Ledger Report'}]
2025-07-16 13:40:42,891 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 13:40:42,891 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 76] --> Returning options response from classify_id_type.{'action': 'option', 'response_text': 'Did you mean one of these options?', 'available_choices': [{'id': 'ledger_report', 'text': 'Ledger Report'}]}
2025-07-16 13:58:23,961 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 13:58:29,448 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 13:58:29,683 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:58:29,683 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:58:29,699 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:58:29,796 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 13:58:29,803 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 13:58:29,803 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 13:58:29,803 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 13:58:29,803 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 13:58:29,803 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 13:58:29,842 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 13:58:29,857 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:58:29,857 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:58:29,857 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:58:29,874 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:58:29,874 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:58:29,874 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:58:29,874 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:58:29,874 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:58:29,874 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:58:29,930 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 13:58:29,930 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 13:58:29,930 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:58:29,930 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 13:58:29,930 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 13:58:29,941 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 13:58:29,941 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 13:58:29,941 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:58:29,952 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 13:58:29,952 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 13:58:29,952 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 13:58:29,968 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 13:58:29,969 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 13:58:29,969 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:58:29,969 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 13:58:29,969 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 13:58:29,969 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 13:58:29,969 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:58:29,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 13:58:29,981 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 13:58:29,984 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 13:58:29,985 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:58:29,988 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 13:58:29,988 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 13:58:29,988 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 13:58:29,988 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 13:58:29,988 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 13:58:29,988 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 13:58:30,004 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 13:58:30,004 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 13:58:30,004 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 13:58:30,004 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 13:58:30,004 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 13:58:30,004 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 13:58:30,018 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 13:58:30,018 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 13:58:30,018 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 13:58:30,024 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 13:58:30,024 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 13:58:30,024 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 13:58:30,024 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 13:58:30,126 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 13:58:30,126 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 13:58:30,176 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 14:04:22,597 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 14:04:25,691 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 14:04:25,742 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:04:25,742 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:04:25,748 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:04:25,781 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 14:04:25,781 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 14:04:25,781 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 14:04:25,781 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 14:04:25,786 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 14:04:25,788 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 14:04:25,811 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 14:04:25,815 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:04:25,815 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:04:25,815 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:04:25,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:04:25,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:04:25,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:04:25,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:04:25,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:04:25,819 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:04:25,839 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:04:25,841 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:04:25,841 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:04:25,841 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:04:25,841 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 14:04:25,844 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 14:04:25,844 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 14:04:25,847 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:04:25,853 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 14:04:25,853 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 14:04:25,855 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 14:04:25,857 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 14:04:25,857 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 14:04:25,859 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:04:25,861 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 14:04:25,863 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 14:04:25,863 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 14:04:25,864 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:04:25,868 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 14:04:25,870 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 14:04:25,870 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 14:04:25,870 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:04:25,874 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 14:04:25,874 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 14:04:25,874 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 14:04:25,874 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 14:04:25,874 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 14:04:25,874 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 14:04:25,882 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 14:04:25,882 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 14:04:25,882 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 14:04:25,882 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:04:25,890 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 14:04:25,890 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 14:04:25,890 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 14:04:25,890 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 14:04:25,890 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 14:04:25,890 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 14:04:25,895 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 14:04:25,895 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 14:04:25,895 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 14:04:25,944 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 14:04:25,946 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 14:04:25,969 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 14:07:14,046 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='d33960f1-a74f-4e9c-b78c-d4ea82dbd0b0' client_id='NAGSYA5' role='CLIENT' token='bc725e52-6502-45b5-b88c-4ba4bc15d063' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Please provide the ledger report for the client.', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='b4308884-d0ee-40bc-931c-ba2cb0f4e1b9')
2025-07-16 14:07:14,046 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 14:07:14,047 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 14:07:14,047 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 14:07:14,047 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 14:07:14,047 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 14:07:14,094 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 14:07:14,095 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 14:07:14,119 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 14:07:14,119 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 14:07:14,121 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 14:07:14,121 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 14:07:14,122 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:07:14,122 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:07:14,123 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:07:14,123 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 14:07:14,124 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 8
2025-07-16 14:07:14,124 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 14:07:14,124 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 14:07:14,124 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : b4308884-d0ee-40bc-931c-ba2cb0f4e1b9
2025-07-16 14:07:14,126 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-4964ad22-c55a-400e-aee5-965ea99ebfce
2025-07-16 14:07:14,127 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-4964ad22-c55a-400e-aee5-965ea99ebfce
2025-07-16 14:07:14,127 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'Please provide the ledger report for the client.'
2025-07-16 14:07:14,136 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 16
2025-07-16 14:07:14,163 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 14:07:16,890 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 14:07:16,890 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 14:07:16,891 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 14:07:16,892 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 14:07:16,895 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 14:07:16,896 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 14:07:16,896 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 14:07:16,898 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 14:07:16,899 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 127
2025-07-16 14:07:16,901 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 14:07:23,096 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 14:07:23,096 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 14:07:23,097 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 14:07:23,099 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 14:07:23,099 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 14:07:23,102 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 14:07:23,103 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need some additional details:**\n\n- Start date (from_Date) in MM/DD/YYYY format\n- End date (to_Date) in MM/DD/YYYY format \n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery method (Link or Email)\n\nPlease provide these details so I can fetch your ledger report.'}, 'id': 'tooluse_pJqCe-pMT_e_VjpndMD5Kg', 'type': 'tool_call'}
2025-07-16 14:07:23,103 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 14:07:23,104 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 14:07:23,104 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need some addi...
2025-07-16 14:07:23,104 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 14:07:23,105 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 14:07:23,105 mlscoringinference [WARNING | api_guard.py : get_ban_words_guard : 79] --> Banned words detected: ['from_date', 'to_date']
2025-07-16 14:07:23,105 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 30] --> Banned words validation failed: You are disclosing technical details about APIs & their parameter, this poses security risk.
2025-07-16 14:07:23,109 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 14:07:23,112 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 14:07:23,113 mlscoringinference [INFO | state_utils.py : inject_tool_message : 25] --> No tool_calls found in the latest AIMessage. Skipping injection.
2025-07-16 14:07:23,114 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 14:07:23,116 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 381
2025-07-16 14:07:23,118 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 14:07:29,946 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 14:07:29,947 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 14:07:29,947 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 14:07:29,949 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 14:07:29,949 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 14:07:29,956 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 14:07:29,957 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger statement, I need a few more details:**\n\n- Start date (e.g. 04/01/2025 for current financial year)\n- End date (e.g. 06/30/2025) \n- Which exchange segment - Combine (equity + commodity) or MTF (margin trading facility)\n- Date type - Voucher date or Effective date\n- How would you like to receive the report - download link or email?\n\nPlease let me know these details so I can process your ledger statement request.'}, 'id': 'tooluse_B1V7MyigSGi3sEWMm4B6wg', 'type': 'tool_call'}
2025-07-16 14:07:29,958 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 14:07:29,958 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 14:07:29,958 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger statement, I need a few ...
2025-07-16 14:07:29,959 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 14:07:29,959 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 14:07:29,959 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 14:07:29,960 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 14:07:29,960 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 14:07:29,963 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 14:07:29,967 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 14:07:29,967 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-4964ad22-c55a-400e-aee5-965ea99ebfce
2025-07-16 14:07:29,967 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: d33960f1-a74f-4e9c-b78c-d4ea82dbd0b0
2025-07-16 14:07:29,968 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 14:09:25,438 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='707e7699-9cf5-4584-b4b2-942c78966a86' client_id='NAGSYA5' role='CLIENT' token='835334ef-0a65-4856-a959-96c9f1f8e1c1' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Get my ledger report', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='4c0f9f61-b59e-4154-9a7f-668620981d85')
2025-07-16 14:09:25,438 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 14:09:25,438 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 14:09:25,439 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 14:09:25,440 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 14:09:25,440 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 14:09:25,587 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 14:09:25,588 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 14:09:25,615 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 14:09:25,615 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 14:09:25,616 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 14:09:25,616 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 14:09:25,616 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:09:25,617 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:09:25,617 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:09:25,618 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 14:09:25,618 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 4
2025-07-16 14:09:25,618 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 14:09:25,618 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 14:09:25,619 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 4c0f9f61-b59e-4154-9a7f-668620981d85
2025-07-16 14:09:25,619 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-8cd56ac8-d6c0-4f7d-bf75-8f575d8c9a0e
2025-07-16 14:09:25,619 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-8cd56ac8-d6c0-4f7d-bf75-8f575d8c9a0e
2025-07-16 14:09:25,620 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'Get my ledger report'
2025-07-16 14:09:25,627 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 9
2025-07-16 14:09:25,628 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 14:09:28,052 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 14:09:28,053 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 14:09:28,054 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 14:09:28,054 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 14:09:28,058 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 14:09:28,060 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 14:09:28,061 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 14:09:28,061 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 14:09:28,062 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 113
2025-07-16 14:09:28,062 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 14:09:33,656 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 14:09:33,656 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 14:09:33,656 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 14:09:33,658 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 14:09:33,658 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 14:09:33,662 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 14:09:33,664 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need the following details:**\n\n- Client ID (if not NAGSYA5)\n- Start date (mm/dd/yyyy format) \n- End date (mm/dd/yyyy format)\n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery (Link or Email)\n\nPlease provide the missing information so I can fetch your ledger report.'}, 'id': 'tooluse_IBFRlEqeSK2BCT5cBGYO-g', 'type': 'tool_call'}
2025-07-16 14:09:33,664 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 14:09:33,664 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 14:09:33,664 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need the follo...
2025-07-16 14:09:33,665 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 14:09:33,665 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 14:09:33,665 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 14:09:33,665 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 14:09:33,665 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 14:09:33,668 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 14:09:33,670 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 14:09:33,674 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-8cd56ac8-d6c0-4f7d-bf75-8f575d8c9a0e
2025-07-16 14:09:33,675 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 707e7699-9cf5-4584-b4b2-942c78966a86
2025-07-16 14:09:33,677 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 14:13:00,136 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 14:13:07,194 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 14:13:07,316 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:13:07,316 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:13:07,322 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:13:07,390 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 14:13:07,392 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 14:13:07,392 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 14:13:07,397 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 14:13:07,399 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 14:13:07,402 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 14:13:07,433 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 14:13:07,450 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:13:07,450 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:13:07,450 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:13:07,469 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:13:07,469 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:13:07,469 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:13:07,478 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:13:07,478 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:13:07,482 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:13:07,496 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:13:07,496 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:13:07,512 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:13:07,512 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:13:07,512 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 14:13:07,514 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 14:13:07,514 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 14:13:07,528 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:13:07,532 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 14:13:07,532 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 14:13:07,532 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 14:13:07,545 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 14:13:07,545 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 14:13:07,545 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:13:07,545 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 14:13:07,545 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 14:13:07,560 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 14:13:07,563 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:13:07,565 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 14:13:07,565 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 14:13:07,576 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 14:13:07,576 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:13:07,586 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 14:13:07,586 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 14:13:07,586 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 14:13:07,593 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 14:13:07,593 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 14:13:07,593 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 14:13:07,607 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 14:13:07,607 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 14:13:07,607 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 14:13:07,616 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:13:07,626 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 14:13:07,626 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 14:13:07,626 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 14:13:07,626 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 14:13:07,626 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 14:13:07,638 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 14:13:07,639 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 14:13:07,639 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 14:13:07,639 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 14:13:07,755 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 14:13:07,755 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 14:13:07,836 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 14:16:13,757 mlscoringinference [INFO | secrets.py : get_secret : 10] --> Fetching secrets for environment: dev
2025-07-16 14:16:20,511 mlscoringinference [INFO | langfuse_client.py : <module> : 19] --> Langfuse client initialized successfully
2025-07-16 14:16:20,607 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:16:20,623 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:16:20,623 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:16:20,686 mlscoringinference [INFO | assistant_tool.py : TradingAgent : 24] --> Trading Agent Call.
2025-07-16 14:16:20,686 mlscoringinference [INFO | assistant_tool.py : ReportAgent : 52] --> Report Agent Call.
2025-07-16 14:16:20,686 mlscoringinference [INFO | assistant_tool.py : AccountAgent : 93] --> Account Agent Call.
2025-07-16 14:16:20,686 mlscoringinference [INFO | assistant_tool.py : InformationCentreAgent : 138] --> Information Centre Agent Call.
2025-07-16 14:16:20,702 mlscoringinference [INFO | assistant_tool.py : FundAgent : 169] --> Fund Agent Call.
2025-07-16 14:16:20,704 mlscoringinference [INFO | assistant_tool.py : DPAgent : 195] --> DP Agent Call.
2025-07-16 14:16:20,743 mlscoringinference [INFO | react_tool.py : <module> : 155] --> Initializing basic tools...
2025-07-16 14:16:20,754 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:16:20,754 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:16:20,754 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:16:20,766 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:16:20,766 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:16:20,766 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:16:20,772 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:16:20,772 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:16:20,772 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:16:20,797 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:16:20,797 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:16:20,797 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:16:20,797 mlscoringinference [INFO | langgraph_builder.py : <module> : 80] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:16:20,797 mlscoringinference [INFO | langgraph_builder.py : <module> : 82] --> Rannnable Importing.
2025-07-16 14:16:20,813 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for report_agent_schema Creating...
2025-07-16 14:16:20,813 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\report_agent_schema.json
2025-07-16 14:16:20,813 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:16:20,830 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for report_agent_schema created successfully.
2025-07-16 14:16:20,830 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for account_agent_schema Creating...
2025-07-16 14:16:20,830 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_schema.json
2025-07-16 14:16:20,830 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\account_agent_static_data.json
2025-07-16 14:16:20,830 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 14:16:20,830 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:16:20,851 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for account_agent_schema created successfully.
2025-07-16 14:16:20,851 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for fund_agent_schema Creating...
2025-07-16 14:16:20,851 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\fund_agent_schema.json
2025-07-16 14:16:20,851 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:16:20,862 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for fund_agent_schema created successfully.
2025-07-16 14:16:20,862 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for trading_agent_schema Creating...
2025-07-16 14:16:20,862 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\trading_agent_schema.json
2025-07-16 14:16:20,870 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:16:20,878 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for trading_agent_schema created successfully.
2025-07-16 14:16:20,878 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 34] --> Information React agent for information_centre_agent_schema Creating...
2025-07-16 14:16:20,878 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_schema.json
2025-07-16 14:16:20,882 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 38] --> API Specification loaded.
2025-07-16 14:16:20,882 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\information_centre_agent_static_data.json
2025-07-16 14:16:20,882 mlscoringinference [INFO | json_utils.py : update_paths_with_base_url : 94] --> 'paths' key not found in JSON; returning original data unchanged.
2025-07-16 14:16:20,892 mlscoringinference [INFO | information_center_agent.py : get_information_runnable_react : 48] --> Information React agent runnable for information_centre_agent_schema created successfully.
2025-07-16 14:16:20,892 mlscoringinference [INFO | react_agent.py : get_runnable_react : 36] --> React agent for combine Creating...
2025-07-16 14:16:20,892 mlscoringinference [INFO | json_utils.py : load_json_file : 54] --> Loading JSON file from path: C:\Users\rohangupta\Documents\new-voice-agent-chatbot_wrapper\voice_agent\chatbot_backend\agentic_flow\openapi_schema\combine.json
2025-07-16 14:16:20,910 mlscoringinference [INFO | react_agent.py : get_runnable_react : 44] --> API Specification loaded.
2025-07-16 14:16:20,910 mlscoringinference [INFO | react_agent.py : get_runnable_react : 50] --> React agent runnable for combine created successfully.
2025-07-16 14:16:20,910 mlscoringinference [INFO | langgraph_builder.py : <module> : 93] --> Rannnable for all agents created successfully.
2025-07-16 14:16:20,924 mlscoringinference [INFO | chatbot_service.py : <module> : 28] --> Chatbot service initialization started.
2025-07-16 14:16:20,926 mlscoringinference [INFO | session_store.py : __init__ : 29] --> Initializing RedisSessionStore.
2025-07-16 14:16:20,926 mlscoringinference [INFO | session_store.py : __init__ : 33] --> RedisSessionStore initialized successfully.
2025-07-16 14:16:20,926 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 14:16:20,926 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 14:16:20,926 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 14:16:20,926 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 14:16:21,050 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 14:16:21,052 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 14:16:21,117 mlscoringinference [INFO | chatbot_service.py : <module> : 44] --> Chatbot service initialized successfully.
2025-07-16 14:17:07,611 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='702099c3-edb2-4c4c-b321-a47145c8be02' client_id='NAGSYA5' role='CLIENT' token='3479f328-a3b5-4708-9ba5-e822fc3e30ec' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Can you give me the ledger report?', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='17686e4b-8439-4143-9d97-2e5899131711')
2025-07-16 14:17:07,613 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 14:17:07,613 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 14:17:07,615 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 14:17:07,615 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 14:17:07,617 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 14:17:07,730 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 14:17:07,732 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 14:17:07,793 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 14:17:07,796 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 14:17:07,797 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 14:17:07,799 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 14:17:07,804 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:17:07,805 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:17:07,806 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:17:07,809 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 14:17:07,810 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 7
2025-07-16 14:17:07,810 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 14:17:07,810 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 14:17:07,812 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : 17686e4b-8439-4143-9d97-2e5899131711
2025-07-16 14:17:07,815 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-4b07bc11-5779-4d3d-ba2b-65246fcb1535
2025-07-16 14:17:07,816 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-4b07bc11-5779-4d3d-ba2b-65246fcb1535
2025-07-16 14:17:07,817 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'Can you give me the ledger report?'
2025-07-16 14:17:07,828 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 13
2025-07-16 14:17:07,866 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 14:17:10,873 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 14:17:10,876 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 14:17:10,879 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 14:17:10,881 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 14:17:10,884 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 14:17:10,885 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 14:17:10,886 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 14:17:10,887 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 14:17:10,887 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 121
2025-07-16 14:17:10,888 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 14:17:18,624 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 14:17:18,624 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 14:17:18,624 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 14:17:18,625 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 14:17:18,626 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 14:17:18,629 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 14:17:18,636 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Start date (mm/dd/yyyy format)\n- End date (mm/dd/yyyy format) \n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- Report delivery method (Link or Email)\n\nPlease provide the missing information so I can process your ledger report request.'}, 'id': 'tooluse_ETDBRsTDS8ChAvCPQ2yXTw', 'type': 'tool_call'}
2025-07-16 14:17:18,637 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 14:17:18,639 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 14:17:18,639 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 14:17:18,640 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 14:17:18,641 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 14:17:18,641 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 14:17:18,641 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 14:17:18,641 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 14:17:18,645 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 14:17:18,646 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 14:17:18,647 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-4b07bc11-5779-4d3d-ba2b-65246fcb1535
2025-07-16 14:17:18,647 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 702099c3-edb2-4c4c-b321-a47145c8be02
2025-07-16 14:17:18,647 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
2025-07-16 14:18:37,491 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 60] --> Received chatbot payload: user_id='NAGSYA5' session_id='96973ee2-2bec-4a12-8617-2dc2a1ae2062' client_id='NAGSYA5' role='CLIENT' token='5bb2383d-a5ff-4d2e-86c0-f53141627361' interaction=InteractionV2(type='AGENTIC_FLOW', attachement='', input=InputData(text='Please provide the ledger report for my account.', id=None, from_date=None, to_date=None), metadata=Metadata(source='web'), request_id='b9592e41-5a5f-4251-94b9-6a5ca3f4caf4')
2025-07-16 14:18:37,491 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 61] --> Starting to classify payload ID type.
2025-07-16 14:18:37,491 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 103] --> Graph State define Initiated.
2025-07-16 14:18:37,492 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 105] --> Graph State define Successfull.
2025-07-16 14:18:37,493 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 108] --> Defining nodes in the graph.
2025-07-16 14:18:37,493 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 115] --> Registering agents and tools in the graph.
2025-07-16 14:18:37,732 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 177] --> Adding edges to the graph.
2025-07-16 14:18:37,733 mlscoringinference [INFO | langgraph_builder.py : create_langgraph_supervisor : 227] --> LangGraph Supervisor created successfully.
2025-07-16 14:18:37,795 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 21] --> Reading JSON file to extract id_types.
2025-07-16 14:18:37,799 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 25] --> Loaded JSON content.
2025-07-16 14:18:37,800 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 37] --> Added default 'home' button to id_types.
2025-07-16 14:18:37,801 mlscoringinference [INFO | simple_flow_router.py : extract_id_types_from_json : 39] --> Extracted id_types: [{'id': 'ledger_report', 'text': 'Ledger Report'}, {'id': 'home', 'text': 'home'}, {'id': 'profit_and_loss_statement', 'text': 'Profit and loss statement'}, {'id': 'my_details', 'text': 'My details'}, {'id': 'dp_statement', 'text': 'DP Statement'}, {'id': 'brokerage_report', 'text': 'Brokerage Report'}, {'id': 'itr_statement', 'text': 'ITR Statement'}, {'id': 'available_margin', 'text': 'Available Margin'}, {'id': 'my_dashboard', 'text': 'My Dashboard'}, {'id': 'tds_certificate', 'text': 'TDS Certificate'}, {'id': 'stt_ctt_certificate', 'text': 'STT/CTT Certificate'}, {'id': 'markets_research_client', 'text': 'Market Research'}, {'id': 'emodification', 'text': 'E-modification'}, {'id': 'upcoming_buyback', 'text': 'Upcoming Buyback'}, {'id': 'mf_status', 'text': 'Mutual Fund Status'}, {'id': 'fund_payout_status', 'text': 'Fund Payout Status'}, {'id': 'margin_shortage', 'text': 'Margin Shortage Penalty'}, {'id': 'rta_statement', 'text': 'RTA Statement'}, {'id': 'dormant_status', 'text': 'Dormant Reactivation & Status'}, {'id': 'fund_transfer_status', 'text': 'Funds Transfer Status'}, {'id': 'stop_online_trade', 'text': 'Stop Online Trading'}, {'id': 'start_online_trade', 'text': 'Start Online Trading'}, {'id': 'grandfather_pnl', 'text': 'Grandfather Profit and Loss statement'}, {'id': 'sauda_details', 'text': 'Sauda Detail'}, {'id': 'ipo', 'text': 'IPO'}, {'id': 'digi_cmr', 'text': 'DIGI CMR Report'}, {'id': 'contract_note', 'text': 'Contract Note'}, {'id': 'dis_drf_status', 'text': 'DIS/DRF Status'}, {'id': 'segment_addition', 'text': 'Segment Addition'}, {'id': 'advisor_request', 'text': 'Advisor Request'}]
2025-07-16 14:18:37,802 mlscoringinference [INFO | llm_models.py : get_llm_model : 30] --> Using default model ID: anthropic.claude-3-sonnet-20240229-v1:0
2025-07-16 14:18:37,803 mlscoringinference [INFO | llm_models.py : get_llm_model : 34] --> Initializing ChatBedrockConverse model
2025-07-16 14:18:37,804 mlscoringinference [INFO | llm_models.py : get_llm_model : 43] --> ChatBedrockConverse model initialized successfully
2025-07-16 14:18:37,805 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 120] --> Starting ID type classification...
2025-07-16 14:18:37,805 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 141] --> length of input - 8
2025-07-16 14:18:37,806 mlscoringinference [INFO | simple_flow_router.py : classify_id_type : 168] --> Long input detected or not in deterministic, skipping classification
2025-07-16 14:18:37,806 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 73] --> Finished classifying payload ID type.
2025-07-16 14:18:37,806 mlscoringinference [INFO | main.py : communicate : 34] --> Payload request id is : b9592e41-5a5f-4251-94b9-6a5ca3f4caf4
2025-07-16 14:18:37,808 mlscoringinference [INFO | main.py : communicate : 97] --> new request id: req-3f546b45-cf62-4444-ac45-294e6ba29b66
2025-07-16 14:18:37,808 mlscoringinference [INFO | main.py : communicate : 110] --> Starting new graph invocation with request_id: req-3f546b45-cf62-4444-ac45-294e6ba29b66
2025-07-16 14:18:37,808 mlscoringinference [INFO | main.py : communicate : 119] --> Invoking graph with user query: 'Please provide the ledger report for my account.'
2025-07-16 14:18:37,818 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 16
2025-07-16 14:18:37,819 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 26] --> Assistance started..
2025-07-16 14:18:39,727 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 39] --> Assistance Break.
2025-07-16 14:18:39,728 mlscoringinference [INFO | supervisor_agent_v2.py : __call__ : 42] --> Assitance completed.
2025-07-16 14:18:39,730 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 15] --> Primary Router function Activated.
2025-07-16 14:18:39,730 mlscoringinference [INFO | dynamic_router.py : route_primary_assistant : 24] --> Primary Router state Routed to : ReportAgent.
2025-07-16 14:18:39,733 mlscoringinference [INFO | react_agent.py : __call__ : 61] --> react agent initiated...
2025-07-16 14:18:39,734 mlscoringinference [INFO | state_utils.py : inject_tool_message : 21] --> Tool message injection Initiated.
2025-07-16 14:18:39,736 mlscoringinference [INFO | state_utils.py : inject_tool_message : 42] --> Tool message for ReportAgent injected successfully
2025-07-16 14:18:39,736 mlscoringinference [INFO | react_agent.py : __call__ : 68] --> Client ID from payload: NAGSYA5
2025-07-16 14:18:39,736 mlscoringinference [INFO | llm_models.py : pre_model_hook : 47] --> max tokens till now: 127
2025-07-16 14:18:39,736 mlscoringinference [INFO | react_agent.py : __call__ : 90] --> Invoking React agent with inputs...
2025-07-16 14:18:46,076 mlscoringinference [INFO | react_agent.py : __call__ : 92] --> React agent invoked successfully.
2025-07-16 14:18:46,076 mlscoringinference [INFO | react_agent.py : __call__ : 107] --> Assistance Break.
2025-07-16 14:18:46,076 mlscoringinference [INFO | react_agent.py : __call__ : 110] --> react agent completed.
2025-07-16 14:18:46,078 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 34] --> Report Dynamic Router function Activated.
2025-07-16 14:18:46,078 mlscoringinference [INFO | dynamic_router.py : report_dynamic_router : 48] --> Report Dynamic Router state has AskBackToUser Tool.
2025-07-16 14:18:46,083 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 15] --> Report Human Node Activated.
2025-07-16 14:18:46,087 mlscoringinference [INFO | human_in_loop_node.py : report_human_node : 22] --> Ask back content: {'name': 'AskBackToUser', 'args': {'interrupt_message': '**To generate your ledger report, I need a few more details:**\n\n- Start date for the report (mm/dd/yyyy)\n- End date for the report (mm/dd/yyyy) \n- Exchange segment (Combine or MTF)\n- Date type (Voucher or Effective)\n- How would you like to receive the report (Link or Email)?\n\nPlease provide this information so I can process your ledger report request.'}, 'id': 'tooluse_TYSM75ZaQQGGfFFcyHHjWg', 'type': 'tool_call'}
2025-07-16 14:18:46,088 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 17] --> Starting Ask Back final check...
2025-07-16 14:18:46,088 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 56] --> Starting Regex output guard...
2025-07-16 14:18:46,089 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 59] --> Checking message for forbidden patterns: **To generate your ledger report, I need a few mor...
2025-07-16 14:18:46,090 mlscoringinference [INFO | api_guard.py : get_regex_output_guard : 66] --> Regex guard check completed - no forbidden patterns detected
2025-07-16 14:18:46,090 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 74] --> Starting Banned words guard...
2025-07-16 14:18:46,090 mlscoringinference [INFO | api_guard.py : get_ban_words_guard : 83] --> Banned words guard check completed - no banned words detected.
2025-07-16 14:18:46,090 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 33] --> Regex and ban words validation passed successfully
2025-07-16 14:18:46,091 mlscoringinference [INFO | ask_back_guard.py : ask_back_final_check : 35] --> Ask Back final check completed - valid response received
2025-07-16 14:18:46,094 mlscoringinference [INFO | main.py : communicate : 121] --> Graph invocation completed successfully
2025-07-16 14:18:46,096 mlscoringinference [INFO | main.py : communicate : 132] --> Intrupted Messages goes to User.
2025-07-16 14:18:46,096 mlscoringinference [INFO | main.py : communicate : 138] --> Request id is : req-3f546b45-cf62-4444-ac45-294e6ba29b66
2025-07-16 14:18:46,096 mlscoringinference [INFO | main.py : communicate : 148] --> Response generated successfully for session_id: 96973ee2-2bec-4a12-8617-2dc2a1ae2062
2025-07-16 14:18:46,097 mlscoringinference [INFO | chatbot_service.py : get_chatbot_response : 119] --> Handled via agentic (LangGraph) flow.
